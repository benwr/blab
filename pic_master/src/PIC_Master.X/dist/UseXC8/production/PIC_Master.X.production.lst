

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Wed Sep 17 22:05:52 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F46J50
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    63                           	psect	param0,global,class=BANK0,space=1,delta=1
    64  0000                     _BAUDCONbits	set	3966
    65  0000                     _INTCONbits	set	4082
    66  0000                     _IPR1bits	set	3999
    67  0000                     _LATB	set	3978
    68  0000                     _LATD	set	3980
    69  0000                     _LATDbits	set	3980
    70  0000                     _OSCCON	set	4051
    71  0000                     _OSCCONbits	set	4051
    72  0000                     _OSCTUNEbits	set	3995
    73  0000                     _PIE1bits	set	3997
    74  0000                     _PIR1bits	set	3998
    75  0000                     _PORTBbits	set	3969
    76  0000                     _RCONbits	set	4048
    77  0000                     _RCREG1	set	4015
    78  0000                     _RCSTA1bits	set	4012
    79  0000                     _SPBRG1	set	4016
    80  0000                     _SPBRGH1	set	3967
    81  0000                     _SSPADD	set	4040
    82  0000                     _SSPBUF	set	4041
    83  0000                     _SSPCON1	set	4038
    84  0000                     _SSPCON1bits	set	4038
    85  0000                     _SSPCON2	set	4037
    86  0000                     _SSPCON2bits	set	4037
    87  0000                     _SSPSTAT	set	4039
    88  0000                     _SSPSTATbits	set	4039
    89  0000                     _T0CON	set	4053
    90  0000                     _T0CONbits	set	4053
    91  0000                     _T1CON	set	4045
    92  0000                     _T1CONbits	set	4045
    93  0000                     _T1GCON	set	3994
    94  0000                     _T1GCONbits	set	3994
    95  0000                     _TMR0H	set	4055
    96  0000                     _TMR0L	set	4054
    97  0000                     _TMR1H	set	4047
    98  0000                     _TMR1L	set	4046
    99  0000                     _TRISB	set	3987
   100  0000                     _TRISBbits	set	3987
   101  0000                     _TRISCbits	set	3988
   102  0000                     _TRISD	set	3989
   103  0000                     _TXREG1	set	4014
   104  0000                     _TXSTA1bits	set	4013
   105                           
   106                           	psect	nvBANK0
   107  0000CF                     __pnvBANK0:
   108                           	opt stack 0
   109  0000CF                     _ic_ptr:
   110                           	opt stack 0
   111  0000CF                     	ds	2
   112                           
   113                           ; #config settings
   114  0000                     
   115                           	psect	cinit
   116  00161A                     __pcinit:
   117                           	opt stack 0
   118  00161A                     start_initialization:
   119                           	opt stack 0
   120  00161A                     __initialization:
   121                           	opt stack 0
   122                           
   123                           ; Clear objects allocated to BANK1 (162 bytes)
   124  00161A  EE01  F000         	lfsr	0,__pbssBANK1
   125  00161E  0EA2               	movlw	162
   126  001620                     clear_0:
   127  001620  6AEE               	clrf	postinc0,c
   128  001622  06E8               	decf	wreg,f,c
   129  001624  E1FD               	bnz	clear_0
   130                           
   131                           ; Clear objects allocated to BANK0 (61 bytes)
   132  001626  EE00  F060         	lfsr	0,__pbssBANK0
   133  00162A  0E3D               	movlw	61
   134  00162C                     clear_1:
   135  00162C  6AEE               	clrf	postinc0,c
   136  00162E  06E8               	decf	wreg,f,c
   137  001630  E1FD               	bnz	clear_1
   138                           
   139                           ; Clear objects allocated to COMRAM (8 bytes)
   140  001632  EE00  F02E         	lfsr	0,__pbssCOMRAM
   141  001636  0E08               	movlw	8
   142  001638                     clear_2:
   143  001638  6AEE               	clrf	postinc0,c
   144  00163A  06E8               	decf	wreg,f,c
   145  00163C  E1FD               	bnz	clear_2
   146  00163E                     end_of_initialization:
   147                           	opt stack 0
   148  00163E                     __end_of__initialization:
   149                           	opt stack 0
   150  00163E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   151  001640  6EF8               	movwf	tblptru,c
   152  001642  0100               	movlb	0
   153  001644  EF23  F003         	goto	_main	;jump to C main() function
   154                           tblptru	equ	0xFF8
   155                           postinc0	equ	0xFEE
   156                           wreg	equ	0xFE8
   157                           
   158                           	psect	bssCOMRAM
   159  00002E                     __pbssCOMRAM:
   160                           	opt stack 0
   161  00002E                     _MQ_Main_Willing_to_block:
   162                           	opt stack 0
   163  00002E                     	ds	1
   164  00002F                     _uart_send_buffer:
   165                           	opt stack 0
   166  00002F                     	ds	7
   167                           tblptru	equ	0xFF8
   168                           postinc0	equ	0xFEE
   169                           wreg	equ	0xFE8
   170                           
   171                           	psect	bssBANK0
   172  000060                     __pbssBANK0:
   173                           	opt stack 0
   174  000060                     _ToMainLow_MQ:
   175                           	opt stack 0
   176  000060                     	ds	54
   177  000096                     _uart_receive_buffer:
   178                           	opt stack 0
   179  000096                     	ds	7
   180                           tblptru	equ	0xFF8
   181                           postinc0	equ	0xFEE
   182                           wreg	equ	0xFE8
   183                           
   184                           	psect	bssBANK1
   185  000100                     __pbssBANK1:
   186                           	opt stack 0
   187  000100                     _FromMainHigh_MQ:
   188                           	opt stack 0
   189  000100                     	ds	54
   190  000136                     _FromMainLow_MQ:
   191                           	opt stack 0
   192  000136                     	ds	54
   193  00016C                     _ToMainHigh_MQ:
   194                           	opt stack 0
   195  00016C                     	ds	54
   196                           tblptru	equ	0xFF8
   197                           postinc0	equ	0xFEE
   198                           wreg	equ	0xFE8
   199                           
   200                           	psect	cstackBANK1
   201  0001A2                     __pcstackBANK1:
   202                           	opt stack 0
   203  0001A2                     ?___lwmod:
   204                           	opt stack 0
   205  0001A2                     i2c_configure_slave@addr:
   206                           	opt stack 0
   207  0001A2                     uart_send_byte@sendByte:
   208                           	opt stack 0
   209  0001A2                     uart_get_byte@return_value:
   210                           	opt stack 0
   211  0001A2                     OpenTimer0@config:
   212                           	opt stack 0
   213  0001A2                     OpenTimer1@config1:
   214                           	opt stack 0
   215  0001A2                     init_queue@qptr:
   216                           	opt stack 0
   217  0001A2                     start_i2c_slave_reply@msg:
   218                           	opt stack 0
   219  0001A2                     init_i2c@ic:
   220                           	opt stack 0
   221  0001A2                     timer0_lthread@tptr:
   222                           	opt stack 0
   223  0001A2                     init_timer1_lthread@tptr:
   224                           	opt stack 0
   225  0001A2                     uart_lthread@uptr:
   226                           	opt stack 0
   227  0001A2                     ___lwmod@dividend:
   228                           	opt stack 0
   229  0001A2                     memcpy@d1:
   230                           	opt stack 0
   231                           
   232                           ; 2 bytes @ 0x0
   233  0001A2                     	ds	1
   234  0001A3                     ??_OpenTimer1:
   235                           
   236                           ; 0 bytes @ 0x1
   237  0001A3                     	ds	1
   238  0001A4                     ??_start_i2c_slave_reply:
   239  0001A4                     init_queue@i:
   240                           	opt stack 0
   241  0001A4                     OpenTimer1@config:
   242                           	opt stack 0
   243  0001A4                     timer0_lthread@msgtype:
   244                           	opt stack 0
   245  0001A4                     uart_lthread@msgtype:
   246                           	opt stack 0
   247  0001A4                     ___lwmod@divisor:
   248                           	opt stack 0
   249  0001A4                     memcpy@s1:
   250                           	opt stack 0
   251                           
   252                           ; 2 bytes @ 0x2
   253  0001A4                     	ds	1
   254  0001A5                     
   255                           ; 0 bytes @ 0x3
   256  0001A5                     	ds	1
   257  0001A6                     start_i2c_slave_reply@length:
   258                           	opt stack 0
   259  0001A6                     ___lwmod@counter:
   260                           	opt stack 0
   261  0001A6                     timer0_lthread@length:
   262                           	opt stack 0
   263  0001A6                     uart_lthread@length:
   264                           	opt stack 0
   265  0001A6                     memcpy@n:
   266                           	opt stack 0
   267                           
   268                           ; 2 bytes @ 0x4
   269  0001A6                     	ds	2
   270  0001A8                     timer0_lthread@msgbuffer:
   271                           	opt stack 0
   272  0001A8                     uart_lthread@msgbuffer:
   273                           	opt stack 0
   274  0001A8                     memcpy@d:
   275                           	opt stack 0
   276                           
   277                           ; 2 bytes @ 0x6
   278  0001A8                     	ds	2
   279  0001AA                     timer0_lthread@msgval:
   280                           	opt stack 0
   281  0001AA                     memcpy@s:
   282                           	opt stack 0
   283                           
   284                           ; 2 bytes @ 0x8
   285  0001AA                     	ds	2
   286  0001AC                     send_msg@qptr:
   287                           	opt stack 0
   288  0001AC                     recv_msg@qptr:
   289                           	opt stack 0
   290                           
   291                           ; 2 bytes @ 0xA
   292  0001AC                     	ds	2
   293  0001AE                     send_msg@length:
   294                           	opt stack 0
   295  0001AE                     recv_msg@maxlength:
   296                           	opt stack 0
   297                           
   298                           ; 1 bytes @ 0xC
   299  0001AE                     	ds	1
   300  0001AF                     send_msg@msgtype:
   301                           	opt stack 0
   302  0001AF                     recv_msg@msgtype:
   303                           	opt stack 0
   304                           
   305                           ; 2 bytes @ 0xD
   306  0001AF                     	ds	1
   307  0001B0                     send_msg@data:
   308                           	opt stack 0
   309                           
   310                           ; 2 bytes @ 0xE
   311  0001B0                     	ds	1
   312  0001B1                     recv_msg@data:
   313                           	opt stack 0
   314                           
   315                           ; 2 bytes @ 0xF
   316  0001B1                     	ds	1
   317  0001B2                     ??_send_msg:
   318                           
   319                           ; 0 bytes @ 0x10
   320  0001B2                     	ds	1
   321  0001B3                     ??_recv_msg:
   322  0001B3                     send_msg@tlength:
   323                           	opt stack 0
   324                           
   325                           ; 2 bytes @ 0x11
   326  0001B3                     	ds	2
   327  0001B5                     send_msg@slot:
   328                           	opt stack 0
   329  0001B5                     recv_msg@slot:
   330                           	opt stack 0
   331                           
   332                           ; 1 bytes @ 0x13
   333  0001B5                     	ds	1
   334  0001B6                     send_msg@qmsg:
   335                           	opt stack 0
   336  0001B6                     recv_msg@tlength:
   337                           	opt stack 0
   338                           
   339                           ; 2 bytes @ 0x14
   340  0001B6                     	ds	2
   341  0001B8                     FromMainHigh_sendmsg@msgtype:
   342                           	opt stack 0
   343  0001B8                     recv_msg@qmsg:
   344                           	opt stack 0
   345                           
   346                           ; 2 bytes @ 0x16
   347  0001B8                     	ds	1
   348  0001B9                     FromMainHigh_sendmsg@data:
   349                           	opt stack 0
   350                           
   351                           ; 2 bytes @ 0x17
   352  0001B9                     	ds	1
   353  0001BA                     ToMainLow_recvmsg@msgtype:
   354                           	opt stack 0
   355  0001BA                     ToMainHigh_recvmsg@msgtype:
   356                           	opt stack 0
   357                           
   358                           ; 2 bytes @ 0x18
   359  0001BA                     	ds	1
   360  0001BB                     FromMainHigh_sendmsg@length:
   361                           	opt stack 0
   362                           
   363                           ; 1 bytes @ 0x19
   364  0001BB                     	ds	1
   365  0001BC                     ToMainLow_recvmsg@data:
   366                           	opt stack 0
   367  0001BC                     ToMainHigh_recvmsg@data:
   368                           	opt stack 0
   369  0001BC                     timer1_lthread@tptr:
   370                           	opt stack 0
   371                           
   372                           ; 2 bytes @ 0x1A
   373  0001BC                     	ds	2
   374  0001BE                     ToMainLow_recvmsg@maxlength:
   375                           	opt stack 0
   376  0001BE                     ToMainHigh_recvmsg@maxlength:
   377                           	opt stack 0
   378  0001BE                     timer1_lthread@msgtype:
   379                           	opt stack 0
   380                           
   381                           ; 2 bytes @ 0x1C
   382  0001BE                     	ds	2
   383  0001C0                     timer1_lthread@length:
   384                           	opt stack 0
   385                           
   386                           ; 2 bytes @ 0x1E
   387  0001C0                     	ds	2
   388  0001C2                     timer1_lthread@msgbuffer:
   389                           	opt stack 0
   390                           
   391                           ; 2 bytes @ 0x20
   392  0001C2                     	ds	2
   393  0001C4                     timer1_lthread@retval:
   394                           	opt stack 0
   395                           
   396                           ; 1 bytes @ 0x22
   397  0001C4                     	ds	1
   398  0001C5                     ??_main:
   399                           
   400                           ; 0 bytes @ 0x23
   401  0001C5                     	ds	1
   402  0001C6                     main@alex_counter:
   403                           	opt stack 0
   404                           
   405                           ; 1 bytes @ 0x24
   406  0001C6                     	ds	1
   407  0001C7                     main@msgbuffer:
   408                           	opt stack 0
   409                           
   410                           ; 11 bytes @ 0x25
   411  0001C7                     	ds	11
   412  0001D2                     main@uthread_data:
   413                           	opt stack 0
   414                           
   415                           ; 2 bytes @ 0x30
   416  0001D2                     	ds	2
   417  0001D4                     main@t0thread_data:
   418                           	opt stack 0
   419                           
   420                           ; 2 bytes @ 0x32
   421  0001D4                     	ds	2
   422  0001D6                     main@last_reg_recvd:
   423                           	opt stack 0
   424                           
   425                           ; 1 bytes @ 0x34
   426  0001D6                     	ds	1
   427  0001D7                     main@i_677:
   428                           	opt stack 0
   429                           
   430                           ; 2 bytes @ 0x35
   431  0001D7                     	ds	2
   432  0001D9                     main@myByte:
   433                           	opt stack 0
   434                           
   435                           ; 1 bytes @ 0x37
   436  0001D9                     	ds	1
   437  0001DA                     main@t1thread_data:
   438                           	opt stack 0
   439                           
   440                           ; 2 bytes @ 0x38
   441  0001DA                     	ds	2
   442  0001DC                     main@msgtype:
   443                           	opt stack 0
   444                           
   445                           ; 1 bytes @ 0x3A
   446  0001DC                     	ds	1
   447  0001DD                     main@length:
   448                           	opt stack 0
   449                           
   450                           ; 1 bytes @ 0x3B
   451  0001DD                     	ds	1
   452  0001DE                     main@ic:
   453                           	opt stack 0
   454                           
   455                           ; 28 bytes @ 0x3C
   456  0001DE                     	ds	28
   457                           tblptru	equ	0xFF8
   458                           postinc0	equ	0xFEE
   459                           wreg	equ	0xFE8
   460                           
   461                           	psect	cstackBANK0
   462  00009D                     __pcstackBANK0:
   463                           	opt stack 0
   464  00009D                     ?_in_high_int:
   465                           	opt stack 0
   466  00009D                     handle_start@data_read:
   467                           	opt stack 0
   468  00009D                     check_msg@qptr:
   469                           	opt stack 0
   470  00009D                     WriteTimer0@timer0:
   471                           	opt stack 0
   472  00009D                     i2memcpy@d1:
   473                           	opt stack 0
   474                           
   475                           ; 2 bytes @ 0x0
   476  00009D                     	ds	2
   477  00009F                     ??_check_msg:
   478  00009F                     ?_in_low_int:
   479                           	opt stack 0
   480  00009F                     WriteTimer0@timer:
   481                           	opt stack 0
   482  00009F                     i2memcpy@s1:
   483                           	opt stack 0
   484                           
   485                           ; 2 bytes @ 0x2
   486  00009F                     	ds	2
   487  0000A1                     i2memcpy@n:
   488                           	opt stack 0
   489                           
   490                           ; 2 bytes @ 0x4
   491  0000A1                     	ds	2
   492  0000A3                     i2memcpy@d:
   493                           	opt stack 0
   494                           
   495                           ; 2 bytes @ 0x6
   496  0000A3                     	ds	2
   497  0000A5                     i2memcpy@s:
   498                           	opt stack 0
   499                           
   500                           ; 2 bytes @ 0x8
   501  0000A5                     	ds	2
   502  0000A7                     i2send_msg@qptr:
   503                           	opt stack 0
   504  0000A7                     i2recv_msg@qptr:
   505                           	opt stack 0
   506                           
   507                           ; 2 bytes @ 0xA
   508  0000A7                     	ds	2
   509  0000A9                     i2send_msg@length:
   510                           	opt stack 0
   511  0000A9                     i2recv_msg@maxlength:
   512                           	opt stack 0
   513                           
   514                           ; 1 bytes @ 0xC
   515  0000A9                     	ds	1
   516  0000AA                     i2send_msg@msgtype:
   517                           	opt stack 0
   518  0000AA                     i2recv_msg@msgtype:
   519                           	opt stack 0
   520                           
   521                           ; 2 bytes @ 0xD
   522  0000AA                     	ds	1
   523  0000AB                     i2send_msg@data:
   524                           	opt stack 0
   525                           
   526                           ; 2 bytes @ 0xE
   527  0000AB                     	ds	1
   528  0000AC                     i2recv_msg@data:
   529                           	opt stack 0
   530                           
   531                           ; 2 bytes @ 0xF
   532  0000AC                     	ds	1
   533  0000AD                     ??i2_send_msg:
   534                           
   535                           ; 0 bytes @ 0x10
   536  0000AD                     	ds	1
   537  0000AE                     ??i2_recv_msg:
   538  0000AE                     i2send_msg@tlength:
   539                           	opt stack 0
   540                           
   541                           ; 2 bytes @ 0x11
   542  0000AE                     	ds	2
   543  0000B0                     i2send_msg@slot:
   544                           	opt stack 0
   545  0000B0                     i2recv_msg@slot:
   546                           	opt stack 0
   547                           
   548                           ; 1 bytes @ 0x13
   549  0000B0                     	ds	1
   550  0000B1                     i2send_msg@qmsg:
   551                           	opt stack 0
   552  0000B1                     i2recv_msg@tlength:
   553                           	opt stack 0
   554                           
   555                           ; 2 bytes @ 0x14
   556  0000B1                     	ds	2
   557  0000B3                     ToMainHigh_sendmsg@msgtype:
   558                           	opt stack 0
   559  0000B3                     i2recv_msg@qmsg:
   560                           	opt stack 0
   561                           
   562                           ; 2 bytes @ 0x16
   563  0000B3                     	ds	1
   564  0000B4                     ToMainHigh_sendmsg@data:
   565                           	opt stack 0
   566                           
   567                           ; 2 bytes @ 0x17
   568  0000B4                     	ds	1
   569  0000B5                     FromMainHigh_recvmsg@msgtype:
   570                           	opt stack 0
   571                           
   572                           ; 2 bytes @ 0x18
   573  0000B5                     	ds	1
   574  0000B6                     ToMainHigh_sendmsg@length:
   575                           	opt stack 0
   576                           
   577                           ; 1 bytes @ 0x19
   578  0000B6                     	ds	1
   579  0000B7                     ??_i2c_int_handler:
   580  0000B7                     FromMainHigh_recvmsg@data:
   581                           	opt stack 0
   582                           
   583                           ; 2 bytes @ 0x1A
   584  0000B7                     	ds	1
   585  0000B8                     i2c_int_handler@error_buf:
   586                           	opt stack 0
   587                           
   588                           ; 3 bytes @ 0x1B
   589  0000B8                     	ds	1
   590  0000B9                     FromMainHigh_recvmsg@maxlength:
   591                           	opt stack 0
   592                           
   593                           ; 1 bytes @ 0x1C
   594  0000B9                     	ds	1
   595  0000BA                     timer0_int_handler@length:
   596                           	opt stack 0
   597                           
   598                           ; 2 bytes @ 0x1D
   599  0000BA                     	ds	1
   600  0000BB                     i2c_int_handler@data_written:
   601                           	opt stack 0
   602                           
   603                           ; 1 bytes @ 0x1E
   604  0000BB                     	ds	1
   605  0000BC                     i2c_int_handler@overrun_error:
   606                           	opt stack 0
   607  0000BC                     timer0_int_handler@msgtype:
   608                           	opt stack 0
   609                           
   610                           ; 2 bytes @ 0x1F
   611  0000BC                     	ds	1
   612  0000BD                     i2c_int_handler@i2c_data:
   613                           	opt stack 0
   614                           
   615                           ; 1 bytes @ 0x20
   616  0000BD                     	ds	1
   617  0000BE                     i2c_int_handler@msg_to_send:
   618                           	opt stack 0
   619  0000BE                     timer0_int_handler@val:
   620                           	opt stack 0
   621                           
   622                           ; 2 bytes @ 0x21
   623  0000BE                     	ds	1
   624  0000BF                     i2c_int_handler@msg_ready:
   625                           	opt stack 0
   626                           
   627                           ; 1 bytes @ 0x22
   628  0000BF                     	ds	1
   629  0000C0                     i2c_int_handler@data_read:
   630                           	opt stack 0
   631                           
   632                           ; 1 bytes @ 0x23
   633  0000C0                     	ds	1
   634  0000C1                     ??_InterruptHandlerHigh:
   635                           
   636                           ; 0 bytes @ 0x24
   637  0000C1                     	ds	14
   638                           tblptru	equ	0xFF8
   639                           postinc0	equ	0xFEE
   640                           wreg	equ	0xFE8
   641                           
   642                           	psect	cstackCOMRAM
   643  000001                     __pcstackCOMRAM:
   644                           	opt stack 0
   645  000001                     ?_uart_send_buffer_empty:
   646                           	opt stack 0
   647  000001                     ?_ReadTimer1:
   648                           	opt stack 0
   649  000001                     WriteTimer1@timer1:
   650                           	opt stack 0
   651  000001                     i1memcpy@d1:
   652                           	opt stack 0
   653                           
   654                           ; 2 bytes @ 0x0
   655  000001                     	ds	2
   656  000003                     ReadTimer1@timer:
   657                           	opt stack 0
   658  000003                     WriteTimer1@timer:
   659                           	opt stack 0
   660  000003                     i1memcpy@s1:
   661                           	opt stack 0
   662                           
   663                           ; 2 bytes @ 0x2
   664  000003                     	ds	2
   665  000005                     i1memcpy@n:
   666                           	opt stack 0
   667                           
   668                           ; 2 bytes @ 0x4
   669  000005                     	ds	2
   670  000007                     i1memcpy@d:
   671                           	opt stack 0
   672                           
   673                           ; 2 bytes @ 0x6
   674  000007                     	ds	2
   675  000009                     i1memcpy@s:
   676                           	opt stack 0
   677                           
   678                           ; 2 bytes @ 0x8
   679  000009                     	ds	2
   680  00000B                     i1send_msg@qptr:
   681                           	opt stack 0
   682                           
   683                           ; 2 bytes @ 0xA
   684  00000B                     	ds	2
   685  00000D                     i1send_msg@length:
   686                           	opt stack 0
   687                           
   688                           ; 1 bytes @ 0xC
   689  00000D                     	ds	1
   690  00000E                     i1send_msg@msgtype:
   691                           	opt stack 0
   692                           
   693                           ; 1 bytes @ 0xD
   694  00000E                     	ds	1
   695  00000F                     i1send_msg@data:
   696                           	opt stack 0
   697                           
   698                           ; 2 bytes @ 0xE
   699  00000F                     	ds	2
   700  000011                     ??i1_send_msg:
   701                           
   702                           ; 0 bytes @ 0x10
   703  000011                     	ds	1
   704  000012                     i1send_msg@tlength:
   705                           	opt stack 0
   706                           
   707                           ; 2 bytes @ 0x11
   708  000012                     	ds	2
   709  000014                     i1send_msg@slot:
   710                           	opt stack 0
   711                           
   712                           ; 1 bytes @ 0x13
   713  000014                     	ds	1
   714  000015                     i1send_msg@qmsg:
   715                           	opt stack 0
   716                           
   717                           ; 2 bytes @ 0x14
   718  000015                     	ds	2
   719  000017                     ToMainLow_sendmsg@msgtype:
   720                           	opt stack 0
   721                           
   722                           ; 1 bytes @ 0x16
   723  000017                     	ds	1
   724  000018                     ToMainLow_sendmsg@data:
   725                           	opt stack 0
   726                           
   727                           ; 2 bytes @ 0x17
   728  000018                     	ds	2
   729  00001A                     ToMainLow_sendmsg@length:
   730                           	opt stack 0
   731                           
   732                           ; 1 bytes @ 0x19
   733  00001A                     	ds	1
   734  00001B                     timer1_int_handler@result:
   735                           	opt stack 0
   736                           
   737                           ; 2 bytes @ 0x1A
   738  00001B                     	ds	2
   739  00001D                     ??_InterruptHandlerLow:
   740                           
   741                           ; 0 bytes @ 0x1C
   742  00001D                     	ds	17
   743                           tblptru	equ	0xFF8
   744                           postinc0	equ	0xFEE
   745                           wreg	equ	0xFE8
   746                           
   747 ;;
   748 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   749 ;;
   750 ;; *************** function _main *****************
   751 ;; Defined at:
   752 ;;		line 187 in file "../src/main.c"
   753 ;; Parameters:    Size  Location     Type
   754 ;;		None
   755 ;; Auto vars:     Size  Location     Type
   756 ;;  i               2   53[BANK1 ] int 
   757 ;;  ic             28   60[BANK1 ] struct __i2c_comm
   758 ;;  msgbuffer      11   37[BANK1 ] unsigned char [11]
   759 ;;  t1thread_dat    2   56[BANK1 ] struct __timer1_thread_s
   760 ;;  t0thread_dat    2   50[BANK1 ] struct __timer0_thread_s
   761 ;;  uthread_data    2   48[BANK1 ] struct __uart_thread_str
   762 ;;  length          1   59[BANK1 ] char 
   763 ;;  msgtype         1   58[BANK1 ] unsigned char 
   764 ;;  myByte          1   55[BANK1 ] unsigned char 
   765 ;;  last_reg_rec    1   52[BANK1 ] unsigned char 
   766 ;;  alex_counter    1   36[BANK1 ] unsigned char 
   767 ;;  i               1    0        unsigned char 
   768 ;;  c               1    0        unsigned char 
   769 ;; Return value:  Size  Location     Type
   770 ;;		None               void
   771 ;; Registers used:
   772 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   773 ;; Tracked objects:
   774 ;;		On entry : 0/0
   775 ;;		On exit  : 0/0
   776 ;;		Unchanged: 0/0
   777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   779 ;;      Locals:         0       0      52       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   780 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   781 ;;      Totals:         0       0      53       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   782 ;;Total ram usage:       53 bytes
   783 ;; Hardware stack levels required when called:   14
   784 ;; This function calls:
   785 ;;		_OpenTimer0
   786 ;;		_OpenTimer1
   787 ;;		_ToMainHigh_recvmsg
   788 ;;		_ToMainLow_recvmsg
   789 ;;		_enable_interrupts
   790 ;;		_i2c_configure_slave
   791 ;;		_init_i2c
   792 ;;		_init_queues
   793 ;;		_init_timer1_lthread
   794 ;;		_start_i2c_slave_reply
   795 ;;		_timer0_lthread
   796 ;;		_timer1_lthread
   797 ;;		_uart_configure
   798 ;;		_uart_get_byte
   799 ;;		_uart_lthread
   800 ;;		_uart_send_byte
   801 ;; This function is called by:
   802 ;;		Startup code after reset
   803 ;; This function uses a non-reentrant model
   804 ;;
   805                           
   806                           	psect	text0
   807  000646                     __ptext0:
   808                           	opt stack 0
   809  000646                     _main:
   810                           	opt stack 17
   811                           
   812                           ;main.c: 188: char c;
   813                           ;main.c: 189: signed char length;
   814                           ;main.c: 190: unsigned char msgtype;
   815                           ;main.c: 191: unsigned char last_reg_recvd;
   816                           ;main.c: 193: i2c_comm ic;
   817                           ;main.c: 194: unsigned char msgbuffer[10 + 1];
   818                           ;main.c: 195: unsigned char i;
   819                           ;main.c: 196: uart_thread_struct uthread_data;
   820                           ;main.c: 197: timer1_thread_struct t1thread_data;
   821                           ;main.c: 198: timer0_thread_struct t0thread_data;
   822                           ;main.c: 199: char alex_counter = 0;
   823                           
   824                           ;incstack = 0
   825  000646  0E00               	movlw	0
   826  000648  0101               	movlb	1	; () banked
   827  00064A  6FC6               	movwf	main@alex_counter& (0+255),b
   828                           
   829                           ;main.c: 215: OSCCON = 0xE0;
   830  00064C  0EE0               	movlw	224
   831  00064E  6ED3               	movwf	4051,c	;volatile
   832                           
   833                           ; BSR set to: 1
   834                           ;main.c: 223: OSCTUNEbits.PLLEN = 1;
   835  000650  8C9B               	bsf	3995,6,c	;volatile
   836                           
   837                           ; BSR set to: 1
   838                           ;main.c: 238: init_i2c(&ic);
   839  000652  0101               	movlb	1	; () banked
   840  000654  0E01               	movlw	high main@ic
   841  000656  0101               	movlb	1	; () banked
   842  000658  6FA3               	movwf	(init_i2c@ic+1)& (0+255),b
   843  00065A  0101               	movlb	1	; () banked
   844  00065C  0EDE               	movlw	low main@ic
   845  00065E  0101               	movlb	1	; () banked
   846  000660  6FA2               	movwf	init_i2c@ic& (0+255),b
   847  000662  EC4D  F008         	call	_init_i2c	;wreg free
   848                           
   849                           ;main.c: 241: init_timer1_lthread(&t1thread_data);
   850  000666  0101               	movlb	1	; () banked
   851  000668  0E01               	movlw	high main@t1thread_data
   852  00066A  0101               	movlb	1	; () banked
   853  00066C  6FA3               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
   854  00066E  0101               	movlb	1	; () banked
   855  000670  0EDA               	movlw	low main@t1thread_data
   856  000672  0101               	movlb	1	; () banked
   857  000674  6FA2               	movwf	init_timer1_lthread@tptr& (0+255),b
   858  000676  ECAD  F00B         	call	_init_timer1_lthread	;wreg free
   859                           
   860                           ;main.c: 244: init_queues();
   861  00067A  EC42  F009         	call	_init_queues	;wreg free
   862                           
   863                           ;main.c: 248: TRISB = 0x0;
   864  00067E  0E00               	movlw	0
   865  000680  6E93               	movwf	3987,c	;volatile
   866                           
   867                           ;main.c: 249: LATB = 0x0;
   868  000682  0E00               	movlw	0
   869  000684  6E8A               	movwf	3978,c	;volatile
   870                           
   871                           ;main.c: 262: OpenTimer0(0b11111111 & 0b10111111 & 0b11011111 & 0b11110110);
   872  000686  0E96               	movlw	150
   873  000688  EC7B  F00B         	call	_OpenTimer0
   874                           
   875                           ;main.c: 269: OpenTimer1(0b11111111 & 0b10011111 & 0b11111111 & 0b11111111 & 0b11111011 
      +                          & 0b11111111,0x0);
   876  00068C  0E00               	movlw	0
   877  00068E  0101               	movlb	1	; () banked
   878  000690  6FA2               	movwf	OpenTimer1@config1& (0+255),b
   879  000692  0E9B               	movlw	155
   880  000694  EC1C  F00A         	call	_OpenTimer1
   881                           
   882                           ;main.c: 278: IPR1bits.TMR1IP = 0;
   883  000698  909F               	bcf	3999,0,c	;volatile
   884                           
   885                           ;main.c: 280: IPR1bits.RCIP = 0;
   886  00069A  9A9F               	bcf	3999,5,c	;volatile
   887                           
   888                           ;main.c: 283: IPR1bits.SSPIP = 1;
   889  00069C  869F               	bsf	3999,3,c	;volatile
   890                           
   891                           ;main.c: 292: i2c_configure_slave(0x9E);
   892  00069E  0E9E               	movlw	158
   893  0006A0  EC67  F00B         	call	_i2c_configure_slave
   894                           
   895                           ;main.c: 307: PIE1bits.SSPIE = 1;
   896  0006A4  869D               	bsf	3997,3,c	;volatile
   897                           
   898                           ;main.c: 333: TRISD = 0x00;
   899  0006A6  0E00               	movlw	0
   900  0006A8  6E95               	movwf	3989,c	;volatile
   901                           
   902                           ;main.c: 343: enable_interrupts();
   903  0006AA  ECE0  F00B         	call	_enable_interrupts	;wreg free
   904                           
   905                           ;main.c: 356: uart_configure();
   906  0006AE  EC17  F008         	call	_uart_configure	;wreg free
   907                           
   908                           ;main.c: 359: unsigned char myByte = 0x02;
   909  0006B2  0E02               	movlw	2
   910  0006B4  0101               	movlb	1	; () banked
   911  0006B6  6FD9               	movwf	main@myByte& (0+255),b
   912  0006B8                     l3363:
   913                           
   914                           ;main.c: 380: uart_send_byte( myByte );
   915  0006B8  0101               	movlb	1	; () banked
   916  0006BA  51D9               	movf	main@myByte& (0+255),w,b
   917  0006BC  ECC2  F00A         	call	_uart_send_byte
   918                           
   919                           ;main.c: 381: myByte = uart_get_byte() + 1;
   920  0006C0  ECBD  F009         	call	_uart_get_byte	;wreg free
   921  0006C4  0101               	movlb	1	; () banked
   922  0006C6  6FC5               	movwf	??_main& (0+255),b
   923  0006C8  0101               	movlb	1	; () banked
   924  0006CA  29C5               	incf	??_main& (0+255),w,b
   925  0006CC  0101               	movlb	1	; () banked
   926  0006CE  6FD9               	movwf	main@myByte& (0+255),b
   927                           
   928                           ; BSR set to: 1
   929                           ;main.c: 383: for(int i = 0;i<10000;i++);
   930  0006D0  0E00               	movlw	0
   931  0006D2  0101               	movlb	1	; () banked
   932  0006D4  6FD8               	movwf	(main@i_677+1)& (0+255),b
   933  0006D6  0E00               	movlw	0
   934  0006D8  0101               	movlb	1	; () banked
   935  0006DA  6FD7               	movwf	main@i_677& (0+255),b
   936  0006DC  0101               	movlb	1	; () banked
   937  0006DE  51D8               	movf	(main@i_677+1)& (0+255),w,b
   938  0006E0  0A80               	xorlw	128
   939  0006E2  0F59               	addlw	-167
   940  0006E4  0E10               	movlw	16
   941  0006E6  B4D8               	btfsc	status,2,c
   942  0006E8  5DD7               	subwf	main@i_677& (0+255),w,b
   943  0006EA  B0D8               	btfsc	status,0,c
   944  0006EC  D004               	goto	l3375
   945                           
   946                           ; BSR set to: 1
   947                           
   948                           ; BSR set to: 1
   949                           
   950                           ; BSR set to: 1
   951  0006EE  0101               	movlb	1	; () banked
   952  0006F0  4BD7               	infsnz	main@i_677& (0+255),f,b
   953  0006F2  2BD8               	incf	(main@i_677+1)& (0+255),f,b
   954  0006F4  D7F3               	goto	L1
   955  0006F6                     l3375:
   956                           
   957                           ; BSR set to: 1
   958                           ;main.c: 390: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
   959  0006F6  0101               	movlb	1	; () banked
   960  0006F8  0E01               	movlw	high main@msgtype
   961  0006FA  0101               	movlb	1	; () banked
   962  0006FC  6FBB               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
   963  0006FE  0101               	movlb	1	; () banked
   964  000700  0EDC               	movlw	low main@msgtype
   965  000702  0101               	movlb	1	; () banked
   966  000704  6FBA               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
   967  000706  0101               	movlb	1	; () banked
   968  000708  0E01               	movlw	high main@msgbuffer
   969  00070A  0101               	movlb	1	; () banked
   970  00070C  6FBD               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
   971  00070E  0101               	movlb	1	; () banked
   972  000710  0EC7               	movlw	low main@msgbuffer
   973  000712  0101               	movlb	1	; () banked
   974  000714  6FBC               	movwf	ToMainHigh_recvmsg@data& (0+255),b
   975  000716  0E0A               	movlw	10
   976  000718  EC72  F00A         	call	_ToMainHigh_recvmsg
   977  00071C  0101               	movlb	1	; () banked
   978  00071E  6FDD               	movwf	main@length& (0+255),b
   979                           
   980                           ; BSR set to: 1
   981                           ;main.c: 391: if (length < 0) {
   982  000720  0101               	movlb	1	; () banked
   983  000722  BFDD               	btfsc	main@length& (0+255),7,b
   984  000724  D05D               	goto	l3401
   985  000726  D04E               	goto	l3399
   986  000728                     l3381:
   987                           
   988                           ; BSR set to: 1
   989                           ;main.c: 401: {
   990                           ;main.c: 402: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
   991  000728  0101               	movlb	1	; () banked
   992  00072A  0E01               	movlw	high main@t0thread_data
   993  00072C  0101               	movlb	1	; () banked
   994  00072E  6FA3               	movwf	(timer0_lthread@tptr+1)& (0+255),b
   995  000730  0101               	movlb	1	; () banked
   996  000732  0ED4               	movlw	low main@t0thread_data
   997  000734  0101               	movlb	1	; () banked
   998  000736  6FA2               	movwf	timer0_lthread@tptr& (0+255),b
   999  000738  0101               	movlb	1	; () banked
  1000  00073A  C1DC  F1A4         	movff	main@msgtype,timer0_lthread@msgtype
  1001  00073E  0101               	movlb	1	; () banked
  1002  000740  6BA5               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1003  000742  0101               	movlb	1	; () banked
  1004  000744  51DD               	movf	main@length& (0+255),w,b
  1005  000746  0101               	movlb	1	; () banked
  1006  000748  6FA6               	movwf	timer0_lthread@length& (0+255),b
  1007  00074A  0101               	movlb	1	; () banked
  1008  00074C  6BA7               	clrf	(timer0_lthread@length+1)& (0+255),b
  1009  00074E  0101               	movlb	1	; () banked
  1010  000750  BFA6               	btfsc	timer0_lthread@length& (0+255),7,b
  1011  000752  07A7               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1012  000754  0101               	movlb	1	; () banked
  1013  000756  0E01               	movlw	high main@msgbuffer
  1014  000758  0101               	movlb	1	; () banked
  1015  00075A  6FA9               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1016  00075C  0101               	movlb	1	; () banked
  1017  00075E  0EC7               	movlw	low main@msgbuffer
  1018  000760  0101               	movlb	1	; () banked
  1019  000762  6FA8               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1020  000764  ECD9  F00B         	call	_timer0_lthread	;wreg free
  1021                           
  1022                           ;main.c: 403: break;
  1023  000768  D03B               	goto	l3401
  1024  00076A                     l124:
  1025                           
  1026                           ;main.c: 406: case 41:
  1027                           ;main.c: 407: {
  1028                           ;main.c: 410: last_reg_recvd = msgbuffer[0];
  1029  00076A  C1C7  F1D6         	movff	main@msgbuffer,main@last_reg_recvd
  1030                           
  1031                           ;main.c: 411: break;
  1032  00076E  D038               	goto	l3401
  1033  000770                     l3383:
  1034                           
  1035                           ;main.c: 424: {
  1036                           ;main.c: 425: length = 1 ;
  1037  000770  0E01               	movlw	1
  1038  000772  0101               	movlb	1	; () banked
  1039  000774  6FDD               	movwf	main@length& (0+255),b
  1040                           
  1041                           ; BSR set to: 1
  1042                           ;main.c: 426: msgbuffer[0] = myByte;
  1043  000776  C1D9  F1C7         	movff	main@myByte,main@msgbuffer
  1044                           
  1045                           ;main.c: 427: break;
  1046  00077A  D017               	goto	l3395
  1047  00077C                     l3387:
  1048                           
  1049                           ; BSR set to: 1
  1050                           ;main.c: 430: {
  1051                           ;main.c: 432: length = 1;
  1052  00077C  0E01               	movlw	1
  1053  00077E  0101               	movlb	1	; () banked
  1054  000780  6FDD               	movwf	main@length& (0+255),b
  1055                           
  1056                           ;main.c: 433: msgbuffer[0] = 0x3A;
  1057  000782  0E3A               	movlw	58
  1058  000784  D004               	goto	L2
  1059  000786                     l3389:
  1060                           
  1061                           ; BSR set to: 1
  1062                           ;main.c: 438: {
  1063                           ;main.c: 439: length = 1;
  1064  000786  0E01               	movlw	1
  1065  000788  0101               	movlb	1	; () banked
  1066  00078A  6FDD               	movwf	main@length& (0+255),b
  1067                           
  1068                           ;main.c: 440: msgbuffer[0] = 0x55;
  1069  00078C  0E55               	movlw	85
  1070  00078E                     L2:
  1071  00078E  0101               	movlb	1	; () banked
  1072  000790  6FC7               	movwf	main@msgbuffer& (0+255),b
  1073                           
  1074                           ;main.c: 441: break;
  1075  000792  D00B               	goto	l3395
  1076  000794                     l3393:
  1077  000794  0101               	movlb	1	; () banked
  1078  000796  51D6               	movf	main@last_reg_recvd& (0+255),w,b
  1079                           
  1080                           ; Switch size 1, requested type "space"
  1081                           ; Number of cases is 3, Range of values is 168 to 170
  1082                           ; switch strategies available:
  1083                           ; Name         Instructions Cycles
  1084                           ; simple_byte           10     6 (average)
  1085                           ;	Chosen strategy is simple_byte
  1086  000798  0AA8               	xorlw	168	; case 168
  1087  00079A  B4D8               	btfsc	status,2,c
  1088  00079C  D7EF               	goto	l3387
  1089  00079E  0A01               	xorlw	1	; case 169
  1090  0007A0  B4D8               	btfsc	status,2,c
  1091  0007A2  D7F1               	goto	l3389
  1092  0007A4  0A03               	xorlw	3	; case 170
  1093  0007A6  B4D8               	btfsc	status,2,c
  1094  0007A8  D7E3               	goto	l3383
  1095  0007AA                     l3395:
  1096                           
  1097                           ; BSR set to: 1
  1098                           ;main.c: 445: start_i2c_slave_reply(length, msgbuffer);
  1099  0007AA  0101               	movlb	1	; () banked
  1100  0007AC  0E01               	movlw	high main@msgbuffer
  1101  0007AE  0101               	movlb	1	; () banked
  1102  0007B0  6FA3               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  1103  0007B2  0101               	movlb	1	; () banked
  1104  0007B4  0EC7               	movlw	low main@msgbuffer
  1105  0007B6  0101               	movlb	1	; () banked
  1106  0007B8  6FA2               	movwf	start_i2c_slave_reply@msg& (0+255),b
  1107  0007BA  0101               	movlb	1	; () banked
  1108  0007BC  51DD               	movf	main@length& (0+255),w,b
  1109  0007BE  EC75  F005         	call	_start_i2c_slave_reply
  1110                           
  1111                           ;main.c: 446: break;
  1112  0007C2  D00E               	goto	l3401
  1113  0007C4                     l3399:
  1114  0007C4  0101               	movlb	1	; () banked
  1115  0007C6  51DC               	movf	main@msgtype& (0+255),w,b
  1116                           
  1117                           ; Switch size 1, requested type "space"
  1118                           ; Number of cases is 4, Range of values is 10 to 42
  1119                           ; switch strategies available:
  1120                           ; Name         Instructions Cycles
  1121                           ; simple_byte           13     7 (average)
  1122                           ;	Chosen strategy is simple_byte
  1123  0007C8  0A0A               	xorlw	10	; case 10
  1124  0007CA  B4D8               	btfsc	status,2,c
  1125  0007CC  D7AD               	goto	l3381
  1126  0007CE  0A22               	xorlw	34	; case 40
  1127  0007D0  B4D8               	btfsc	status,2,c
  1128  0007D2  D7CB               	goto	l124
  1129  0007D4  0A01               	xorlw	1	; case 41
  1130  0007D6  B4D8               	btfsc	status,2,c
  1131  0007D8  D7C8               	goto	l124
  1132  0007DA  0A03               	xorlw	3	; case 42
  1133  0007DC  B4D8               	btfsc	status,2,c
  1134  0007DE  D7DA               	goto	l3393
  1135  0007E0                     l3401:
  1136                           
  1137                           ;main.c: 454: }
  1138                           ;main.c: 457: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1139  0007E0  0101               	movlb	1	; () banked
  1140  0007E2  0E01               	movlw	high main@msgtype
  1141  0007E4  0101               	movlb	1	; () banked
  1142  0007E6  6FBB               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1143  0007E8  0101               	movlb	1	; () banked
  1144  0007EA  0EDC               	movlw	low main@msgtype
  1145  0007EC  0101               	movlb	1	; () banked
  1146  0007EE  6FBA               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1147  0007F0  0101               	movlb	1	; () banked
  1148  0007F2  0E01               	movlw	high main@msgbuffer
  1149  0007F4  0101               	movlb	1	; () banked
  1150  0007F6  6FBD               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1151  0007F8  0101               	movlb	1	; () banked
  1152  0007FA  0EC7               	movlw	low main@msgbuffer
  1153  0007FC  0101               	movlb	1	; () banked
  1154  0007FE  6FBC               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1155  000800  0E0A               	movlw	10
  1156  000802  EC57  F00A         	call	_ToMainLow_recvmsg
  1157  000806  0101               	movlb	1	; () banked
  1158  000808  6FDD               	movwf	main@length& (0+255),b
  1159                           
  1160                           ; BSR set to: 1
  1161                           ;main.c: 458: if (length < 0) {
  1162  00080A  0101               	movlb	1	; () banked
  1163  00080C  BFDD               	btfsc	main@length& (0+255),7,b
  1164  00080E  D754               	goto	l3363
  1165  000810  D042               	goto	l3413
  1166  000812                     l3407:
  1167                           
  1168                           ; BSR set to: 1
  1169                           ;main.c: 469: {
  1170                           ;main.c: 470: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1171  000812  0101               	movlb	1	; () banked
  1172  000814  0E01               	movlw	high main@t1thread_data
  1173  000816  0101               	movlb	1	; () banked
  1174  000818  6FBD               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1175  00081A  0101               	movlb	1	; () banked
  1176  00081C  0EDA               	movlw	low main@t1thread_data
  1177  00081E  0101               	movlb	1	; () banked
  1178  000820  6FBC               	movwf	timer1_lthread@tptr& (0+255),b
  1179  000822  0101               	movlb	1	; () banked
  1180  000824  C1DC  F1BE         	movff	main@msgtype,timer1_lthread@msgtype
  1181  000828  0101               	movlb	1	; () banked
  1182  00082A  6BBF               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1183  00082C  0101               	movlb	1	; () banked
  1184  00082E  51DD               	movf	main@length& (0+255),w,b
  1185  000830  0101               	movlb	1	; () banked
  1186  000832  6FC0               	movwf	timer1_lthread@length& (0+255),b
  1187  000834  0101               	movlb	1	; () banked
  1188  000836  6BC1               	clrf	(timer1_lthread@length+1)& (0+255),b
  1189  000838  0101               	movlb	1	; () banked
  1190  00083A  BFC0               	btfsc	timer1_lthread@length& (0+255),7,b
  1191  00083C  07C1               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1192  00083E  0101               	movlb	1	; () banked
  1193  000840  0E01               	movlw	high main@msgbuffer
  1194  000842  0101               	movlb	1	; () banked
  1195  000844  6FC3               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1196  000846  0101               	movlb	1	; () banked
  1197  000848  0EC7               	movlw	low main@msgbuffer
  1198  00084A  0101               	movlb	1	; () banked
  1199  00084C  6FC2               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1200  00084E  ECE4  F008         	call	_timer1_lthread	;wreg free
  1201                           
  1202                           ;main.c: 471: break;
  1203  000852  D732               	goto	l3363
  1204  000854                     l3409:
  1205                           
  1206                           ;main.c: 474: case 31:
  1207                           ;main.c: 475: {
  1208                           ;main.c: 476: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1209  000854  0101               	movlb	1	; () banked
  1210  000856  0E01               	movlw	high main@uthread_data
  1211  000858  0101               	movlb	1	; () banked
  1212  00085A  6FA3               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1213  00085C  0101               	movlb	1	; () banked
  1214  00085E  0ED2               	movlw	low main@uthread_data
  1215  000860  0101               	movlb	1	; () banked
  1216  000862  6FA2               	movwf	uart_lthread@uptr& (0+255),b
  1217  000864  0101               	movlb	1	; () banked
  1218  000866  C1DC  F1A4         	movff	main@msgtype,uart_lthread@msgtype
  1219  00086A  0101               	movlb	1	; () banked
  1220  00086C  6BA5               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1221  00086E  0101               	movlb	1	; () banked
  1222  000870  51DD               	movf	main@length& (0+255),w,b
  1223  000872  0101               	movlb	1	; () banked
  1224  000874  6FA6               	movwf	uart_lthread@length& (0+255),b
  1225  000876  0101               	movlb	1	; () banked
  1226  000878  6BA7               	clrf	(uart_lthread@length+1)& (0+255),b
  1227  00087A  0101               	movlb	1	; () banked
  1228  00087C  BFA6               	btfsc	uart_lthread@length& (0+255),7,b
  1229  00087E  07A7               	decf	(uart_lthread@length+1)& (0+255),f,b
  1230  000880  0101               	movlb	1	; () banked
  1231  000882  0E01               	movlw	high main@msgbuffer
  1232  000884  0101               	movlb	1	; () banked
  1233  000886  6FA9               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1234  000888  0101               	movlb	1	; () banked
  1235  00088A  0EC7               	movlw	low main@msgbuffer
  1236  00088C  0101               	movlb	1	; () banked
  1237  00088E  6FA8               	movwf	uart_lthread@msgbuffer& (0+255),b
  1238  000890  ECDB  F00A         	call	_uart_lthread	;wreg free
  1239                           
  1240                           ;main.c: 477: break;
  1241  000894  D711               	goto	l3363
  1242  000896                     l3413:
  1243  000896  0101               	movlb	1	; () banked
  1244  000898  51DC               	movf	main@msgtype& (0+255),w,b
  1245                           
  1246                           ; Switch size 1, requested type "space"
  1247                           ; Number of cases is 3, Range of values is 11 to 31
  1248                           ; switch strategies available:
  1249                           ; Name         Instructions Cycles
  1250                           ; simple_byte           10     6 (average)
  1251                           ;	Chosen strategy is simple_byte
  1252  00089A  0A0B               	xorlw	11	; case 11
  1253  00089C  B4D8               	btfsc	status,2,c
  1254  00089E  D7B9               	goto	l3407
  1255  0008A0  0A15               	xorlw	21	; case 30
  1256  0008A2  B4D8               	btfsc	status,2,c
  1257  0008A4  D7D7               	goto	l3409
  1258  0008A6  0A01               	xorlw	1	; case 31
  1259  0008A8  B4D8               	btfsc	status,2,c
  1260  0008AA  D7D4               	goto	l3409
  1261  0008AC  D705               	goto	l3363
  1262  0008AE                     __end_of_main:
  1263                           	opt stack 0
  1264                           tblptru	equ	0xFF8
  1265                           postinc0	equ	0xFEE
  1266                           wreg	equ	0xFE8
  1267                           status	equ	0xFD8
  1268                           
  1269 ;; *************** function _uart_send_byte *****************
  1270 ;; Defined at:
  1271 ;;		line 54 in file "../src/my_uart.c"
  1272 ;; Parameters:    Size  Location     Type
  1273 ;;  sendByte        1    wreg     unsigned char 
  1274 ;; Auto vars:     Size  Location     Type
  1275 ;;  sendByte        1    0[BANK1 ] unsigned char 
  1276 ;; Return value:  Size  Location     Type
  1277 ;;                  2   93[COMRAM] int 
  1278 ;; Registers used:
  1279 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1280 ;; Tracked objects:
  1281 ;;		On entry : 0/0
  1282 ;;		On exit  : 0/0
  1283 ;;		Unchanged: 0/0
  1284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1286 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1288 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1289 ;;Total ram usage:        1 bytes
  1290 ;; Hardware stack levels used:    1
  1291 ;; Hardware stack levels required when called:   10
  1292 ;; This function calls:
  1293 ;;		Nothing
  1294 ;; This function is called by:
  1295 ;;		_main
  1296 ;; This function uses a non-reentrant model
  1297 ;;
  1298                           
  1299                           	psect	text1
  1300  001584                     __ptext1:
  1301                           	opt stack 0
  1302  001584                     _uart_send_byte:
  1303                           	opt stack 20
  1304                           
  1305                           ; BSR set to: 1
  1306                           ;incstack = 0
  1307                           ;uart_send_byte@sendByte stored from wreg
  1308  001584  0101               	movlb	1	; () banked
  1309  001586  6FA2               	movwf	uart_send_byte@sendByte& (0+255),b
  1310                           
  1311                           ; BSR set to: 1
  1312                           ;my_uart.c: 56: if( uart_send_buffer.size >= 4 )
  1313  001588  EE20  F035         	lfsr	2,_uart_send_buffer+6
  1314  00158C  0E03               	movlw	3
  1315  00158E  64DF               	cpfsgt	indf2,c
  1316  001590  D001               	goto	l3247
  1317  001592  0012               	return	
  1318  001594                     l3247:
  1319                           
  1320                           ; BSR set to: 1
  1321                           ;my_uart.c: 60: else
  1322                           ;my_uart.c: 61: {
  1323                           ;my_uart.c: 62: uart_send_buffer.buffer[ uart_send_buffer.last_item ] = sendByte;
  1324  001594  5034               	movf	_uart_send_buffer+5,w,c
  1325  001596  0D01               	mullw	1
  1326  001598  0E2F               	movlw	low _uart_send_buffer
  1327  00159A  24F3               	addwf	prodl,w,c
  1328  00159C  6ED9               	movwf	fsr2l,c
  1329  00159E  0E00               	movlw	high _uart_send_buffer
  1330  0015A0  20F4               	addwfc	prodh,w,c
  1331  0015A2  6EDA               	movwf	fsr2h,c
  1332  0015A4  0101               	movlb	1	; () banked
  1333  0015A6  C1A2  FFDF         	movff	uart_send_byte@sendByte,indf2
  1334                           
  1335                           ; BSR set to: 1
  1336                           ;my_uart.c: 63: uart_send_buffer.last_item = (uart_send_buffer.last_item + 1) % 4;
  1337  0015AA  2834               	incf	_uart_send_buffer+5,w,c
  1338  0015AC  0B03               	andlw	3
  1339  0015AE  6E34               	movwf	_uart_send_buffer+5,c
  1340                           
  1341                           ; BSR set to: 1
  1342                           ;my_uart.c: 64: uart_send_buffer.size += 1;
  1343  0015B0  2A35               	incf	_uart_send_buffer+6,f,c
  1344                           
  1345                           ; BSR set to: 1
  1346                           ;my_uart.c: 65: PIE1bits.TX1IE = 1;
  1347  0015B2  889D               	bsf	3997,4,c	;volatile
  1348  0015B4  0012               	return	
  1349  0015B6                     __end_of_uart_send_byte:
  1350                           	opt stack 0
  1351                           tblptru	equ	0xFF8
  1352                           prodh	equ	0xFF4
  1353                           prodl	equ	0xFF3
  1354                           postinc0	equ	0xFEE
  1355                           wreg	equ	0xFE8
  1356                           indf2	equ	0xFDF
  1357                           fsr2h	equ	0xFDA
  1358                           fsr2l	equ	0xFD9
  1359                           status	equ	0xFD8
  1360                           
  1361 ;; *************** function _uart_lthread *****************
  1362 ;; Defined at:
  1363 ;;		line 9 in file "../src/uart_thread.c"
  1364 ;; Parameters:    Size  Location     Type
  1365 ;;  uptr            2    0[BANK1 ] PTR struct __uart_thread
  1366 ;;		 -> main@uthread_data(2), 
  1367 ;;  msgtype         2    2[BANK1 ] int 
  1368 ;;  length          2    4[BANK1 ] int 
  1369 ;;  msgbuffer       2    6[BANK1 ] PTR unsigned char 
  1370 ;;		 -> main@msgbuffer(11), 
  1371 ;; Auto vars:     Size  Location     Type
  1372 ;;		None
  1373 ;; Return value:  Size  Location     Type
  1374 ;;                  2    0[BANK1 ] int 
  1375 ;; Registers used:
  1376 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1377 ;; Tracked objects:
  1378 ;;		On entry : 0/0
  1379 ;;		On exit  : 0/0
  1380 ;;		Unchanged: 0/0
  1381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1382 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1385 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1386 ;;Total ram usage:        8 bytes
  1387 ;; Hardware stack levels used:    1
  1388 ;; Hardware stack levels required when called:   10
  1389 ;; This function calls:
  1390 ;;		Nothing
  1391 ;; This function is called by:
  1392 ;;		_main
  1393 ;; This function uses a non-reentrant model
  1394 ;;
  1395                           
  1396                           	psect	text2
  1397  0015B6                     __ptext2:
  1398                           	opt stack 0
  1399  0015B6                     _uart_lthread:
  1400                           	opt stack 20
  1401                           
  1402                           ;uart_thread.c: 10: if (msgtype == 30) {
  1403                           
  1404                           ; BSR set to: 1
  1405                           ;incstack = 0
  1406  0015B6  0101               	movlb	1	; () banked
  1407  0015B8  51A4               	movf	uart_lthread@msgtype& (0+255),w,b
  1408  0015BA  0A1E               	xorlw	30
  1409  0015BC  11A5               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1410  0015BE  B4D8               	btfsc	status,2,c
  1411  0015C0  0012               	return	
  1412                           
  1413                           ; BSR set to: 1
  1414                           ;uart_thread.c: 12: else if (msgtype == 31) {
  1415                           
  1416                           ; BSR set to: 1
  1417                           
  1418                           ; BSR set to: 1
  1419                           ;uart_thread.c: 11: }
  1420  0015C2  0101               	movlb	1	; () banked
  1421  0015C4  51A4               	movf	uart_lthread@msgtype& (0+255),w,b
  1422  0015C6  0A1F               	xorlw	31
  1423  0015C8  11A5               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1424  0015CA  A4D8               	btfss	status,2,c
  1425  0015CC  0012               	return	
  1426                           
  1427                           ; BSR set to: 1
  1428                           ;uart_thread.c: 15: msgbuffer[length] = '\0';
  1429  0015CE  0101               	movlb	1	; () banked
  1430  0015D0  51A6               	movf	uart_lthread@length& (0+255),w,b
  1431  0015D2  0101               	movlb	1	; () banked
  1432  0015D4  25A8               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1433  0015D6  6ED9               	movwf	fsr2l,c
  1434  0015D8  0101               	movlb	1	; () banked
  1435  0015DA  51A7               	movf	(uart_lthread@length+1)& (0+255),w,b
  1436  0015DC  0101               	movlb	1	; () banked
  1437  0015DE  21A9               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1438  0015E0  6EDA               	movwf	fsr2h,c
  1439  0015E2  0E00               	movlw	0
  1440  0015E4  6EDF               	movwf	indf2,c
  1441  0015E6  0012               	return	
  1442  0015E8                     __end_of_uart_lthread:
  1443                           	opt stack 0
  1444                           tblptru	equ	0xFF8
  1445                           prodh	equ	0xFF4
  1446                           prodl	equ	0xFF3
  1447                           postinc0	equ	0xFEE
  1448                           wreg	equ	0xFE8
  1449                           indf2	equ	0xFDF
  1450                           fsr2h	equ	0xFDA
  1451                           fsr2l	equ	0xFD9
  1452                           status	equ	0xFD8
  1453                           
  1454 ;; *************** function _uart_get_byte *****************
  1455 ;; Defined at:
  1456 ;;		line 105 in file "../src/my_uart.c"
  1457 ;; Parameters:    Size  Location     Type
  1458 ;;		None
  1459 ;; Auto vars:     Size  Location     Type
  1460 ;;  return_value    1    0[BANK1 ] unsigned char 
  1461 ;; Return value:  Size  Location     Type
  1462 ;;                  1    wreg      unsigned char 
  1463 ;; Registers used:
  1464 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1465 ;; Tracked objects:
  1466 ;;		On entry : 0/0
  1467 ;;		On exit  : 0/0
  1468 ;;		Unchanged: 0/0
  1469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1471 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1473 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1474 ;;Total ram usage:        1 bytes
  1475 ;; Hardware stack levels used:    1
  1476 ;; Hardware stack levels required when called:   10
  1477 ;; This function calls:
  1478 ;;		Nothing
  1479 ;; This function is called by:
  1480 ;;		_main
  1481 ;; This function uses a non-reentrant model
  1482 ;;
  1483                           
  1484                           	psect	text3
  1485  00137A                     __ptext3:
  1486                           	opt stack 0
  1487  00137A                     _uart_get_byte:
  1488                           	opt stack 20
  1489                           
  1490                           ;my_uart.c: 107: if( uart_receive_buffer.size <= 0 )
  1491                           
  1492                           ; BSR set to: 1
  1493                           ;incstack = 0
  1494  00137A  0100               	movlb	0	; () banked
  1495  00137C  679C               	tstfsz	(_uart_receive_buffer+6)& (0+255),b
  1496  00137E  D003               	goto	l3261
  1497                           
  1498                           ; BSR set to: 0
  1499                           ;my_uart.c: 108: {
  1500                           ;my_uart.c: 109: uart_receive_buffer.size = 0;
  1501  001380  0E00               	movlw	0
  1502  001382  0100               	movlb	0	; () banked
  1503  001384  6F9C               	movwf	(_uart_receive_buffer+6)& (0+255),b
  1504  001386                     l3261:
  1505                           
  1506                           ; BSR set to: 0
  1507                           ;my_uart.c: 110: }
  1508                           ;my_uart.c: 111: unsigned char return_value = uart_receive_buffer.buffer[uart_receive_bu
      +                          ffer.current_item];
  1509  001386  0100               	movlb	0	; () banked
  1510  001388  519A               	movf	(_uart_receive_buffer+4)& (0+255),w,b
  1511  00138A  0D01               	mullw	1
  1512  00138C  0100               	movlb	0	; () banked
  1513  00138E  0E96               	movlw	low _uart_receive_buffer
  1514  001390  24F3               	addwf	prodl,w,c
  1515  001392  6ED9               	movwf	fsr2l,c
  1516  001394  0100               	movlb	0	; () banked
  1517  001396  0E00               	movlw	high _uart_receive_buffer
  1518  001398  20F4               	addwfc	prodh,w,c
  1519  00139A  6EDA               	movwf	fsr2h,c
  1520  00139C  50DF               	movf	indf2,w,c
  1521  00139E  0101               	movlb	1	; () banked
  1522  0013A0  6FA2               	movwf	uart_get_byte@return_value& (0+255),b
  1523                           
  1524                           ; BSR set to: 1
  1525                           ;my_uart.c: 112: uart_receive_buffer.current_item = ( uart_receive_buffer.current_item +
      +                           1 ) % 4;
  1526  0013A2  0100               	movlb	0	; () banked
  1527  0013A4  299A               	incf	(_uart_receive_buffer+4)& (0+255),w,b
  1528  0013A6  0B03               	andlw	3
  1529  0013A8  0100               	movlb	0	; () banked
  1530  0013AA  6F9A               	movwf	(_uart_receive_buffer+4)& (0+255),b
  1531                           
  1532                           ; BSR set to: 0
  1533                           ;my_uart.c: 113: uart_receive_buffer.size -= 1;
  1534  0013AC  0100               	movlb	0	; () banked
  1535  0013AE  079C               	decf	(_uart_receive_buffer+6)& (0+255),f,b
  1536                           
  1537                           ; BSR set to: 0
  1538                           ;my_uart.c: 115: if( PIE1bits.RC1IE == 0 )
  1539  0013B0  AA9D               	btfss	3997,5,c	;volatile
  1540                           
  1541                           ; BSR set to: 0
  1542                           ;my_uart.c: 116: {
  1543                           ;my_uart.c: 117: PIE1bits.RC1IE = 1;
  1544  0013B2  8A9D               	bsf	3997,5,c	;volatile
  1545                           
  1546                           ; BSR set to: 0
  1547                           ;my_uart.c: 118: }
  1548                           ;my_uart.c: 120: return return_value;
  1549                           
  1550                           ; BSR set to: 0
  1551  0013B4  0101               	movlb	1	; () banked
  1552  0013B6  51A2               	movf	uart_get_byte@return_value& (0+255),w,b
  1553  0013B8  0012               	return	
  1554  0013BA                     __end_of_uart_get_byte:
  1555                           	opt stack 0
  1556                           tblptru	equ	0xFF8
  1557                           prodh	equ	0xFF4
  1558                           prodl	equ	0xFF3
  1559                           postinc0	equ	0xFEE
  1560                           wreg	equ	0xFE8
  1561                           indf2	equ	0xFDF
  1562                           fsr2h	equ	0xFDA
  1563                           fsr2l	equ	0xFD9
  1564                           status	equ	0xFD8
  1565                           
  1566 ;; *************** function _uart_configure *****************
  1567 ;; Defined at:
  1568 ;;		line 14 in file "../src/my_uart.c"
  1569 ;; Parameters:    Size  Location     Type
  1570 ;;		None
  1571 ;; Auto vars:     Size  Location     Type
  1572 ;;		None
  1573 ;; Return value:  Size  Location     Type
  1574 ;;		None               void
  1575 ;; Registers used:
  1576 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1577 ;; Tracked objects:
  1578 ;;		On entry : 0/0
  1579 ;;		On exit  : 0/0
  1580 ;;		Unchanged: 0/0
  1581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1586 ;;Total ram usage:        0 bytes
  1587 ;; Hardware stack levels used:    1
  1588 ;; Hardware stack levels required when called:   10
  1589 ;; This function calls:
  1590 ;;		Nothing
  1591 ;; This function is called by:
  1592 ;;		_main
  1593 ;; This function uses a non-reentrant model
  1594 ;;
  1595                           
  1596                           	psect	text4
  1597  00102E                     __ptext4:
  1598                           	opt stack 0
  1599  00102E                     _uart_configure:
  1600                           	opt stack 20
  1601                           
  1602                           ;my_uart.c: 16: TRISCbits.TRISC7 = 1;
  1603                           
  1604                           ; BSR set to: 1
  1605                           ;incstack = 0
  1606  00102E  8E94               	bsf	3988,7,c	;volatile
  1607                           
  1608                           ;my_uart.c: 17: TRISCbits.TRISC6 = 0;
  1609  001030  9C94               	bcf	3988,6,c	;volatile
  1610                           
  1611                           ;my_uart.c: 19: BAUDCONbits.BRG16 = 1;
  1612  001032  867E               	bsf	3966,3,c	;volatile
  1613                           
  1614                           ;my_uart.c: 20: TXSTA1bits.BRGH = 1;
  1615  001034  84AD               	bsf	4013,2,c	;volatile
  1616                           
  1617                           ;my_uart.c: 23: SPBRGH1 = 0x00;
  1618  001036  0E00               	movlw	0
  1619  001038  6E7F               	movwf	3967,c	;volatile
  1620                           
  1621                           ;my_uart.c: 24: SPBRG1 = 0xCF;
  1622  00103A  0ECF               	movlw	207
  1623  00103C  6EB0               	movwf	4016,c	;volatile
  1624                           
  1625                           ;my_uart.c: 26: TXSTA1bits.SYNC = 0;
  1626  00103E  98AD               	bcf	4013,4,c	;volatile
  1627                           
  1628                           ;my_uart.c: 27: RCSTA1bits.SPEN = 1;
  1629  001040  8EAC               	bsf	4012,7,c	;volatile
  1630                           
  1631                           ;my_uart.c: 30: IPR1bits.TX1IP = 0;
  1632  001042  989F               	bcf	3999,4,c	;volatile
  1633                           
  1634                           ;my_uart.c: 32: PIE1bits.TX1IE = 0;
  1635  001044  989D               	bcf	3997,4,c	;volatile
  1636                           
  1637                           ;my_uart.c: 33: PIE1bits.RC1IE = 1;
  1638  001046  8A9D               	bsf	3997,5,c	;volatile
  1639                           
  1640                           ;my_uart.c: 35: TXSTA1bits.TXEN = 1;
  1641  001048  8AAD               	bsf	4013,5,c	;volatile
  1642                           
  1643                           ;my_uart.c: 36: RCSTA1bits.CREN = 1;
  1644  00104A  88AC               	bsf	4012,4,c	;volatile
  1645                           
  1646                           ;my_uart.c: 40: uart_send_buffer.current_item = 0;
  1647  00104C  0E00               	movlw	0
  1648  00104E  6E33               	movwf	_uart_send_buffer+4,c
  1649                           
  1650                           ;my_uart.c: 41: uart_send_buffer.last_item = 0;
  1651  001050  0E00               	movlw	0
  1652  001052  6E34               	movwf	_uart_send_buffer+5,c
  1653                           
  1654                           ;my_uart.c: 42: uart_send_buffer.buffer[uart_send_buffer.current_item] = 0;
  1655  001054  5033               	movf	_uart_send_buffer+4,w,c
  1656  001056  0D01               	mullw	1
  1657  001058  0E2F               	movlw	low _uart_send_buffer
  1658  00105A  24F3               	addwf	prodl,w,c
  1659  00105C  6ED9               	movwf	fsr2l,c
  1660  00105E  0E00               	movlw	high _uart_send_buffer
  1661  001060  20F4               	addwfc	prodh,w,c
  1662  001062  6EDA               	movwf	fsr2h,c
  1663  001064  0E00               	movlw	0
  1664  001066  6EDF               	movwf	indf2,c
  1665                           
  1666                           ;my_uart.c: 43: uart_send_buffer.size = 0;
  1667  001068  0E00               	movlw	0
  1668  00106A  6E35               	movwf	_uart_send_buffer+6,c
  1669                           
  1670                           ;my_uart.c: 46: uart_receive_buffer.current_item = 0;
  1671  00106C  0E00               	movlw	0
  1672  00106E  0100               	movlb	0	; () banked
  1673  001070  6F9A               	movwf	(_uart_receive_buffer+4)& (0+255),b
  1674                           
  1675                           ; BSR set to: 0
  1676                           ;my_uart.c: 47: uart_receive_buffer.last_item = 0;
  1677  001072  0E00               	movlw	0
  1678  001074  0100               	movlb	0	; () banked
  1679  001076  6F9B               	movwf	(_uart_receive_buffer+5)& (0+255),b
  1680                           
  1681                           ;my_uart.c: 48: uart_receive_buffer.buffer[uart_receive_buffer.current_item] = 0;
  1682  001078  0100               	movlb	0	; () banked
  1683  00107A  519A               	movf	(_uart_receive_buffer+4)& (0+255),w,b
  1684  00107C  0D01               	mullw	1
  1685  00107E  0100               	movlb	0	; () banked
  1686  001080  0E96               	movlw	low _uart_receive_buffer
  1687  001082  24F3               	addwf	prodl,w,c
  1688  001084  6ED9               	movwf	fsr2l,c
  1689  001086  0100               	movlb	0	; () banked
  1690  001088  0E00               	movlw	high _uart_receive_buffer
  1691  00108A  20F4               	addwfc	prodh,w,c
  1692  00108C  6EDA               	movwf	fsr2h,c
  1693  00108E  0E00               	movlw	0
  1694  001090  6EDF               	movwf	indf2,c
  1695                           
  1696                           ; BSR set to: 0
  1697                           ;my_uart.c: 49: uart_receive_buffer.size = 0;
  1698  001092  0E00               	movlw	0
  1699  001094  0100               	movlb	0	; () banked
  1700  001096  6F9C               	movwf	(_uart_receive_buffer+6)& (0+255),b
  1701                           
  1702                           ; BSR set to: 0
  1703  001098  0012               	return	
  1704  00109A                     __end_of_uart_configure:
  1705                           	opt stack 0
  1706                           tblptru	equ	0xFF8
  1707                           prodh	equ	0xFF4
  1708                           prodl	equ	0xFF3
  1709                           postinc0	equ	0xFEE
  1710                           wreg	equ	0xFE8
  1711                           indf2	equ	0xFDF
  1712                           fsr2h	equ	0xFDA
  1713                           fsr2l	equ	0xFD9
  1714                           status	equ	0xFD8
  1715                           
  1716 ;; *************** function _timer1_lthread *****************
  1717 ;; Defined at:
  1718 ;;		line 14 in file "../src/timer1_thread.c"
  1719 ;; Parameters:    Size  Location     Type
  1720 ;;  tptr            2   26[BANK1 ] PTR struct __timer1_thre
  1721 ;;		 -> main@t1thread_data(2), 
  1722 ;;  msgtype         2   28[BANK1 ] int 
  1723 ;;  length          2   30[BANK1 ] int 
  1724 ;;  msgbuffer       2   32[BANK1 ] PTR unsigned char 
  1725 ;;		 -> main@msgbuffer(11), 
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;  retval          1   34[BANK1 ] char 
  1728 ;; Return value:  Size  Location     Type
  1729 ;;                  2   26[BANK1 ] int 
  1730 ;; Registers used:
  1731 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1737 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1738 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1740 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1741 ;;Total ram usage:        9 bytes
  1742 ;; Hardware stack levels used:    1
  1743 ;; Hardware stack levels required when called:   13
  1744 ;; This function calls:
  1745 ;;		_FromMainHigh_sendmsg
  1746 ;;		___lwmod
  1747 ;; This function is called by:
  1748 ;;		_main
  1749 ;; This function uses a non-reentrant model
  1750 ;;
  1751                           
  1752                           	psect	text5
  1753  0011C8                     __ptext5:
  1754                           	opt stack 0
  1755  0011C8                     _timer1_lthread:
  1756                           	opt stack 17
  1757                           
  1758                           ;timer1_thread.c: 15: signed char retval;
  1759                           ;timer1_thread.c: 17: tptr->msgcount++;
  1760                           
  1761                           ; BSR set to: 0
  1762                           ;incstack = 0
  1763  0011C8  C1BC  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1764  0011CC  C1BD  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1765  0011D0  2ADE               	incf	postinc2,f,c
  1766  0011D2  0E00               	movlw	0
  1767  0011D4  22DD               	addwfc	postdec2,f,c
  1768                           
  1769                           ;timer1_thread.c: 20: if ((tptr->msgcount % 10) == 9) {
  1770  0011D6  C1BC  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1771  0011DA  C1BD  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1772  0011DE  0101               	movlb	1	; () banked
  1773  0011E0  CFDE F1A2          	movff	postinc2,___lwmod@dividend
  1774  0011E4  0101               	movlb	1	; () banked
  1775  0011E6  CFDD F1A3          	movff	postdec2,___lwmod@dividend+1
  1776  0011EA  0E00               	movlw	0
  1777  0011EC  0101               	movlb	1	; () banked
  1778  0011EE  6FA5               	movwf	(___lwmod@divisor+1)& (0+255),b
  1779  0011F0  0E0A               	movlw	10
  1780  0011F2  0101               	movlb	1	; () banked
  1781  0011F4  6FA4               	movwf	___lwmod@divisor& (0+255),b
  1782  0011F6  ECB4  F008         	call	___lwmod	;wreg free
  1783  0011FA  0101               	movlb	1	; () banked
  1784  0011FC  51A2               	movf	?___lwmod& (0+255),w,b
  1785  0011FE  0A09               	xorlw	9
  1786  001200  0101               	movlb	1	; () banked
  1787  001202  11A3               	iorwf	(?___lwmod+1)& (0+255),w,b
  1788  001204  A4D8               	btfss	status,2,c
  1789  001206  0012               	return	
  1790                           
  1791                           ; BSR set to: 1
  1792                           ;timer1_thread.c: 21: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1793  001208  0E14               	movlw	20
  1794  00120A  0101               	movlb	1	; () banked
  1795  00120C  6FB8               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1796  00120E  0101               	movlb	1	; () banked
  1797  001210  C1BD  F1BA         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1798  001214  0101               	movlb	1	; () banked
  1799  001216  C1BC  F1B9         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  1800  00121A  0E02               	movlw	2
  1801  00121C  EC24  F00B         	call	_FromMainHigh_sendmsg
  1802  001220  0101               	movlb	1	; () banked
  1803  001222  6FC4               	movwf	timer1_lthread@retval& (0+255),b
  1804  001224  0012               	return	
  1805  001226                     __end_of_timer1_lthread:
  1806                           	opt stack 0
  1807                           tblptru	equ	0xFF8
  1808                           prodh	equ	0xFF4
  1809                           prodl	equ	0xFF3
  1810                           postinc0	equ	0xFEE
  1811                           wreg	equ	0xFE8
  1812                           indf2	equ	0xFDF
  1813                           postinc2	equ	0xFDE
  1814                           postdec2	equ	0xFDD
  1815                           fsr2h	equ	0xFDA
  1816                           fsr2l	equ	0xFD9
  1817                           status	equ	0xFD8
  1818                           
  1819 ;; *************** function ___lwmod *****************
  1820 ;; Defined at:
  1821 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwmod.c"
  1822 ;; Parameters:    Size  Location     Type
  1823 ;;  dividend        2    0[BANK1 ] unsigned int 
  1824 ;;  divisor         2    2[BANK1 ] unsigned int 
  1825 ;; Auto vars:     Size  Location     Type
  1826 ;;  counter         1    4[BANK1 ] unsigned char 
  1827 ;; Return value:  Size  Location     Type
  1828 ;;                  2    0[BANK1 ] unsigned int 
  1829 ;; Registers used:
  1830 ;;		wreg, status,2, status,0
  1831 ;; Tracked objects:
  1832 ;;		On entry : 0/0
  1833 ;;		On exit  : 0/0
  1834 ;;		Unchanged: 0/0
  1835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1836 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1837 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1839 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1840 ;;Total ram usage:        5 bytes
  1841 ;; Hardware stack levels used:    1
  1842 ;; Hardware stack levels required when called:   10
  1843 ;; This function calls:
  1844 ;;		Nothing
  1845 ;; This function is called by:
  1846 ;;		_timer1_lthread
  1847 ;; This function uses a non-reentrant model
  1848 ;;
  1849                           
  1850                           	psect	text6
  1851  001168                     __ptext6:
  1852                           	opt stack 0
  1853  001168                     ___lwmod:
  1854                           	opt stack 19
  1855                           
  1856                           ; BSR set to: 1
  1857                           ;incstack = 0
  1858  001168  0101               	movlb	1	; () banked
  1859  00116A  51A5               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1860  00116C  11A4               	iorwf	___lwmod@divisor& (0+255),w,b
  1861  00116E  B4D8               	btfsc	status,2,c
  1862  001170  D026               	goto	l1022
  1863                           
  1864                           ; BSR set to: 1
  1865  001172  0E01               	movlw	1
  1866  001174  0101               	movlb	1	; () banked
  1867  001176  6FA6               	movwf	___lwmod@counter& (0+255),b
  1868  001178  D006               	goto	l2939
  1869  00117A                     l2937:
  1870                           
  1871                           ; BSR set to: 1
  1872  00117A  0101               	movlb	1	; () banked
  1873  00117C  90D8               	bcf	status,0,c
  1874  00117E  37A4               	rlcf	___lwmod@divisor& (0+255),f,b
  1875  001180  37A5               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1876  001182  0101               	movlb	1	; () banked
  1877  001184  2BA6               	incf	___lwmod@counter& (0+255),f,b
  1878  001186                     l2939:
  1879                           
  1880                           ; BSR set to: 1
  1881  001186  0101               	movlb	1	; () banked
  1882  001188  AFA5               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1883  00118A  D7F7               	goto	l2937
  1884  00118C                     l2941:
  1885                           
  1886                           ; BSR set to: 1
  1887  00118C  0101               	movlb	1	; () banked
  1888  00118E  51A4               	movf	___lwmod@divisor& (0+255),w,b
  1889  001190  0101               	movlb	1	; () banked
  1890  001192  5DA2               	subwf	___lwmod@dividend& (0+255),w,b
  1891  001194  0101               	movlb	1	; () banked
  1892  001196  51A5               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1893  001198  0101               	movlb	1	; () banked
  1894  00119A  59A3               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1895  00119C  A0D8               	btfss	status,0,c
  1896  00119E  D008               	goto	l2945
  1897                           
  1898                           ; BSR set to: 1
  1899  0011A0  0101               	movlb	1	; () banked
  1900  0011A2  51A4               	movf	___lwmod@divisor& (0+255),w,b
  1901  0011A4  0101               	movlb	1	; () banked
  1902  0011A6  5FA2               	subwf	___lwmod@dividend& (0+255),f,b
  1903  0011A8  0101               	movlb	1	; () banked
  1904  0011AA  51A5               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1905  0011AC  0101               	movlb	1	; () banked
  1906  0011AE  5BA3               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1907  0011B0                     l2945:
  1908                           
  1909                           ; BSR set to: 1
  1910  0011B0  0101               	movlb	1	; () banked
  1911  0011B2  90D8               	bcf	status,0,c
  1912  0011B4  33A5               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1913  0011B6  33A4               	rrcf	___lwmod@divisor& (0+255),f,b
  1914                           
  1915                           ; BSR set to: 1
  1916  0011B8  0101               	movlb	1	; () banked
  1917  0011BA  2FA6               	decfsz	___lwmod@counter& (0+255),f,b
  1918  0011BC  D7E7               	goto	l2941
  1919  0011BE                     l1022:
  1920                           
  1921                           ; BSR set to: 1
  1922  0011BE  C1A2  F1A2         	movff	___lwmod@dividend,?___lwmod
  1923  0011C2  C1A3  F1A3         	movff	___lwmod@dividend+1,?___lwmod+1
  1924                           
  1925                           ; BSR set to: 1
  1926  0011C6  0012               	return	
  1927  0011C8                     __end_of___lwmod:
  1928                           	opt stack 0
  1929                           tblptru	equ	0xFF8
  1930                           prodh	equ	0xFF4
  1931                           prodl	equ	0xFF3
  1932                           postinc0	equ	0xFEE
  1933                           wreg	equ	0xFE8
  1934                           indf2	equ	0xFDF
  1935                           postinc2	equ	0xFDE
  1936                           postdec2	equ	0xFDD
  1937                           fsr2h	equ	0xFDA
  1938                           fsr2l	equ	0xFD9
  1939                           status	equ	0xFD8
  1940                           
  1941 ;; *************** function _FromMainHigh_sendmsg *****************
  1942 ;; Defined at:
  1943 ;;		line 174 in file "../src/messages.c"
  1944 ;; Parameters:    Size  Location     Type
  1945 ;;  length          1    wreg     unsigned char 
  1946 ;;  msgtype         1   22[BANK1 ] unsigned char 
  1947 ;;  data            2   23[BANK1 ] PTR void 
  1948 ;;		 -> main@t1thread_data(2), 
  1949 ;; Auto vars:     Size  Location     Type
  1950 ;;  length          1   25[BANK1 ] unsigned char 
  1951 ;; Return value:  Size  Location     Type
  1952 ;;                  1    wreg      char 
  1953 ;; Registers used:
  1954 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1955 ;; Tracked objects:
  1956 ;;		On entry : 0/0
  1957 ;;		On exit  : 0/0
  1958 ;;		Unchanged: 0/0
  1959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1960 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1961 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1963 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1964 ;;Total ram usage:        4 bytes
  1965 ;; Hardware stack levels used:    1
  1966 ;; Hardware stack levels required when called:   12
  1967 ;; This function calls:
  1968 ;;		_send_msg
  1969 ;; This function is called by:
  1970 ;;		_timer1_lthread
  1971 ;; This function uses a non-reentrant model
  1972 ;;
  1973                           
  1974                           	psect	text7
  1975  001648                     __ptext7:
  1976                           	opt stack 0
  1977  001648                     _FromMainHigh_sendmsg:
  1978                           	opt stack 17
  1979                           
  1980                           ; BSR set to: 1
  1981                           ;incstack = 0
  1982                           ;FromMainHigh_sendmsg@length stored from wreg
  1983  001648  0101               	movlb	1	; () banked
  1984  00164A  6FBB               	movwf	FromMainHigh_sendmsg@length& (0+255),b
  1985                           
  1986                           ; BSR set to: 1
  1987                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  1988  00164C  0101               	movlb	1	; () banked
  1989  00164E  0E01               	movlw	high _FromMainHigh_MQ
  1990  001650  0101               	movlb	1	; () banked
  1991  001652  6FAD               	movwf	(send_msg@qptr+1)& (0+255),b
  1992  001654  0101               	movlb	1	; () banked
  1993  001656  0E00               	movlw	low _FromMainHigh_MQ
  1994  001658  0101               	movlb	1	; () banked
  1995  00165A  6FAC               	movwf	send_msg@qptr& (0+255),b
  1996  00165C  C1BB  F1AE         	movff	FromMainHigh_sendmsg@length,send_msg@length
  1997  001660  C1B8  F1AF         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  1998  001664  0101               	movlb	1	; () banked
  1999  001666  C1BA  F1B1         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  2000  00166A  0101               	movlb	1	; () banked
  2001  00166C  C1B9  F1B0         	movff	FromMainHigh_sendmsg@data,send_msg@data
  2002  001670  ECF7  F005         	call	_send_msg	;wreg free
  2003  001674  0012               	return	
  2004  001676                     __end_of_FromMainHigh_sendmsg:
  2005                           	opt stack 0
  2006                           tblptru	equ	0xFF8
  2007                           prodh	equ	0xFF4
  2008                           prodl	equ	0xFF3
  2009                           postinc0	equ	0xFEE
  2010                           wreg	equ	0xFE8
  2011                           indf2	equ	0xFDF
  2012                           postinc2	equ	0xFDE
  2013                           postdec2	equ	0xFDD
  2014                           fsr2h	equ	0xFDA
  2015                           fsr2l	equ	0xFD9
  2016                           status	equ	0xFD8
  2017                           
  2018 ;; *************** function _send_msg *****************
  2019 ;; Defined at:
  2020 ;;		line 24 in file "../src/messages.c"
  2021 ;; Parameters:    Size  Location     Type
  2022 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  2023 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2024 ;;  length          1   12[BANK1 ] unsigned char 
  2025 ;;  msgtype         1   13[BANK1 ] unsigned char 
  2026 ;;  data            2   14[BANK1 ] PTR void 
  2027 ;;		 -> NULL(0), timer0_int_handler@val(2), i2c_int_handler@error_buf(3), main@t1thread_data(2), 
  2028 ;;		 -> main@ic(28), 
  2029 ;; Auto vars:     Size  Location     Type
  2030 ;;  qmsg            2   20[BANK1 ] PTR struct __msg
  2031 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  2032 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2033 ;;  tlength         2   17[BANK1 ] unsigned int 
  2034 ;;  slot            1   19[BANK1 ] unsigned char 
  2035 ;; Return value:  Size  Location     Type
  2036 ;;                  1    wreg      char 
  2037 ;; Registers used:
  2038 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2039 ;; Tracked objects:
  2040 ;;		On entry : 0/0
  2041 ;;		On exit  : 0/0
  2042 ;;		Unchanged: 0/0
  2043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2044 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2045 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2046 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2047 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2048 ;;Total ram usage:       12 bytes
  2049 ;; Hardware stack levels used:    1
  2050 ;; Hardware stack levels required when called:   11
  2051 ;; This function calls:
  2052 ;;		_memcpy
  2053 ;; This function is called by:
  2054 ;;		_FromMainHigh_sendmsg
  2055 ;;		_FromMainLow_sendmsg
  2056 ;; This function uses a non-reentrant model
  2057 ;;
  2058                           
  2059                           	psect	text8
  2060  000BEE                     __ptext8:
  2061                           	opt stack 0
  2062  000BEE                     _send_msg:
  2063                           	opt stack 17
  2064                           
  2065                           ;messages.c: 25: unsigned char slot;
  2066                           ;messages.c: 27: msg *qmsg;
  2067                           ;messages.c: 28: size_t tlength = length;
  2068                           
  2069                           ;incstack = 0
  2070  000BEE  0101               	movlb	1	; () banked
  2071  000BF0  C1AE  F1B3         	movff	send_msg@length,send_msg@tlength
  2072  000BF4  0101               	movlb	1	; () banked
  2073  000BF6  6BB4               	clrf	(send_msg@tlength+1)& (0+255),b
  2074                           
  2075                           ; BSR set to: 1
  2076                           ;messages.c: 38: slot = qptr->cur_write_ind;
  2077  000BF8  0101               	movlb	1	; () banked
  2078  000BFA  EE20 F034          	lfsr	2,52
  2079  000BFE  0101               	movlb	1	; () banked
  2080  000C00  51AC               	movf	send_msg@qptr& (0+255),w,b
  2081  000C02  26D9               	addwf	fsr2l,f,c
  2082  000C04  0101               	movlb	1	; () banked
  2083  000C06  51AD               	movf	(send_msg@qptr+1)& (0+255),w,b
  2084  000C08  22DA               	addwfc	fsr2h,f,c
  2085  000C0A  50DF               	movf	indf2,w,c
  2086  000C0C  0101               	movlb	1	; () banked
  2087  000C0E  6FB5               	movwf	send_msg@slot& (0+255),b
  2088                           
  2089                           ; BSR set to: 1
  2090                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  2091  000C10  0101               	movlb	1	; () banked
  2092  000C12  51B5               	movf	send_msg@slot& (0+255),w,b
  2093  000C14  0D0D               	mullw	13
  2094  000C16  50F3               	movf	prodl,w,c
  2095  000C18  0101               	movlb	1	; () banked
  2096  000C1A  25AC               	addwf	send_msg@qptr& (0+255),w,b
  2097  000C1C  0101               	movlb	1	; () banked
  2098  000C1E  6FB6               	movwf	send_msg@qmsg& (0+255),b
  2099  000C20  50F4               	movf	prodh,w,c
  2100  000C22  0101               	movlb	1	; () banked
  2101  000C24  21AD               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  2102  000C26  0101               	movlb	1	; () banked
  2103  000C28  6FB7               	movwf	(send_msg@qmsg+1)& (0+255),b
  2104                           
  2105                           ; BSR set to: 1
  2106                           ;messages.c: 41: if (qmsg->full != 0) {
  2107  000C2A  C1B6  FFD9         	movff	send_msg@qmsg,fsr2l
  2108  000C2E  C1B7  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2109  000C32  50DF               	movf	indf2,w,c
  2110  000C34  B4D8               	btfsc	status,2,c
  2111  000C36  D002               	goto	l2765
  2112                           
  2113                           ; BSR set to: 1
  2114                           ;messages.c: 42: return (-1);
  2115  000C38  0EFF               	movlw	255
  2116  000C3A  0012               	return	
  2117  000C3C                     l2765:
  2118                           
  2119                           ; BSR set to: 1
  2120                           ;messages.c: 43: }
  2121                           ;messages.c: 46: qmsg->length = length;
  2122  000C3C  0101               	movlb	1	; () banked
  2123  000C3E  EE20 F001          	lfsr	2,1
  2124  000C42  0101               	movlb	1	; () banked
  2125  000C44  51B6               	movf	send_msg@qmsg& (0+255),w,b
  2126  000C46  26D9               	addwf	fsr2l,f,c
  2127  000C48  0101               	movlb	1	; () banked
  2128  000C4A  51B7               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2129  000C4C  22DA               	addwfc	fsr2h,f,c
  2130  000C4E  0101               	movlb	1	; () banked
  2131  000C50  C1AE  FFDF         	movff	send_msg@length,indf2
  2132                           
  2133                           ;messages.c: 47: qmsg->msgtype = msgtype;
  2134  000C54  0101               	movlb	1	; () banked
  2135  000C56  EE20 F002          	lfsr	2,2
  2136  000C5A  0101               	movlb	1	; () banked
  2137  000C5C  51B6               	movf	send_msg@qmsg& (0+255),w,b
  2138  000C5E  26D9               	addwf	fsr2l,f,c
  2139  000C60  0101               	movlb	1	; () banked
  2140  000C62  51B7               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2141  000C64  22DA               	addwfc	fsr2h,f,c
  2142  000C66  0101               	movlb	1	; () banked
  2143  000C68  C1AF  FFDF         	movff	send_msg@msgtype,indf2
  2144                           
  2145                           ; BSR set to: 1
  2146                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  2147  000C6C  0E03               	movlw	3
  2148  000C6E  0101               	movlb	1	; () banked
  2149  000C70  25B6               	addwf	send_msg@qmsg& (0+255),w,b
  2150  000C72  0101               	movlb	1	; () banked
  2151  000C74  6FA2               	movwf	memcpy@d1& (0+255),b
  2152  000C76  0E00               	movlw	0
  2153  000C78  0101               	movlb	1	; () banked
  2154  000C7A  21B7               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  2155  000C7C  0101               	movlb	1	; () banked
  2156  000C7E  6FA3               	movwf	(memcpy@d1+1)& (0+255),b
  2157  000C80  0101               	movlb	1	; () banked
  2158  000C82  C1B1  F1A5         	movff	send_msg@data+1,memcpy@s1+1
  2159  000C86  0101               	movlb	1	; () banked
  2160  000C88  C1B0  F1A4         	movff	send_msg@data,memcpy@s1
  2161  000C8C  C1B3  F1A6         	movff	send_msg@tlength,memcpy@n
  2162  000C90  C1B4  F1A7         	movff	send_msg@tlength+1,memcpy@n+1
  2163  000C94  EC6D  F009         	call	_memcpy	;wreg free
  2164                           
  2165                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  2166  000C98  0101               	movlb	1	; () banked
  2167  000C9A  EE20 F034          	lfsr	2,52
  2168  000C9E  0101               	movlb	1	; () banked
  2169  000CA0  51AC               	movf	send_msg@qptr& (0+255),w,b
  2170  000CA2  26D9               	addwf	fsr2l,f,c
  2171  000CA4  0101               	movlb	1	; () banked
  2172  000CA6  51AD               	movf	(send_msg@qptr+1)& (0+255),w,b
  2173  000CA8  22DA               	addwfc	fsr2h,f,c
  2174  000CAA  0101               	movlb	1	; () banked
  2175  000CAC  EE10 F034          	lfsr	1,52
  2176  000CB0  0101               	movlb	1	; () banked
  2177  000CB2  51AC               	movf	send_msg@qptr& (0+255),w,b
  2178  000CB4  26E1               	addwf	fsr1l,f,c
  2179  000CB6  0101               	movlb	1	; () banked
  2180  000CB8  51AD               	movf	(send_msg@qptr+1)& (0+255),w,b
  2181  000CBA  22E2               	addwfc	fsr1h,f,c
  2182  000CBC  50E7               	movf	indf1,w,c
  2183  000CBE  0101               	movlb	1	; () banked
  2184  000CC0  6FB2               	movwf	??_send_msg& (0+255),b
  2185  000CC2  0101               	movlb	1	; () banked
  2186  000CC4  29B2               	incf	??_send_msg& (0+255),w,b
  2187  000CC6  0B03               	andlw	3
  2188  000CC8  6EDF               	movwf	indf2,c
  2189                           
  2190                           ; BSR set to: 1
  2191                           ;messages.c: 59: qmsg->full = 1;
  2192  000CCA  C1B6  FFD9         	movff	send_msg@qmsg,fsr2l
  2193  000CCE  C1B7  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2194  000CD2  0E01               	movlw	1
  2195  000CD4  6EDF               	movwf	indf2,c
  2196                           
  2197                           ; BSR set to: 1
  2198                           ;messages.c: 60: return (1);
  2199  000CD6  0E01               	movlw	1
  2200  000CD8  0012               	return	
  2201  000CDA                     __end_of_send_msg:
  2202                           	opt stack 0
  2203                           tblptru	equ	0xFF8
  2204                           prodh	equ	0xFF4
  2205                           prodl	equ	0xFF3
  2206                           postinc0	equ	0xFEE
  2207                           wreg	equ	0xFE8
  2208                           indf1	equ	0xFE7
  2209                           fsr1h	equ	0xFE2
  2210                           fsr1l	equ	0xFE1
  2211                           indf2	equ	0xFDF
  2212                           postinc2	equ	0xFDE
  2213                           postdec2	equ	0xFDD
  2214                           fsr2h	equ	0xFDA
  2215                           fsr2l	equ	0xFD9
  2216                           status	equ	0xFD8
  2217                           
  2218 ;; *************** function _timer0_lthread *****************
  2219 ;; Defined at:
  2220 ;;		line 9 in file "../src/timer0_thread.c"
  2221 ;; Parameters:    Size  Location     Type
  2222 ;;  tptr            2    0[BANK1 ] PTR struct __timer0_thre
  2223 ;;		 -> main@t0thread_data(2), 
  2224 ;;  msgtype         2    2[BANK1 ] int 
  2225 ;;  length          2    4[BANK1 ] int 
  2226 ;;  msgbuffer       2    6[BANK1 ] PTR unsigned char 
  2227 ;;		 -> main@msgbuffer(11), 
  2228 ;; Auto vars:     Size  Location     Type
  2229 ;;  msgval          2    8[BANK1 ] PTR unsigned int 
  2230 ;;		 -> main@msgbuffer(11), 
  2231 ;; Return value:  Size  Location     Type
  2232 ;;                  2    0[BANK1 ] int 
  2233 ;; Registers used:
  2234 ;;		wreg, status,2, status,0
  2235 ;; Tracked objects:
  2236 ;;		On entry : 0/0
  2237 ;;		On exit  : 0/0
  2238 ;;		Unchanged: 0/0
  2239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2240 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2241 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2243 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2244 ;;Total ram usage:       10 bytes
  2245 ;; Hardware stack levels used:    1
  2246 ;; Hardware stack levels required when called:   10
  2247 ;; This function calls:
  2248 ;;		Nothing
  2249 ;; This function is called by:
  2250 ;;		_main
  2251 ;; This function uses a non-reentrant model
  2252 ;;
  2253                           
  2254                           	psect	text9
  2255  0017B2                     __ptext9:
  2256                           	opt stack 0
  2257  0017B2                     _timer0_lthread:
  2258                           	opt stack 20
  2259                           
  2260                           ;timer0_thread.c: 10: unsigned int *msgval;
  2261                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2262                           
  2263                           ; BSR set to: 1
  2264                           ;incstack = 0
  2265  0017B2  0101               	movlb	1	; () banked
  2266  0017B4  C1A9  F1AB         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2267  0017B8  0101               	movlb	1	; () banked
  2268  0017BA  C1A8  F1AA         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2269                           
  2270                           ; BSR set to: 1
  2271  0017BE  0012               	return	
  2272  0017C0                     __end_of_timer0_lthread:
  2273                           	opt stack 0
  2274                           tblptru	equ	0xFF8
  2275                           prodh	equ	0xFF4
  2276                           prodl	equ	0xFF3
  2277                           postinc0	equ	0xFEE
  2278                           wreg	equ	0xFE8
  2279                           indf1	equ	0xFE7
  2280                           fsr1h	equ	0xFE2
  2281                           fsr1l	equ	0xFE1
  2282                           indf2	equ	0xFDF
  2283                           postinc2	equ	0xFDE
  2284                           postdec2	equ	0xFDD
  2285                           fsr2h	equ	0xFDA
  2286                           fsr2l	equ	0xFD9
  2287                           status	equ	0xFD8
  2288                           
  2289 ;; *************** function _start_i2c_slave_reply *****************
  2290 ;; Defined at:
  2291 ;;		line 53 in file "../src/my_i2c.c"
  2292 ;; Parameters:    Size  Location     Type
  2293 ;;  length          1    wreg     unsigned char 
  2294 ;;  msg             2    0[BANK1 ] PTR unsigned char 
  2295 ;;		 -> main@msgbuffer(11), 
  2296 ;; Auto vars:     Size  Location     Type
  2297 ;;  length          1    4[BANK1 ] unsigned char 
  2298 ;; Return value:  Size  Location     Type
  2299 ;;		None               void
  2300 ;; Registers used:
  2301 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2302 ;; Tracked objects:
  2303 ;;		On entry : 0/0
  2304 ;;		On exit  : 0/0
  2305 ;;		Unchanged: 0/0
  2306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2307 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2308 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2309 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2310 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2311 ;;Total ram usage:        5 bytes
  2312 ;; Hardware stack levels used:    1
  2313 ;; Hardware stack levels required when called:   10
  2314 ;; This function calls:
  2315 ;;		Nothing
  2316 ;; This function is called by:
  2317 ;;		_main
  2318 ;; This function uses a non-reentrant model
  2319 ;;
  2320                           
  2321                           	psect	text10
  2322  000AEA                     __ptext10:
  2323                           	opt stack 0
  2324  000AEA                     _start_i2c_slave_reply:
  2325                           	opt stack 20
  2326                           
  2327                           ; BSR set to: 1
  2328                           ;incstack = 0
  2329                           ;start_i2c_slave_reply@length stored from wreg
  2330  000AEA  0101               	movlb	1	; () banked
  2331  000AEC  6FA6               	movwf	start_i2c_slave_reply@length& (0+255),b
  2332                           
  2333                           ; BSR set to: 1
  2334                           ;my_i2c.c: 55: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  2335  000AEE  0100               	movlb	0	; () banked
  2336  000AF0  EE20 F019          	lfsr	2,25
  2337  000AF4  0100               	movlb	0	; () banked
  2338  000AF6  51CF               	movf	_ic_ptr& (0+255),w,b
  2339  000AF8  26D9               	addwf	fsr2l,f,c
  2340  000AFA  0100               	movlb	0	; () banked
  2341  000AFC  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  2342  000AFE  22DA               	addwfc	fsr2h,f,c
  2343  000B00  0E00               	movlw	0
  2344  000B02  6EDF               	movwf	indf2,c
  2345  000B04  D03E               	goto	l3287
  2346  000B06                     l3283:
  2347                           
  2348                           ;my_i2c.c: 56: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  2349  000B06  0100               	movlb	0	; () banked
  2350  000B08  EE20 F019          	lfsr	2,25
  2351  000B0C  0100               	movlb	0	; () banked
  2352  000B0E  51CF               	movf	_ic_ptr& (0+255),w,b
  2353  000B10  26D9               	addwf	fsr2l,f,c
  2354  000B12  0100               	movlb	0	; () banked
  2355  000B14  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  2356  000B16  22DA               	addwfc	fsr2h,f,c
  2357  000B18  50DF               	movf	indf2,w,c
  2358  000B1A  0101               	movlb	1	; () banked
  2359  000B1C  6FA4               	movwf	??_start_i2c_slave_reply& (0+255),b
  2360  000B1E  0101               	movlb	1	; () banked
  2361  000B20  51A4               	movf	??_start_i2c_slave_reply& (0+255),w,b
  2362  000B22  0D01               	mullw	1
  2363  000B24  50F3               	movf	prodl,w,c
  2364  000B26  0101               	movlb	1	; () banked
  2365  000B28  25A2               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  2366  000B2A  6ED9               	movwf	fsr2l,c
  2367  000B2C  50F4               	movf	prodh,w,c
  2368  000B2E  0101               	movlb	1	; () banked
  2369  000B30  21A3               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  2370  000B32  6EDA               	movwf	fsr2h,c
  2371  000B34  0100               	movlb	0	; () banked
  2372  000B36  EE10 F019          	lfsr	1,25
  2373  000B3A  0100               	movlb	0	; () banked
  2374  000B3C  51CF               	movf	_ic_ptr& (0+255),w,b
  2375  000B3E  26E1               	addwf	fsr1l,f,c
  2376  000B40  0100               	movlb	0	; () banked
  2377  000B42  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  2378  000B44  22E2               	addwfc	fsr1h,f,c
  2379  000B46  50E7               	movf	indf1,w,c
  2380  000B48  0101               	movlb	1	; () banked
  2381  000B4A  6FA5               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  2382  000B4C  0101               	movlb	1	; () banked
  2383  000B4E  51A5               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  2384  000B50  0D01               	mullw	1
  2385  000B52  0E0F               	movlw	15
  2386  000B54  26F3               	addwf	prodl,f,c
  2387  000B56  0E00               	movlw	0
  2388  000B58  22F4               	addwfc	prodh,f,c
  2389  000B5A  50F3               	movf	prodl,w,c
  2390  000B5C  0100               	movlb	0	; () banked
  2391  000B5E  25CF               	addwf	_ic_ptr& (0+255),w,b
  2392  000B60  6EE1               	movwf	fsr1l,c
  2393  000B62  50F4               	movf	prodh,w,c
  2394  000B64  0100               	movlb	0	; () banked
  2395  000B66  21D0               	addwfc	(_ic_ptr+1)& (0+255),w,b
  2396  000B68  6EE2               	movwf	fsr1h,c
  2397  000B6A  CFDF FFE7          	movff	indf2,indf1
  2398                           
  2399                           ; BSR set to: 0
  2400  000B6E  0100               	movlb	0	; () banked
  2401  000B70  EE20 F019          	lfsr	2,25
  2402  000B74  0100               	movlb	0	; () banked
  2403  000B76  51CF               	movf	_ic_ptr& (0+255),w,b
  2404  000B78  26D9               	addwf	fsr2l,f,c
  2405  000B7A  0100               	movlb	0	; () banked
  2406  000B7C  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  2407  000B7E  22DA               	addwfc	fsr2h,f,c
  2408  000B80  2ADF               	incf	indf2,f,c
  2409  000B82                     l3287:
  2410                           
  2411                           ; BSR set to: 0
  2412  000B82  0100               	movlb	0	; () banked
  2413  000B84  EE20 F019          	lfsr	2,25
  2414  000B88  0100               	movlb	0	; () banked
  2415  000B8A  51CF               	movf	_ic_ptr& (0+255),w,b
  2416  000B8C  26D9               	addwf	fsr2l,f,c
  2417  000B8E  0100               	movlb	0	; () banked
  2418  000B90  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  2419  000B92  22DA               	addwfc	fsr2h,f,c
  2420  000B94  50DF               	movf	indf2,w,c
  2421  000B96  0101               	movlb	1	; () banked
  2422  000B98  6FA4               	movwf	??_start_i2c_slave_reply& (0+255),b
  2423  000B9A  0101               	movlb	1	; () banked
  2424  000B9C  51A6               	movf	start_i2c_slave_reply@length& (0+255),w,b
  2425  000B9E  0101               	movlb	1	; () banked
  2426  000BA0  5DA4               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  2427  000BA2  A0D8               	btfss	status,0,c
  2428  000BA4  D7B0               	goto	l3283
  2429                           
  2430                           ; BSR set to: 1
  2431                           ;my_i2c.c: 57: }
  2432                           ;my_i2c.c: 58: ic_ptr->outbuflen = length;
  2433                           
  2434                           ; BSR set to: 1
  2435  000BA6  0100               	movlb	0	; () banked
  2436  000BA8  EE20 F019          	lfsr	2,25
  2437  000BAC  0100               	movlb	0	; () banked
  2438  000BAE  51CF               	movf	_ic_ptr& (0+255),w,b
  2439  000BB0  26D9               	addwf	fsr2l,f,c
  2440  000BB2  0100               	movlb	0	; () banked
  2441  000BB4  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  2442  000BB6  22DA               	addwfc	fsr2h,f,c
  2443  000BB8  0101               	movlb	1	; () banked
  2444  000BBA  C1A6  FFDF         	movff	start_i2c_slave_reply@length,indf2
  2445                           
  2446                           ;my_i2c.c: 59: ic_ptr->outbufind = 1;
  2447  000BBE  0100               	movlb	0	; () banked
  2448  000BC0  EE20 F01A          	lfsr	2,26
  2449  000BC4  0100               	movlb	0	; () banked
  2450  000BC6  51CF               	movf	_ic_ptr& (0+255),w,b
  2451  000BC8  26D9               	addwf	fsr2l,f,c
  2452  000BCA  0100               	movlb	0	; () banked
  2453  000BCC  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  2454  000BCE  22DA               	addwfc	fsr2h,f,c
  2455  000BD0  0E01               	movlw	1
  2456  000BD2  6EDF               	movwf	indf2,c
  2457                           
  2458                           ;my_i2c.c: 62: SSPBUF = ic_ptr->outbuffer[0];
  2459  000BD4  0100               	movlb	0	; () banked
  2460  000BD6  EE20 F00F          	lfsr	2,15
  2461  000BDA  0100               	movlb	0	; () banked
  2462  000BDC  51CF               	movf	_ic_ptr& (0+255),w,b
  2463  000BDE  26D9               	addwf	fsr2l,f,c
  2464  000BE0  0100               	movlb	0	; () banked
  2465  000BE2  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  2466  000BE4  22DA               	addwfc	fsr2h,f,c
  2467  000BE6  50DF               	movf	indf2,w,c
  2468  000BE8  6EC9               	movwf	4041,c	;volatile
  2469                           
  2470                           ; BSR set to: 0
  2471                           ;my_i2c.c: 65: SSPCON1bits.CKP = 1;
  2472  000BEA  88C6               	bsf	4038,4,c	;volatile
  2473                           
  2474                           ; BSR set to: 0
  2475  000BEC  0012               	return	
  2476  000BEE                     __end_of_start_i2c_slave_reply:
  2477                           	opt stack 0
  2478                           tblptru	equ	0xFF8
  2479                           prodh	equ	0xFF4
  2480                           prodl	equ	0xFF3
  2481                           postinc0	equ	0xFEE
  2482                           wreg	equ	0xFE8
  2483                           indf1	equ	0xFE7
  2484                           fsr1h	equ	0xFE2
  2485                           fsr1l	equ	0xFE1
  2486                           indf2	equ	0xFDF
  2487                           postinc2	equ	0xFDE
  2488                           postdec2	equ	0xFDD
  2489                           fsr2h	equ	0xFDA
  2490                           fsr2l	equ	0xFD9
  2491                           status	equ	0xFD8
  2492                           
  2493 ;; *************** function _init_timer1_lthread *****************
  2494 ;; Defined at:
  2495 ;;		line 6 in file "../src/timer1_thread.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;  tptr            2    0[BANK1 ] PTR struct __timer1_thre
  2498 ;;		 -> main@t1thread_data(2), 
  2499 ;; Auto vars:     Size  Location     Type
  2500 ;;		None
  2501 ;; Return value:  Size  Location     Type
  2502 ;;		None               void
  2503 ;; Registers used:
  2504 ;;		wreg, fsr2l, fsr2h
  2505 ;; Tracked objects:
  2506 ;;		On entry : 0/0
  2507 ;;		On exit  : 0/0
  2508 ;;		Unchanged: 0/0
  2509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2510 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2513 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2514 ;;Total ram usage:        2 bytes
  2515 ;; Hardware stack levels used:    1
  2516 ;; Hardware stack levels required when called:   10
  2517 ;; This function calls:
  2518 ;;		Nothing
  2519 ;; This function is called by:
  2520 ;;		_main
  2521 ;; This function uses a non-reentrant model
  2522 ;;
  2523                           
  2524                           	psect	text11
  2525  00175A                     __ptext11:
  2526                           	opt stack 0
  2527  00175A                     _init_timer1_lthread:
  2528                           	opt stack 20
  2529                           
  2530                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2531                           
  2532                           ; BSR set to: 0
  2533                           ;incstack = 0
  2534  00175A  C1A2  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2535  00175E  C1A3  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2536  001762  0E00               	movlw	0
  2537  001764  6EDE               	movwf	postinc2,c
  2538  001766  0E00               	movlw	0
  2539  001768  6EDD               	movwf	postdec2,c
  2540  00176A  0012               	return	
  2541  00176C                     __end_of_init_timer1_lthread:
  2542                           	opt stack 0
  2543                           tblptru	equ	0xFF8
  2544                           prodh	equ	0xFF4
  2545                           prodl	equ	0xFF3
  2546                           postinc0	equ	0xFEE
  2547                           wreg	equ	0xFE8
  2548                           indf1	equ	0xFE7
  2549                           fsr1h	equ	0xFE2
  2550                           fsr1l	equ	0xFE1
  2551                           indf2	equ	0xFDF
  2552                           postinc2	equ	0xFDE
  2553                           postdec2	equ	0xFDD
  2554                           fsr2h	equ	0xFDA
  2555                           fsr2l	equ	0xFD9
  2556                           status	equ	0xFD8
  2557                           
  2558 ;; *************** function _init_queues *****************
  2559 ;; Defined at:
  2560 ;;		line 194 in file "../src/messages.c"
  2561 ;; Parameters:    Size  Location     Type
  2562 ;;		None
  2563 ;; Auto vars:     Size  Location     Type
  2564 ;;		None
  2565 ;; Return value:  Size  Location     Type
  2566 ;;		None               void
  2567 ;; Registers used:
  2568 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2569 ;; Tracked objects:
  2570 ;;		On entry : 0/0
  2571 ;;		On exit  : 0/0
  2572 ;;		Unchanged: 0/0
  2573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2578 ;;Total ram usage:        0 bytes
  2579 ;; Hardware stack levels used:    1
  2580 ;; Hardware stack levels required when called:   11
  2581 ;; This function calls:
  2582 ;;		_init_queue
  2583 ;; This function is called by:
  2584 ;;		_main
  2585 ;; This function uses a non-reentrant model
  2586 ;;
  2587                           
  2588                           	psect	text12
  2589  001284                     __ptext12:
  2590                           	opt stack 0
  2591  001284                     _init_queues:
  2592                           	opt stack 19
  2593                           
  2594                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2595                           
  2596                           ;incstack = 0
  2597  001284  0E00               	movlw	0
  2598  001286  6E2E               	movwf	_MQ_Main_Willing_to_block,c
  2599                           
  2600                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2601  001288  0100               	movlb	0	; () banked
  2602  00128A  0E00               	movlw	high _ToMainLow_MQ
  2603  00128C  0101               	movlb	1	; () banked
  2604  00128E  6FA3               	movwf	(init_queue@qptr+1)& (0+255),b
  2605  001290  0100               	movlb	0	; () banked
  2606  001292  0E60               	movlw	low _ToMainLow_MQ
  2607  001294  0101               	movlb	1	; () banked
  2608  001296  6FA2               	movwf	init_queue@qptr& (0+255),b
  2609  001298  EC82  F008         	call	_init_queue	;wreg free
  2610                           
  2611                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2612  00129C  0101               	movlb	1	; () banked
  2613  00129E  0E01               	movlw	high _ToMainHigh_MQ
  2614  0012A0  0101               	movlb	1	; () banked
  2615  0012A2  6FA3               	movwf	(init_queue@qptr+1)& (0+255),b
  2616  0012A4  0101               	movlb	1	; () banked
  2617  0012A6  0E6C               	movlw	low _ToMainHigh_MQ
  2618  0012A8  0101               	movlb	1	; () banked
  2619  0012AA  6FA2               	movwf	init_queue@qptr& (0+255),b
  2620  0012AC  EC82  F008         	call	_init_queue	;wreg free
  2621                           
  2622                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2623  0012B0  0101               	movlb	1	; () banked
  2624  0012B2  0E01               	movlw	high _FromMainLow_MQ
  2625  0012B4  0101               	movlb	1	; () banked
  2626  0012B6  6FA3               	movwf	(init_queue@qptr+1)& (0+255),b
  2627  0012B8  0101               	movlb	1	; () banked
  2628  0012BA  0E36               	movlw	low _FromMainLow_MQ
  2629  0012BC  0101               	movlb	1	; () banked
  2630  0012BE  6FA2               	movwf	init_queue@qptr& (0+255),b
  2631  0012C0  EC82  F008         	call	_init_queue	;wreg free
  2632                           
  2633                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2634  0012C4  0101               	movlb	1	; () banked
  2635  0012C6  0E01               	movlw	high _FromMainHigh_MQ
  2636  0012C8  0101               	movlb	1	; () banked
  2637  0012CA  6FA3               	movwf	(init_queue@qptr+1)& (0+255),b
  2638  0012CC  0101               	movlb	1	; () banked
  2639  0012CE  0E00               	movlw	low _FromMainHigh_MQ
  2640  0012D0  0101               	movlb	1	; () banked
  2641  0012D2  6FA2               	movwf	init_queue@qptr& (0+255),b
  2642  0012D4  EC82  F008         	call	_init_queue	;wreg free
  2643  0012D8  0012               	return	
  2644  0012DA                     __end_of_init_queues:
  2645                           	opt stack 0
  2646                           tblptru	equ	0xFF8
  2647                           prodh	equ	0xFF4
  2648                           prodl	equ	0xFF3
  2649                           postinc0	equ	0xFEE
  2650                           wreg	equ	0xFE8
  2651                           indf1	equ	0xFE7
  2652                           fsr1h	equ	0xFE2
  2653                           fsr1l	equ	0xFE1
  2654                           indf2	equ	0xFDF
  2655                           postinc2	equ	0xFDE
  2656                           postdec2	equ	0xFDD
  2657                           fsr2h	equ	0xFDA
  2658                           fsr2l	equ	0xFD9
  2659                           status	equ	0xFD8
  2660                           
  2661 ;; *************** function _init_queue *****************
  2662 ;; Defined at:
  2663 ;;		line 14 in file "../src/messages.c"
  2664 ;; Parameters:    Size  Location     Type
  2665 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  2666 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2667 ;; Auto vars:     Size  Location     Type
  2668 ;;  i               1    2[BANK1 ] unsigned char 
  2669 ;; Return value:  Size  Location     Type
  2670 ;;		None               void
  2671 ;; Registers used:
  2672 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2673 ;; Tracked objects:
  2674 ;;		On entry : 0/0
  2675 ;;		On exit  : 0/0
  2676 ;;		Unchanged: 0/0
  2677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2678 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2679 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2681 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2682 ;;Total ram usage:        3 bytes
  2683 ;; Hardware stack levels used:    1
  2684 ;; Hardware stack levels required when called:   10
  2685 ;; This function calls:
  2686 ;;		Nothing
  2687 ;; This function is called by:
  2688 ;;		_init_queues
  2689 ;; This function uses a non-reentrant model
  2690 ;;
  2691                           
  2692                           	psect	text13
  2693  001104                     __ptext13:
  2694                           	opt stack 0
  2695  001104                     _init_queue:
  2696                           	opt stack 19
  2697                           
  2698                           ;messages.c: 15: unsigned char i;
  2699                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2700                           
  2701                           ;incstack = 0
  2702  001104  0101               	movlb	1	; () banked
  2703  001106  EE20 F034          	lfsr	2,52
  2704  00110A  0101               	movlb	1	; () banked
  2705  00110C  51A2               	movf	init_queue@qptr& (0+255),w,b
  2706  00110E  26D9               	addwf	fsr2l,f,c
  2707  001110  0101               	movlb	1	; () banked
  2708  001112  51A3               	movf	(init_queue@qptr+1)& (0+255),w,b
  2709  001114  22DA               	addwfc	fsr2h,f,c
  2710  001116  0E00               	movlw	0
  2711  001118  6EDF               	movwf	indf2,c
  2712                           
  2713                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2714  00111A  0101               	movlb	1	; () banked
  2715  00111C  EE20 F035          	lfsr	2,53
  2716  001120  0101               	movlb	1	; () banked
  2717  001122  51A2               	movf	init_queue@qptr& (0+255),w,b
  2718  001124  26D9               	addwf	fsr2l,f,c
  2719  001126  0101               	movlb	1	; () banked
  2720  001128  51A3               	movf	(init_queue@qptr+1)& (0+255),w,b
  2721  00112A  22DA               	addwfc	fsr2h,f,c
  2722  00112C  0E00               	movlw	0
  2723  00112E  6EDF               	movwf	indf2,c
  2724                           
  2725                           ; BSR set to: 1
  2726                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  2727  001130  0E00               	movlw	0
  2728  001132  0101               	movlb	1	; () banked
  2729  001134  6FA4               	movwf	init_queue@i& (0+255),b
  2730                           
  2731                           ; BSR set to: 1
  2732  001136  0E03               	movlw	3
  2733  001138  0101               	movlb	1	; () banked
  2734  00113A  65A4               	cpfsgt	init_queue@i& (0+255),b
  2735  00113C  D001               	goto	l2861
  2736  00113E  0012               	return	
  2737  001140                     l2861:
  2738                           
  2739                           ; BSR set to: 1
  2740                           ;messages.c: 20: qptr->queue[i].full = 0;
  2741  001140  0101               	movlb	1	; () banked
  2742  001142  51A4               	movf	init_queue@i& (0+255),w,b
  2743  001144  0D0D               	mullw	13
  2744  001146  50F3               	movf	prodl,w,c
  2745  001148  0101               	movlb	1	; () banked
  2746  00114A  25A2               	addwf	init_queue@qptr& (0+255),w,b
  2747  00114C  6ED9               	movwf	fsr2l,c
  2748  00114E  50F4               	movf	prodh,w,c
  2749  001150  0101               	movlb	1	; () banked
  2750  001152  21A3               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2751  001154  6EDA               	movwf	fsr2h,c
  2752  001156  0E00               	movlw	0
  2753  001158  6EDF               	movwf	indf2,c
  2754                           
  2755                           ; BSR set to: 1
  2756  00115A  0101               	movlb	1	; () banked
  2757  00115C  2BA4               	incf	init_queue@i& (0+255),f,b
  2758                           
  2759                           ; BSR set to: 1
  2760  00115E  0E03               	movlw	3
  2761  001160  0101               	movlb	1	; () banked
  2762  001162  65A4               	cpfsgt	init_queue@i& (0+255),b
  2763  001164  D7ED               	goto	l2861
  2764  001166  0012               	return	
  2765  001168                     __end_of_init_queue:
  2766                           	opt stack 0
  2767                           tblptru	equ	0xFF8
  2768                           prodh	equ	0xFF4
  2769                           prodl	equ	0xFF3
  2770                           postinc0	equ	0xFEE
  2771                           wreg	equ	0xFE8
  2772                           indf1	equ	0xFE7
  2773                           fsr1h	equ	0xFE2
  2774                           fsr1l	equ	0xFE1
  2775                           indf2	equ	0xFDF
  2776                           postinc2	equ	0xFDE
  2777                           postdec2	equ	0xFDD
  2778                           fsr2h	equ	0xFDA
  2779                           fsr2l	equ	0xFD9
  2780                           status	equ	0xFD8
  2781                           
  2782 ;; *************** function _init_i2c *****************
  2783 ;; Defined at:
  2784 ;;		line 282 in file "../src/my_i2c.c"
  2785 ;; Parameters:    Size  Location     Type
  2786 ;;  ic              2    0[BANK1 ] PTR struct __i2c_comm
  2787 ;;		 -> main@ic(28), 
  2788 ;; Auto vars:     Size  Location     Type
  2789 ;;		None
  2790 ;; Return value:  Size  Location     Type
  2791 ;;		None               void
  2792 ;; Registers used:
  2793 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2794 ;; Tracked objects:
  2795 ;;		On entry : 0/0
  2796 ;;		On exit  : 0/0
  2797 ;;		Unchanged: 0/0
  2798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2799 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2802 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2803 ;;Total ram usage:        2 bytes
  2804 ;; Hardware stack levels used:    1
  2805 ;; Hardware stack levels required when called:   10
  2806 ;; This function calls:
  2807 ;;		Nothing
  2808 ;; This function is called by:
  2809 ;;		_main
  2810 ;; This function uses a non-reentrant model
  2811 ;;
  2812                           
  2813                           	psect	text14
  2814  00109A                     __ptext14:
  2815                           	opt stack 0
  2816  00109A                     _init_i2c:
  2817                           	opt stack 20
  2818                           
  2819                           ;my_i2c.c: 283: ic_ptr = ic;
  2820                           
  2821                           ; BSR set to: 1
  2822                           ;incstack = 0
  2823  00109A  0101               	movlb	1	; () banked
  2824  00109C  0100               	movlb	0	; () banked
  2825  00109E  C1A3  F0D0         	movff	init_i2c@ic+1,_ic_ptr+1
  2826  0010A2  0101               	movlb	1	; () banked
  2827  0010A4  0100               	movlb	0	; () banked
  2828  0010A6  C1A2  F0CF         	movff	init_i2c@ic,_ic_ptr
  2829                           
  2830                           ; BSR set to: 0
  2831                           ;my_i2c.c: 284: ic_ptr->buflen = 0;
  2832  0010AA  0100               	movlb	0	; () banked
  2833  0010AC  EE20 F00A          	lfsr	2,10
  2834  0010B0  0100               	movlb	0	; () banked
  2835  0010B2  51CF               	movf	_ic_ptr& (0+255),w,b
  2836  0010B4  26D9               	addwf	fsr2l,f,c
  2837  0010B6  0100               	movlb	0	; () banked
  2838  0010B8  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  2839  0010BA  22DA               	addwfc	fsr2h,f,c
  2840  0010BC  0E00               	movlw	0
  2841  0010BE  6EDF               	movwf	indf2,c
  2842                           
  2843                           ; BSR set to: 0
  2844                           ;my_i2c.c: 285: ic_ptr->event_count = 0;
  2845  0010C0  0100               	movlb	0	; () banked
  2846  0010C2  EE20 F00B          	lfsr	2,11
  2847  0010C6  0100               	movlb	0	; () banked
  2848  0010C8  51CF               	movf	_ic_ptr& (0+255),w,b
  2849  0010CA  26D9               	addwf	fsr2l,f,c
  2850  0010CC  0100               	movlb	0	; () banked
  2851  0010CE  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  2852  0010D0  22DA               	addwfc	fsr2h,f,c
  2853  0010D2  0E00               	movlw	0
  2854  0010D4  6EDF               	movwf	indf2,c
  2855                           
  2856                           ; BSR set to: 0
  2857                           ;my_i2c.c: 286: ic_ptr->status = 0x5;
  2858  0010D6  0100               	movlb	0	; () banked
  2859  0010D8  EE20 F00C          	lfsr	2,12
  2860  0010DC  0100               	movlb	0	; () banked
  2861  0010DE  51CF               	movf	_ic_ptr& (0+255),w,b
  2862  0010E0  26D9               	addwf	fsr2l,f,c
  2863  0010E2  0100               	movlb	0	; () banked
  2864  0010E4  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  2865  0010E6  22DA               	addwfc	fsr2h,f,c
  2866  0010E8  0E05               	movlw	5
  2867  0010EA  6EDF               	movwf	indf2,c
  2868                           
  2869                           ; BSR set to: 0
  2870                           ;my_i2c.c: 287: ic_ptr->error_count = 0;
  2871  0010EC  0100               	movlb	0	; () banked
  2872  0010EE  EE20 F00E          	lfsr	2,14
  2873  0010F2  0100               	movlb	0	; () banked
  2874  0010F4  51CF               	movf	_ic_ptr& (0+255),w,b
  2875  0010F6  26D9               	addwf	fsr2l,f,c
  2876  0010F8  0100               	movlb	0	; () banked
  2877  0010FA  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  2878  0010FC  22DA               	addwfc	fsr2h,f,c
  2879  0010FE  0E00               	movlw	0
  2880  001100  6EDF               	movwf	indf2,c
  2881                           
  2882                           ; BSR set to: 0
  2883  001102  0012               	return	
  2884  001104                     __end_of_init_i2c:
  2885                           	opt stack 0
  2886                           tblptru	equ	0xFF8
  2887                           prodh	equ	0xFF4
  2888                           prodl	equ	0xFF3
  2889                           postinc0	equ	0xFEE
  2890                           wreg	equ	0xFE8
  2891                           indf1	equ	0xFE7
  2892                           fsr1h	equ	0xFE2
  2893                           fsr1l	equ	0xFE1
  2894                           indf2	equ	0xFDF
  2895                           postinc2	equ	0xFDE
  2896                           postdec2	equ	0xFDD
  2897                           fsr2h	equ	0xFDA
  2898                           fsr2l	equ	0xFD9
  2899                           status	equ	0xFD8
  2900                           
  2901 ;; *************** function _i2c_configure_slave *****************
  2902 ;; Defined at:
  2903 ;;		line 293 in file "../src/my_i2c.c"
  2904 ;; Parameters:    Size  Location     Type
  2905 ;;  addr            1    wreg     unsigned char 
  2906 ;; Auto vars:     Size  Location     Type
  2907 ;;  addr            1    0[BANK1 ] unsigned char 
  2908 ;; Return value:  Size  Location     Type
  2909 ;;		None               void
  2910 ;; Registers used:
  2911 ;;		wreg, status,2, status,0
  2912 ;; Tracked objects:
  2913 ;;		On entry : 0/0
  2914 ;;		On exit  : 0/0
  2915 ;;		Unchanged: 0/0
  2916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2918 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2920 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2921 ;;Total ram usage:        1 bytes
  2922 ;; Hardware stack levels used:    1
  2923 ;; Hardware stack levels required when called:   10
  2924 ;; This function calls:
  2925 ;;		Nothing
  2926 ;; This function is called by:
  2927 ;;		_main
  2928 ;; This function uses a non-reentrant model
  2929 ;;
  2930                           
  2931                           	psect	text15
  2932  0016CE                     __ptext15:
  2933                           	opt stack 0
  2934  0016CE                     _i2c_configure_slave:
  2935                           	opt stack 20
  2936                           
  2937                           ; BSR set to: 0
  2938                           ;incstack = 0
  2939                           ;i2c_configure_slave@addr stored from wreg
  2940  0016CE  0101               	movlb	1	; () banked
  2941  0016D0  6FA2               	movwf	i2c_configure_slave@addr& (0+255),b
  2942                           
  2943                           ; BSR set to: 1
  2944                           ;my_i2c.c: 302: TRISBbits.TRISB4 = 1;
  2945  0016D2  8893               	bsf	3987,4,c	;volatile
  2946                           
  2947                           ;my_i2c.c: 303: TRISBbits.TRISB5 = 1;
  2948  0016D4  8A93               	bsf	3987,5,c	;volatile
  2949                           
  2950                           ; BSR set to: 1
  2951                           ;my_i2c.c: 311: SSPADD = addr;
  2952  0016D6  C1A2  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  2953                           
  2954                           ; BSR set to: 1
  2955                           ;my_i2c.c: 313: SSPSTAT = 0x0;
  2956  0016DA  0E00               	movlw	0
  2957  0016DC  6EC7               	movwf	4039,c	;volatile
  2958                           
  2959                           ; BSR set to: 1
  2960                           ;my_i2c.c: 314: SSPCON1 = 0x0;
  2961  0016DE  0E00               	movlw	0
  2962  0016E0  6EC6               	movwf	4038,c	;volatile
  2963                           
  2964                           ; BSR set to: 1
  2965                           ;my_i2c.c: 315: SSPCON2 = 0x0;
  2966  0016E2  0E00               	movlw	0
  2967  0016E4  6EC5               	movwf	4037,c	;volatile
  2968                           
  2969                           ; BSR set to: 1
  2970                           ;my_i2c.c: 316: SSPCON1 |= 0x0E;
  2971  0016E6  0E0E               	movlw	14
  2972  0016E8  12C6               	iorwf	4038,f,c	;volatile
  2973                           
  2974                           ; BSR set to: 1
  2975                           ;my_i2c.c: 317: SSPSTAT |= 0b10000000;
  2976  0016EA  8EC7               	bsf	4039,7,c	;volatile
  2977                           
  2978                           ; BSR set to: 1
  2979                           ;my_i2c.c: 332: PORTBbits.SCL1 = 1;
  2980  0016EC  8881               	bsf	3969,4,c	;volatile
  2981                           
  2982                           ; BSR set to: 1
  2983                           ;my_i2c.c: 333: PORTBbits.SDA1 = 1;
  2984  0016EE  8A81               	bsf	3969,5,c	;volatile
  2985                           
  2986                           ; BSR set to: 1
  2987                           ;my_i2c.c: 342: SSPCON2bits.SEN = 1;
  2988  0016F0  80C5               	bsf	4037,0,c	;volatile
  2989                           
  2990                           ; BSR set to: 1
  2991                           ;my_i2c.c: 343: SSPCON1 |= 0b00100000;
  2992  0016F2  8AC6               	bsf	4038,5,c	;volatile
  2993                           
  2994                           ; BSR set to: 1
  2995  0016F4  0012               	return	
  2996  0016F6                     __end_of_i2c_configure_slave:
  2997                           	opt stack 0
  2998                           tblptru	equ	0xFF8
  2999                           prodh	equ	0xFF4
  3000                           prodl	equ	0xFF3
  3001                           postinc0	equ	0xFEE
  3002                           wreg	equ	0xFE8
  3003                           indf1	equ	0xFE7
  3004                           fsr1h	equ	0xFE2
  3005                           fsr1l	equ	0xFE1
  3006                           indf2	equ	0xFDF
  3007                           postinc2	equ	0xFDE
  3008                           postdec2	equ	0xFDD
  3009                           fsr2h	equ	0xFDA
  3010                           fsr2l	equ	0xFD9
  3011                           status	equ	0xFD8
  3012                           
  3013 ;; *************** function _enable_interrupts *****************
  3014 ;; Defined at:
  3015 ;;		line 14 in file "../src/interrupts.c"
  3016 ;; Parameters:    Size  Location     Type
  3017 ;;		None
  3018 ;; Auto vars:     Size  Location     Type
  3019 ;;		None
  3020 ;; Return value:  Size  Location     Type
  3021 ;;		None               void
  3022 ;; Registers used:
  3023 ;;		None
  3024 ;; Tracked objects:
  3025 ;;		On entry : 0/0
  3026 ;;		On exit  : 0/0
  3027 ;;		Unchanged: 0/0
  3028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3033 ;;Total ram usage:        0 bytes
  3034 ;; Hardware stack levels used:    1
  3035 ;; Hardware stack levels required when called:   10
  3036 ;; This function calls:
  3037 ;;		Nothing
  3038 ;; This function is called by:
  3039 ;;		_main
  3040 ;; This function uses a non-reentrant model
  3041 ;;
  3042                           
  3043                           	psect	text16
  3044  0017C0                     __ptext16:
  3045                           	opt stack 0
  3046  0017C0                     _enable_interrupts:
  3047                           	opt stack 20
  3048                           
  3049                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  3050                           
  3051                           ; BSR set to: 1
  3052                           ;incstack = 0
  3053  0017C0  8ED0               	bsf	4048,7,c	;volatile
  3054                           
  3055                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  3056  0017C2  8EF2               	bsf	intcon,7,c	;volatile
  3057                           
  3058                           ;interrupts.c: 20: INTCONbits.GIEL = 1;
  3059  0017C4  8CF2               	bsf	intcon,6,c	;volatile
  3060  0017C6  0012               	return	
  3061  0017C8                     __end_of_enable_interrupts:
  3062                           	opt stack 0
  3063                           tblptru	equ	0xFF8
  3064                           prodh	equ	0xFF4
  3065                           prodl	equ	0xFF3
  3066                           intcon	equ	0xFF2
  3067                           postinc0	equ	0xFEE
  3068                           wreg	equ	0xFE8
  3069                           indf1	equ	0xFE7
  3070                           fsr1h	equ	0xFE2
  3071                           fsr1l	equ	0xFE1
  3072                           indf2	equ	0xFDF
  3073                           postinc2	equ	0xFDE
  3074                           postdec2	equ	0xFDD
  3075                           fsr2h	equ	0xFDA
  3076                           fsr2l	equ	0xFD9
  3077                           status	equ	0xFD8
  3078                           
  3079 ;; *************** function _ToMainLow_recvmsg *****************
  3080 ;; Defined at:
  3081 ;;		line 112 in file "../src/messages.c"
  3082 ;; Parameters:    Size  Location     Type
  3083 ;;  maxlength       1    wreg     unsigned char 
  3084 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  3085 ;;		 -> main@msgtype(1), 
  3086 ;;  data            2   26[BANK1 ] PTR void 
  3087 ;;		 -> main@msgbuffer(11), 
  3088 ;; Auto vars:     Size  Location     Type
  3089 ;;  maxlength       1   28[BANK1 ] unsigned char 
  3090 ;; Return value:  Size  Location     Type
  3091 ;;                  1    wreg      char 
  3092 ;; Registers used:
  3093 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3094 ;; Tracked objects:
  3095 ;;		On entry : 0/0
  3096 ;;		On exit  : 0/0
  3097 ;;		Unchanged: 0/0
  3098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3099 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3100 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3102 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3103 ;;Total ram usage:        5 bytes
  3104 ;; Hardware stack levels used:    1
  3105 ;; Hardware stack levels required when called:   12
  3106 ;; This function calls:
  3107 ;;		_recv_msg
  3108 ;; This function is called by:
  3109 ;;		_main
  3110 ;; This function uses a non-reentrant model
  3111 ;;
  3112                           
  3113                           	psect	text17
  3114  0014AE                     __ptext17:
  3115                           	opt stack 0
  3116  0014AE                     _ToMainLow_recvmsg:
  3117                           	opt stack 18
  3118                           
  3119                           ;incstack = 0
  3120                           ;ToMainLow_recvmsg@maxlength stored from wreg
  3121  0014AE  0101               	movlb	1	; () banked
  3122  0014B0  6FBE               	movwf	ToMainLow_recvmsg@maxlength& (0+255),b
  3123                           
  3124                           ; BSR set to: 1
  3125                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  3126  0014B2  0100               	movlb	0	; () banked
  3127  0014B4  0E00               	movlw	high _ToMainLow_MQ
  3128  0014B6  0101               	movlb	1	; () banked
  3129  0014B8  6FAD               	movwf	(recv_msg@qptr+1)& (0+255),b
  3130  0014BA  0100               	movlb	0	; () banked
  3131  0014BC  0E60               	movlw	low _ToMainLow_MQ
  3132  0014BE  0101               	movlb	1	; () banked
  3133  0014C0  6FAC               	movwf	recv_msg@qptr& (0+255),b
  3134  0014C2  C1BE  F1AE         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  3135  0014C6  0101               	movlb	1	; () banked
  3136  0014C8  C1BB  F1B0         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  3137  0014CC  0101               	movlb	1	; () banked
  3138  0014CE  C1BA  F1AF         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  3139  0014D2  0101               	movlb	1	; () banked
  3140  0014D4  C1BD  F1B2         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  3141  0014D8  0101               	movlb	1	; () banked
  3142  0014DA  C1BC  F1B1         	movff	ToMainLow_recvmsg@data,recv_msg@data
  3143  0014DE  EC57  F004         	call	_recv_msg	;wreg free
  3144  0014E2  0012               	return	
  3145  0014E4                     __end_of_ToMainLow_recvmsg:
  3146                           	opt stack 0
  3147                           tblptru	equ	0xFF8
  3148                           prodh	equ	0xFF4
  3149                           prodl	equ	0xFF3
  3150                           intcon	equ	0xFF2
  3151                           postinc0	equ	0xFEE
  3152                           wreg	equ	0xFE8
  3153                           indf1	equ	0xFE7
  3154                           fsr1h	equ	0xFE2
  3155                           fsr1l	equ	0xFE1
  3156                           indf2	equ	0xFDF
  3157                           postinc2	equ	0xFDE
  3158                           postdec2	equ	0xFDD
  3159                           fsr2h	equ	0xFDA
  3160                           fsr2l	equ	0xFD9
  3161                           status	equ	0xFD8
  3162                           
  3163 ;; *************** function _ToMainHigh_recvmsg *****************
  3164 ;; Defined at:
  3165 ;;		line 135 in file "../src/messages.c"
  3166 ;; Parameters:    Size  Location     Type
  3167 ;;  maxlength       1    wreg     unsigned char 
  3168 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  3169 ;;		 -> main@msgtype(1), 
  3170 ;;  data            2   26[BANK1 ] PTR void 
  3171 ;;		 -> main@msgbuffer(11), 
  3172 ;; Auto vars:     Size  Location     Type
  3173 ;;  maxlength       1   28[BANK1 ] unsigned char 
  3174 ;; Return value:  Size  Location     Type
  3175 ;;                  1    wreg      char 
  3176 ;; Registers used:
  3177 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3178 ;; Tracked objects:
  3179 ;;		On entry : 0/0
  3180 ;;		On exit  : 0/0
  3181 ;;		Unchanged: 0/0
  3182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3183 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3184 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3186 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3187 ;;Total ram usage:        5 bytes
  3188 ;; Hardware stack levels used:    1
  3189 ;; Hardware stack levels required when called:   12
  3190 ;; This function calls:
  3191 ;;		_recv_msg
  3192 ;; This function is called by:
  3193 ;;		_main
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196                           
  3197                           	psect	text18
  3198  0014E4                     __ptext18:
  3199                           	opt stack 0
  3200  0014E4                     _ToMainHigh_recvmsg:
  3201                           	opt stack 18
  3202                           
  3203                           ;incstack = 0
  3204                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  3205  0014E4  0101               	movlb	1	; () banked
  3206  0014E6  6FBE               	movwf	ToMainHigh_recvmsg@maxlength& (0+255),b
  3207                           
  3208                           ; BSR set to: 1
  3209                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  3210  0014E8  0101               	movlb	1	; () banked
  3211  0014EA  0E01               	movlw	high _ToMainHigh_MQ
  3212  0014EC  0101               	movlb	1	; () banked
  3213  0014EE  6FAD               	movwf	(recv_msg@qptr+1)& (0+255),b
  3214  0014F0  0101               	movlb	1	; () banked
  3215  0014F2  0E6C               	movlw	low _ToMainHigh_MQ
  3216  0014F4  0101               	movlb	1	; () banked
  3217  0014F6  6FAC               	movwf	recv_msg@qptr& (0+255),b
  3218  0014F8  C1BE  F1AE         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  3219  0014FC  0101               	movlb	1	; () banked
  3220  0014FE  C1BB  F1B0         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  3221  001502  0101               	movlb	1	; () banked
  3222  001504  C1BA  F1AF         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  3223  001508  0101               	movlb	1	; () banked
  3224  00150A  C1BD  F1B2         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  3225  00150E  0101               	movlb	1	; () banked
  3226  001510  C1BC  F1B1         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  3227  001514  EC57  F004         	call	_recv_msg	;wreg free
  3228  001518  0012               	return	
  3229  00151A                     __end_of_ToMainHigh_recvmsg:
  3230                           	opt stack 0
  3231                           tblptru	equ	0xFF8
  3232                           prodh	equ	0xFF4
  3233                           prodl	equ	0xFF3
  3234                           intcon	equ	0xFF2
  3235                           postinc0	equ	0xFEE
  3236                           wreg	equ	0xFE8
  3237                           indf1	equ	0xFE7
  3238                           fsr1h	equ	0xFE2
  3239                           fsr1l	equ	0xFE1
  3240                           indf2	equ	0xFDF
  3241                           postinc2	equ	0xFDE
  3242                           postdec2	equ	0xFDD
  3243                           fsr2h	equ	0xFDA
  3244                           fsr2l	equ	0xFD9
  3245                           status	equ	0xFD8
  3246                           
  3247 ;; *************** function _recv_msg *****************
  3248 ;; Defined at:
  3249 ;;		line 63 in file "../src/messages.c"
  3250 ;; Parameters:    Size  Location     Type
  3251 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  3252 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3253 ;;  maxlength       1   12[BANK1 ] unsigned char 
  3254 ;;  msgtype         2   13[BANK1 ] PTR unsigned char 
  3255 ;;		 -> timer0_int_handler@msgtype(2), main@msgtype(1), 
  3256 ;;  data            2   15[BANK1 ] PTR void 
  3257 ;;		 -> timer0_int_handler@val(2), main@msgbuffer(11), 
  3258 ;; Auto vars:     Size  Location     Type
  3259 ;;  qmsg            2   22[BANK1 ] PTR struct __msg
  3260 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3261 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3262 ;;  tlength         2   20[BANK1 ] unsigned int 
  3263 ;;  slot            1   19[BANK1 ] unsigned char 
  3264 ;; Return value:  Size  Location     Type
  3265 ;;                  1    wreg      char 
  3266 ;; Registers used:
  3267 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3268 ;; Tracked objects:
  3269 ;;		On entry : 0/0
  3270 ;;		On exit  : 0/0
  3271 ;;		Unchanged: 0/0
  3272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3273 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3274 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3275 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3276 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3277 ;;Total ram usage:       14 bytes
  3278 ;; Hardware stack levels used:    1
  3279 ;; Hardware stack levels required when called:   11
  3280 ;; This function calls:
  3281 ;;		_memcpy
  3282 ;; This function is called by:
  3283 ;;		_ToMainLow_recvmsg
  3284 ;;		_ToMainHigh_recvmsg
  3285 ;;		_FromMainLow_recvmsg
  3286 ;; This function uses a non-reentrant model
  3287 ;;
  3288                           
  3289                           	psect	text19
  3290  0008AE                     __ptext19:
  3291                           	opt stack 0
  3292  0008AE                     _recv_msg:
  3293                           	opt stack 18
  3294                           
  3295                           ;messages.c: 64: unsigned char slot;
  3296                           ;messages.c: 68: msg *qmsg;
  3297                           ;messages.c: 69: size_t tlength;
  3298                           ;messages.c: 72: slot = qptr->cur_read_ind;
  3299                           
  3300                           ;incstack = 0
  3301  0008AE  0101               	movlb	1	; () banked
  3302  0008B0  EE20 F035          	lfsr	2,53
  3303  0008B4  0101               	movlb	1	; () banked
  3304  0008B6  51AC               	movf	recv_msg@qptr& (0+255),w,b
  3305  0008B8  26D9               	addwf	fsr2l,f,c
  3306  0008BA  0101               	movlb	1	; () banked
  3307  0008BC  51AD               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3308  0008BE  22DA               	addwfc	fsr2h,f,c
  3309  0008C0  50DF               	movf	indf2,w,c
  3310  0008C2  0101               	movlb	1	; () banked
  3311  0008C4  6FB5               	movwf	recv_msg@slot& (0+255),b
  3312                           
  3313                           ; BSR set to: 1
  3314                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  3315  0008C6  0101               	movlb	1	; () banked
  3316  0008C8  51B5               	movf	recv_msg@slot& (0+255),w,b
  3317  0008CA  0D0D               	mullw	13
  3318  0008CC  50F3               	movf	prodl,w,c
  3319  0008CE  0101               	movlb	1	; () banked
  3320  0008D0  25AC               	addwf	recv_msg@qptr& (0+255),w,b
  3321  0008D2  0101               	movlb	1	; () banked
  3322  0008D4  6FB8               	movwf	recv_msg@qmsg& (0+255),b
  3323  0008D6  50F4               	movf	prodh,w,c
  3324  0008D8  0101               	movlb	1	; () banked
  3325  0008DA  21AD               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  3326  0008DC  0101               	movlb	1	; () banked
  3327  0008DE  6FB9               	movwf	(recv_msg@qmsg+1)& (0+255),b
  3328                           
  3329                           ; BSR set to: 1
  3330                           ;messages.c: 74: if (qmsg->full == 1) {
  3331  0008E0  0E01               	movlw	1
  3332  0008E2  C1B8  FFD9         	movff	recv_msg@qmsg,fsr2l
  3333  0008E6  C1B9  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3334  0008EA  62DF               	cpfseq	indf2,c
  3335  0008EC  D06D               	goto	l2895
  3336                           
  3337                           ; BSR set to: 1
  3338                           ;messages.c: 76: if (qmsg->length > maxlength) {
  3339  0008EE  0101               	movlb	1	; () banked
  3340  0008F0  EE20 F001          	lfsr	2,1
  3341  0008F4  0101               	movlb	1	; () banked
  3342  0008F6  51B8               	movf	recv_msg@qmsg& (0+255),w,b
  3343  0008F8  26D9               	addwf	fsr2l,f,c
  3344  0008FA  0101               	movlb	1	; () banked
  3345  0008FC  51B9               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3346  0008FE  22DA               	addwfc	fsr2h,f,c
  3347  000900  50DF               	movf	indf2,w,c
  3348  000902  0101               	movlb	1	; () banked
  3349  000904  5DAE               	subwf	recv_msg@maxlength& (0+255),w,b
  3350  000906  B0D8               	btfsc	status,0,c
  3351  000908  D002               	goto	l2879
  3352                           
  3353                           ; BSR set to: 1
  3354                           ;messages.c: 77: return (-3);
  3355  00090A  0EFD               	movlw	253
  3356  00090C  0012               	return	
  3357  00090E                     l2879:
  3358                           
  3359                           ; BSR set to: 1
  3360                           ;messages.c: 78: }
  3361                           ;messages.c: 80: tlength = qmsg->length;
  3362  00090E  0101               	movlb	1	; () banked
  3363  000910  EE20 F001          	lfsr	2,1
  3364  000914  0101               	movlb	1	; () banked
  3365  000916  51B8               	movf	recv_msg@qmsg& (0+255),w,b
  3366  000918  26D9               	addwf	fsr2l,f,c
  3367  00091A  0101               	movlb	1	; () banked
  3368  00091C  51B9               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3369  00091E  22DA               	addwfc	fsr2h,f,c
  3370  000920  50DF               	movf	indf2,w,c
  3371  000922  0101               	movlb	1	; () banked
  3372  000924  6FB3               	movwf	??_recv_msg& (0+255),b
  3373  000926  0101               	movlb	1	; () banked
  3374  000928  51B3               	movf	??_recv_msg& (0+255),w,b
  3375  00092A  0101               	movlb	1	; () banked
  3376  00092C  6FB6               	movwf	recv_msg@tlength& (0+255),b
  3377  00092E  0101               	movlb	1	; () banked
  3378  000930  6BB7               	clrf	(recv_msg@tlength+1)& (0+255),b
  3379                           
  3380                           ; BSR set to: 1
  3381                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  3382  000932  0101               	movlb	1	; () banked
  3383  000934  C1B2  F1A3         	movff	recv_msg@data+1,memcpy@d1+1
  3384  000938  0101               	movlb	1	; () banked
  3385  00093A  C1B1  F1A2         	movff	recv_msg@data,memcpy@d1
  3386  00093E  0E03               	movlw	3
  3387  000940  0101               	movlb	1	; () banked
  3388  000942  25B8               	addwf	recv_msg@qmsg& (0+255),w,b
  3389  000944  0101               	movlb	1	; () banked
  3390  000946  6FB3               	movwf	??_recv_msg& (0+255),b
  3391  000948  0E00               	movlw	0
  3392  00094A  0101               	movlb	1	; () banked
  3393  00094C  21B9               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  3394  00094E  0101               	movlb	1	; () banked
  3395  000950  6FB4               	movwf	(??_recv_msg+1)& (0+255),b
  3396  000952  C1B3  F1A4         	movff	??_recv_msg,memcpy@s1
  3397  000956  C1B4  F1A5         	movff	??_recv_msg+1,memcpy@s1+1
  3398  00095A  C1B6  F1A6         	movff	recv_msg@tlength,memcpy@n
  3399  00095E  C1B7  F1A7         	movff	recv_msg@tlength+1,memcpy@n+1
  3400  000962  EC6D  F009         	call	_memcpy	;wreg free
  3401                           
  3402                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  3403  000966  0101               	movlb	1	; () banked
  3404  000968  EE20 F035          	lfsr	2,53
  3405  00096C  0101               	movlb	1	; () banked
  3406  00096E  51AC               	movf	recv_msg@qptr& (0+255),w,b
  3407  000970  26D9               	addwf	fsr2l,f,c
  3408  000972  0101               	movlb	1	; () banked
  3409  000974  51AD               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3410  000976  22DA               	addwfc	fsr2h,f,c
  3411  000978  0101               	movlb	1	; () banked
  3412  00097A  EE10 F035          	lfsr	1,53
  3413  00097E  0101               	movlb	1	; () banked
  3414  000980  51AC               	movf	recv_msg@qptr& (0+255),w,b
  3415  000982  26E1               	addwf	fsr1l,f,c
  3416  000984  0101               	movlb	1	; () banked
  3417  000986  51AD               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3418  000988  22E2               	addwfc	fsr1h,f,c
  3419  00098A  50E7               	movf	indf1,w,c
  3420  00098C  0101               	movlb	1	; () banked
  3421  00098E  6FB3               	movwf	??_recv_msg& (0+255),b
  3422  000990  0101               	movlb	1	; () banked
  3423  000992  29B3               	incf	??_recv_msg& (0+255),w,b
  3424  000994  0B03               	andlw	3
  3425  000996  6EDF               	movwf	indf2,c
  3426                           
  3427                           ; BSR set to: 1
  3428                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  3429  000998  0101               	movlb	1	; () banked
  3430  00099A  EE20 F002          	lfsr	2,2
  3431  00099E  0101               	movlb	1	; () banked
  3432  0009A0  51B8               	movf	recv_msg@qmsg& (0+255),w,b
  3433  0009A2  26D9               	addwf	fsr2l,f,c
  3434  0009A4  0101               	movlb	1	; () banked
  3435  0009A6  51B9               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3436  0009A8  22DA               	addwfc	fsr2h,f,c
  3437  0009AA  C1AF  FFE1         	movff	recv_msg@msgtype,fsr1l
  3438  0009AE  C1B0  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  3439  0009B2  CFDF FFE7          	movff	indf2,indf1
  3440                           
  3441                           ; BSR set to: 1
  3442                           ;messages.c: 91: qmsg->full = 0;
  3443  0009B6  C1B8  FFD9         	movff	recv_msg@qmsg,fsr2l
  3444  0009BA  C1B9  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3445  0009BE  0E00               	movlw	0
  3446  0009C0  6EDF               	movwf	indf2,c
  3447                           
  3448                           ; BSR set to: 1
  3449                           ;messages.c: 92: return (tlength);
  3450  0009C2  0101               	movlb	1	; () banked
  3451  0009C4  51B6               	movf	recv_msg@tlength& (0+255),w,b
  3452  0009C6  0012               	return	
  3453  0009C8                     l2895:
  3454                           
  3455                           ; BSR set to: 1
  3456                           ;messages.c: 94: return (-4);
  3457  0009C8  0EFC               	movlw	252
  3458  0009CA  0012               	return	
  3459  0009CC                     __end_of_recv_msg:
  3460                           	opt stack 0
  3461                           tblptru	equ	0xFF8
  3462                           prodh	equ	0xFF4
  3463                           prodl	equ	0xFF3
  3464                           intcon	equ	0xFF2
  3465                           postinc0	equ	0xFEE
  3466                           wreg	equ	0xFE8
  3467                           indf1	equ	0xFE7
  3468                           fsr1h	equ	0xFE2
  3469                           fsr1l	equ	0xFE1
  3470                           indf2	equ	0xFDF
  3471                           postinc2	equ	0xFDE
  3472                           postdec2	equ	0xFDD
  3473                           fsr2h	equ	0xFDA
  3474                           fsr2l	equ	0xFD9
  3475                           status	equ	0xFD8
  3476                           
  3477 ;; *************** function _memcpy *****************
  3478 ;; Defined at:
  3479 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  3480 ;; Parameters:    Size  Location     Type
  3481 ;;  d1              2    0[BANK1 ] PTR void 
  3482 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3483 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  3484 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  3485 ;;  s1              2    2[BANK1 ] PTR const void 
  3486 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  3487 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  3488 ;;		 -> NULL(0), timer0_int_handler@val(2), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  3489 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), 
  3490 ;;		 -> main@ic(28), 
  3491 ;;  n               2    4[BANK1 ] unsigned int 
  3492 ;; Auto vars:     Size  Location     Type
  3493 ;;  s               2    8[BANK1 ] PTR const unsigned char 
  3494 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  3495 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  3496 ;;		 -> NULL(0), timer0_int_handler@val(2), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  3497 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), 
  3498 ;;		 -> main@ic(28), 
  3499 ;;  d               2    6[BANK1 ] PTR unsigned char 
  3500 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3501 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  3502 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  3503 ;; Return value:  Size  Location     Type
  3504 ;;                  2    0[BANK1 ] PTR void 
  3505 ;; Registers used:
  3506 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3507 ;; Tracked objects:
  3508 ;;		On entry : 0/0
  3509 ;;		On exit  : 0/0
  3510 ;;		Unchanged: 0/0
  3511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3512 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3513 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3515 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3516 ;;Total ram usage:       10 bytes
  3517 ;; Hardware stack levels used:    1
  3518 ;; Hardware stack levels required when called:   10
  3519 ;; This function calls:
  3520 ;;		Nothing
  3521 ;; This function is called by:
  3522 ;;		_send_msg
  3523 ;;		_recv_msg
  3524 ;; This function uses a non-reentrant model
  3525 ;;
  3526                           
  3527                           	psect	text20
  3528  0012DA                     __ptext20:
  3529                           	opt stack 0
  3530  0012DA                     _memcpy:
  3531                           	opt stack 17
  3532                           
  3533                           ; BSR set to: 1
  3534                           ;incstack = 0
  3535  0012DA  0101               	movlb	1	; () banked
  3536  0012DC  C1A5  F1AB         	movff	memcpy@s1+1,memcpy@s+1
  3537  0012E0  0101               	movlb	1	; () banked
  3538  0012E2  C1A4  F1AA         	movff	memcpy@s1,memcpy@s
  3539  0012E6  0101               	movlb	1	; () banked
  3540  0012E8  C1A3  F1A9         	movff	memcpy@d1+1,memcpy@d+1
  3541  0012EC  0101               	movlb	1	; () banked
  3542  0012EE  C1A2  F1A8         	movff	memcpy@d1,memcpy@d
  3543  0012F2  D010               	goto	l2737
  3544  0012F4                     l2731:
  3545                           
  3546                           ; BSR set to: 1
  3547  0012F4  C1AA  FFD9         	movff	memcpy@s,fsr2l
  3548  0012F8  C1AB  FFDA         	movff	memcpy@s+1,fsr2h
  3549  0012FC  C1A8  FFE1         	movff	memcpy@d,fsr1l
  3550  001300  C1A9  FFE2         	movff	memcpy@d+1,fsr1h
  3551  001304  CFDF FFE7          	movff	indf2,indf1
  3552                           
  3553                           ; BSR set to: 1
  3554  001308  0101               	movlb	1	; () banked
  3555  00130A  4BAA               	infsnz	memcpy@s& (0+255),f,b
  3556  00130C  2BAB               	incf	(memcpy@s+1)& (0+255),f,b
  3557                           
  3558                           ; BSR set to: 1
  3559  00130E  0101               	movlb	1	; () banked
  3560  001310  4BA8               	infsnz	memcpy@d& (0+255),f,b
  3561  001312  2BA9               	incf	(memcpy@d+1)& (0+255),f,b
  3562  001314                     l2737:
  3563                           
  3564                           ; BSR set to: 1
  3565  001314  0101               	movlb	1	; () banked
  3566  001316  07A6               	decf	memcpy@n& (0+255),f,b
  3567  001318  A0D8               	btfss	status,0,c
  3568  00131A  07A7               	decf	(memcpy@n+1)& (0+255),f,b
  3569  00131C  0101               	movlb	1	; () banked
  3570  00131E  29A6               	incf	memcpy@n& (0+255),w,b
  3571  001320  B4D8               	btfsc	status,2,c
  3572  001322  29A7               	incf	(memcpy@n+1)& (0+255),w,b
  3573  001324  B4D8               	btfsc	status,2,c
  3574                           
  3575                           ; BSR set to: 1
  3576                           
  3577                           ; BSR set to: 1
  3578                           ;	Return value of _memcpy is never used
  3579  001326  0012               	return	
  3580  001328  D7E5               	goto	l2731
  3581  00132A                     __end_of_memcpy:
  3582                           	opt stack 0
  3583                           tblptru	equ	0xFF8
  3584                           prodh	equ	0xFF4
  3585                           prodl	equ	0xFF3
  3586                           intcon	equ	0xFF2
  3587                           postinc0	equ	0xFEE
  3588                           wreg	equ	0xFE8
  3589                           indf1	equ	0xFE7
  3590                           fsr1h	equ	0xFE2
  3591                           fsr1l	equ	0xFE1
  3592                           indf2	equ	0xFDF
  3593                           postinc2	equ	0xFDE
  3594                           postdec2	equ	0xFDD
  3595                           fsr2h	equ	0xFDA
  3596                           fsr2l	equ	0xFD9
  3597                           status	equ	0xFD8
  3598                           
  3599 ;; *************** function _OpenTimer1 *****************
  3600 ;; Defined at:
  3601 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1open.c"
  3602 ;; Parameters:    Size  Location     Type
  3603 ;;  config          1    wreg     unsigned char 
  3604 ;;  config1         1    0[BANK1 ] unsigned char 
  3605 ;; Auto vars:     Size  Location     Type
  3606 ;;  config          1    2[BANK1 ] unsigned char 
  3607 ;; Return value:  Size  Location     Type
  3608 ;;		None               void
  3609 ;; Registers used:
  3610 ;;		wreg, status,2, status,0
  3611 ;; Tracked objects:
  3612 ;;		On entry : 0/0
  3613 ;;		On exit  : 0/0
  3614 ;;		Unchanged: 0/0
  3615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3616 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3617 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3618 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3619 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3620 ;;Total ram usage:        3 bytes
  3621 ;; Hardware stack levels used:    1
  3622 ;; Hardware stack levels required when called:   10
  3623 ;; This function calls:
  3624 ;;		Nothing
  3625 ;; This function is called by:
  3626 ;;		_main
  3627 ;; This function uses a non-reentrant model
  3628 ;;
  3629                           
  3630                           	psect	text21
  3631  001438                     __ptext21:
  3632                           	opt stack 0
  3633  001438                     _OpenTimer1:
  3634                           	opt stack 20
  3635                           
  3636                           ; BSR set to: 1
  3637                           ;incstack = 0
  3638                           ;OpenTimer1@config stored from wreg
  3639  001438  0101               	movlb	1	; () banked
  3640  00143A  6FA4               	movwf	OpenTimer1@config& (0+255),b
  3641                           
  3642                           ; BSR set to: 1
  3643  00143C  0101               	movlb	1	; () banked
  3644  00143E  51A2               	movf	OpenTimer1@config1& (0+255),w,b
  3645  001440  0BF3               	andlw	243
  3646  001442  6E9A               	movwf	3994,c	;volatile
  3647  001444  C1A4  F1A3         	movff	OpenTimer1@config,??_OpenTimer1
  3648  001448  0E7F               	movlw	127
  3649  00144A  0101               	movlb	1	; () banked
  3650  00144C  17A3               	andwf	??_OpenTimer1& (0+255),f,b
  3651  00144E  0101               	movlb	1	; () banked
  3652  001450  90D8               	bcf	status,0,c
  3653  001452  35A3               	rlcf	??_OpenTimer1& (0+255),w,b
  3654  001454  6ECD               	movwf	4045,c	;volatile
  3655                           
  3656                           ; BSR set to: 1
  3657  001456  0E00               	movlw	0
  3658  001458  6ECF               	movwf	4047,c	;volatile
  3659                           
  3660                           ; BSR set to: 1
  3661  00145A  0E00               	movlw	0
  3662  00145C  6ECE               	movwf	4046,c	;volatile
  3663                           
  3664                           ; BSR set to: 1
  3665  00145E  909E               	bcf	3998,0,c	;volatile
  3666                           
  3667                           ; BSR set to: 1
  3668  001460  0101               	movlb	1	; () banked
  3669  001462  AFA4               	btfss	OpenTimer1@config& (0+255),7,b
  3670  001464  D002               	goto	l473
  3671                           
  3672                           ; BSR set to: 1
  3673  001466  809D               	bsf	3997,0,c	;volatile
  3674  001468  D001               	goto	l474
  3675  00146A                     l473:
  3676                           
  3677                           ; BSR set to: 1
  3678  00146A  909D               	bcf	3997,0,c	;volatile
  3679  00146C                     l474:
  3680                           
  3681                           ; BSR set to: 1
  3682  00146C  BE9A               	btfsc	3994,7,c	;volatile
  3683                           
  3684                           ; BSR set to: 1
  3685  00146E  869A               	bsf	3994,3,c	;volatile
  3686                           
  3687                           ; BSR set to: 1
  3688  001470  80CD               	bsf	4045,0,c	;volatile
  3689                           
  3690                           ; BSR set to: 1
  3691  001472  0012               	return	
  3692  001474                     __end_of_OpenTimer1:
  3693                           	opt stack 0
  3694                           tblptru	equ	0xFF8
  3695                           prodh	equ	0xFF4
  3696                           prodl	equ	0xFF3
  3697                           intcon	equ	0xFF2
  3698                           postinc0	equ	0xFEE
  3699                           wreg	equ	0xFE8
  3700                           indf1	equ	0xFE7
  3701                           fsr1h	equ	0xFE2
  3702                           fsr1l	equ	0xFE1
  3703                           indf2	equ	0xFDF
  3704                           postinc2	equ	0xFDE
  3705                           postdec2	equ	0xFDD
  3706                           fsr2h	equ	0xFDA
  3707                           fsr2l	equ	0xFD9
  3708                           status	equ	0xFD8
  3709                           
  3710 ;; *************** function _OpenTimer0 *****************
  3711 ;; Defined at:
  3712 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0open.c"
  3713 ;; Parameters:    Size  Location     Type
  3714 ;;  config          1    wreg     unsigned char 
  3715 ;; Auto vars:     Size  Location     Type
  3716 ;;  config          1    0[BANK1 ] unsigned char 
  3717 ;; Return value:  Size  Location     Type
  3718 ;;		None               void
  3719 ;; Registers used:
  3720 ;;		wreg, status,2, status,0
  3721 ;; Tracked objects:
  3722 ;;		On entry : 0/0
  3723 ;;		On exit  : 0/0
  3724 ;;		Unchanged: 0/0
  3725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3727 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3729 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3730 ;;Total ram usage:        1 bytes
  3731 ;; Hardware stack levels used:    1
  3732 ;; Hardware stack levels required when called:   10
  3733 ;; This function calls:
  3734 ;;		Nothing
  3735 ;; This function is called by:
  3736 ;;		_main
  3737 ;; This function uses a non-reentrant model
  3738 ;;
  3739                           
  3740                           	psect	text22
  3741  0016F6                     __ptext22:
  3742                           	opt stack 0
  3743  0016F6                     _OpenTimer0:
  3744                           	opt stack 20
  3745                           
  3746                           ; BSR set to: 1
  3747                           ;incstack = 0
  3748                           ;OpenTimer0@config stored from wreg
  3749  0016F6  0101               	movlb	1	; () banked
  3750  0016F8  6FA2               	movwf	OpenTimer0@config& (0+255),b
  3751                           
  3752                           ; BSR set to: 1
  3753  0016FA  0101               	movlb	1	; () banked
  3754  0016FC  51A2               	movf	OpenTimer0@config& (0+255),w,b
  3755  0016FE  0B7F               	andlw	127
  3756  001700  6ED5               	movwf	4053,c	;volatile
  3757                           
  3758                           ; BSR set to: 1
  3759  001702  0E00               	movlw	0
  3760  001704  6ED7               	movwf	4055,c	;volatile
  3761                           
  3762                           ; BSR set to: 1
  3763  001706  0E00               	movlw	0
  3764  001708  6ED6               	movwf	4054,c	;volatile
  3765                           
  3766                           ; BSR set to: 1
  3767  00170A  94F2               	bcf	intcon,2,c	;volatile
  3768                           
  3769                           ; BSR set to: 1
  3770  00170C  0101               	movlb	1	; () banked
  3771  00170E  AFA2               	btfss	OpenTimer0@config& (0+255),7,b
  3772  001710  D002               	goto	l445
  3773                           
  3774                           ; BSR set to: 1
  3775  001712  8AF2               	bsf	intcon,5,c	;volatile
  3776  001714  D001               	goto	l446
  3777  001716                     l445:
  3778                           
  3779                           ; BSR set to: 1
  3780  001716  9AF2               	bcf	intcon,5,c	;volatile
  3781  001718                     l446:
  3782                           
  3783                           ; BSR set to: 1
  3784  001718  8ED5               	bsf	4053,7,c	;volatile
  3785                           
  3786                           ; BSR set to: 1
  3787  00171A  0012               	return	
  3788  00171C                     __end_of_OpenTimer0:
  3789                           	opt stack 0
  3790                           tblptru	equ	0xFF8
  3791                           prodh	equ	0xFF4
  3792                           prodl	equ	0xFF3
  3793                           intcon	equ	0xFF2
  3794                           postinc0	equ	0xFEE
  3795                           wreg	equ	0xFE8
  3796                           indf1	equ	0xFE7
  3797                           fsr1h	equ	0xFE2
  3798                           fsr1l	equ	0xFE1
  3799                           indf2	equ	0xFDF
  3800                           postinc2	equ	0xFDE
  3801                           postdec2	equ	0xFDD
  3802                           fsr2h	equ	0xFDA
  3803                           fsr2l	equ	0xFD9
  3804                           status	equ	0xFD8
  3805                           
  3806 ;; *************** function _InterruptHandlerLow *****************
  3807 ;; Defined at:
  3808 ;;		line 125 in file "../src/interrupts.c"
  3809 ;; Parameters:    Size  Location     Type
  3810 ;;		None
  3811 ;; Auto vars:     Size  Location     Type
  3812 ;;		None
  3813 ;; Return value:  Size  Location     Type
  3814 ;;		None               void
  3815 ;; Registers used:
  3816 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3817 ;; Tracked objects:
  3818 ;;		On entry : 0/0
  3819 ;;		On exit  : 0/0
  3820 ;;		Unchanged: 0/0
  3821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3824 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3825 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3826 ;;Total ram usage:       17 bytes
  3827 ;; Hardware stack levels used:    1
  3828 ;; Hardware stack levels required when called:    9
  3829 ;; This function calls:
  3830 ;;		_timer1_int_handler
  3831 ;;		_uart_receive_byte
  3832 ;;		_uart_send_buffer_empty
  3833 ;;		_uart_transmit_byte
  3834 ;; This function is called by:
  3835 ;;		Interrupt level 1
  3836 ;; This function uses a non-reentrant model
  3837 ;;
  3838                           
  3839                           	psect	intcodelo
  3840  000018                     __pintcodelo:
  3841                           	opt stack 0
  3842  000018                     _InterruptHandlerLow:
  3843                           	opt stack 17
  3844                           
  3845                           ; BSR set to: 1
  3846                           ;incstack = 0
  3847  000018  CFD8 F01D          	movff	status,??_InterruptHandlerLow
  3848  00001C  CFE8 F01E          	movff	wreg,??_InterruptHandlerLow+1
  3849  000020  CFE0 F01F          	movff	bsr,??_InterruptHandlerLow+2
  3850  000024  CFFA F020          	movff	pclath,??_InterruptHandlerLow+3
  3851  000028  CFFB F021          	movff	pclatu,??_InterruptHandlerLow+4
  3852  00002C  CFE9 F022          	movff	fsr0l,??_InterruptHandlerLow+5
  3853  000030  CFEA F023          	movff	fsr0h,??_InterruptHandlerLow+6
  3854  000034  CFE1 F024          	movff	fsr1l,??_InterruptHandlerLow+7
  3855  000038  CFE2 F025          	movff	fsr1h,??_InterruptHandlerLow+8
  3856  00003C  CFD9 F026          	movff	fsr2l,??_InterruptHandlerLow+9
  3857  000040  CFDA F027          	movff	fsr2h,??_InterruptHandlerLow+10
  3858  000044  CFF3 F028          	movff	prodl,??_InterruptHandlerLow+11
  3859  000048  CFF4 F029          	movff	prodh,??_InterruptHandlerLow+12
  3860  00004C  CFF6 F02A          	movff	tblptrl,??_InterruptHandlerLow+13
  3861  000050  CFF7 F02B          	movff	tblptrh,??_InterruptHandlerLow+14
  3862  000054  CFF8 F02C          	movff	tblptru,??_InterruptHandlerLow+15
  3863  000058  CFF5 F02D          	movff	tablat,??_InterruptHandlerLow+16
  3864                           
  3865                           ;interrupts.c: 128: if (PIR1bits.TMR1IF) {
  3866  00005C  A09E               	btfss	3998,0,c	;volatile
  3867  00005E  D003               	goto	i1l2587
  3868                           
  3869                           ;interrupts.c: 129: PIR1bits.TMR1IF = 0;
  3870  000060  909E               	bcf	3998,0,c	;volatile
  3871                           
  3872                           ;interrupts.c: 130: timer1_int_handler();
  3873  000062  ECA8  F00A         	call	_timer1_int_handler	;wreg free
  3874  000066                     i1l2587:
  3875                           
  3876                           ;interrupts.c: 131: }
  3877                           ;interrupts.c: 134: if (PIR1bits.RCIF) {
  3878  000066  AA9E               	btfss	3998,5,c	;volatile
  3879  000068  D003               	goto	i1l2593
  3880                           
  3881                           ;interrupts.c: 135: PIR1bits.RCIF = 0;
  3882  00006A  9A9E               	bcf	3998,5,c	;volatile
  3883                           
  3884                           ;interrupts.c: 136: uart_receive_byte();
  3885  00006C  EC3A  F00A         	call	_uart_receive_byte	;wreg free
  3886  000070                     i1l2593:
  3887                           
  3888                           ;interrupts.c: 137: }
  3889                           ;interrupts.c: 141: if (PIR1bits.TX1IF && PIE1bits.TX1IE)
  3890  000070  B89E               	btfsc	3998,4,c	;volatile
  3891  000072  A89D               	btfss	3997,4,c	;volatile
  3892  000074  D009               	goto	i1l61
  3893                           
  3894                           ;interrupts.c: 142: {
  3895                           ;interrupts.c: 145: LATDbits.LATD3 = 1;
  3896  000076  868C               	bsf	3980,3,c	;volatile
  3897                           
  3898                           ;interrupts.c: 146: LATDbits.LATD3 = 0;
  3899  000078  968C               	bcf	3980,3,c	;volatile
  3900                           
  3901                           ;interrupts.c: 149: if( !uart_send_buffer_empty() )
  3902  00007A  EC9F  F00B         	call	_uart_send_buffer_empty	;wreg free
  3903  00007E  5002               	movf	?_uart_send_buffer_empty+1,w,c
  3904  000080  1001               	iorwf	?_uart_send_buffer_empty,w,c
  3905  000082  B4D8               	btfsc	status,2,c
  3906                           
  3907                           ;interrupts.c: 150: {
  3908                           ;interrupts.c: 151: uart_transmit_byte();
  3909  000084  EC52  F00B         	call	_uart_transmit_byte	;wreg free
  3910  000088                     i1l61:
  3911  000088  C02D  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  3912  00008C  C02C  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  3913  000090  C02B  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  3914  000094  C02A  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  3915  000098  C029  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  3916  00009C  C028  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  3917  0000A0  C027  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  3918  0000A4  C026  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  3919  0000A8  C025  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  3920  0000AC  C024  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  3921  0000B0  C023  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  3922  0000B4  C022  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  3923  0000B8  C021  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  3924  0000BC  C020  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  3925  0000C0  C01F  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  3926  0000C4  C01E  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  3927  0000C8  C01D  FFD8         	movff	??_InterruptHandlerLow,status
  3928  0000CC  0010               	retfie	
  3929  0000CE                     __end_of_InterruptHandlerLow:
  3930                           	opt stack 0
  3931                           pclatu	equ	0xFFB
  3932                           pclath	equ	0xFFA
  3933                           tblptru	equ	0xFF8
  3934                           tblptrh	equ	0xFF7
  3935                           tblptrl	equ	0xFF6
  3936                           tablat	equ	0xFF5
  3937                           prodh	equ	0xFF4
  3938                           prodl	equ	0xFF3
  3939                           intcon	equ	0xFF2
  3940                           postinc0	equ	0xFEE
  3941                           fsr0h	equ	0xFEA
  3942                           fsr0l	equ	0xFE9
  3943                           wreg	equ	0xFE8
  3944                           indf1	equ	0xFE7
  3945                           fsr1h	equ	0xFE2
  3946                           fsr1l	equ	0xFE1
  3947                           bsr	equ	0xFE0
  3948                           indf2	equ	0xFDF
  3949                           postinc2	equ	0xFDE
  3950                           postdec2	equ	0xFDD
  3951                           fsr2h	equ	0xFDA
  3952                           fsr2l	equ	0xFD9
  3953                           status	equ	0xFD8
  3954                           
  3955 ;; *************** function _uart_transmit_byte *****************
  3956 ;; Defined at:
  3957 ;;		line 72 in file "../src/my_uart.c"
  3958 ;; Parameters:    Size  Location     Type
  3959 ;;		None
  3960 ;; Auto vars:     Size  Location     Type
  3961 ;;		None
  3962 ;; Return value:  Size  Location     Type
  3963 ;;		None               void
  3964 ;; Registers used:
  3965 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3966 ;; Tracked objects:
  3967 ;;		On entry : 0/0
  3968 ;;		On exit  : 0/0
  3969 ;;		Unchanged: 0/0
  3970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3975 ;;Total ram usage:        0 bytes
  3976 ;; Hardware stack levels used:    1
  3977 ;; Hardware stack levels required when called:    5
  3978 ;; This function calls:
  3979 ;;		Nothing
  3980 ;; This function is called by:
  3981 ;;		_InterruptHandlerLow
  3982 ;; This function uses a non-reentrant model
  3983 ;;
  3984                           
  3985                           	psect	text24
  3986  0016A4                     __ptext24:
  3987                           	opt stack 0
  3988  0016A4                     _uart_transmit_byte:
  3989                           	opt stack 20
  3990                           
  3991                           ;my_uart.c: 74: if( uart_send_buffer.size <= 0 )
  3992                           
  3993                           ;incstack = 0
  3994  0016A4  6635               	tstfsz	_uart_send_buffer+6,c
  3995  0016A6  D001               	goto	i1l1579
  3996  0016A8  0012               	return	
  3997  0016AA                     i1l1579:
  3998                           
  3999                           ;my_uart.c: 77: }
  4000                           ;my_uart.c: 78: TXREG1 = uart_send_buffer.buffer[uart_send_buffer.current_item];
  4001  0016AA  5033               	movf	_uart_send_buffer+4,w,c
  4002  0016AC  0D01               	mullw	1
  4003  0016AE  0E2F               	movlw	low _uart_send_buffer
  4004  0016B0  24F3               	addwf	prodl,w,c
  4005  0016B2  6ED9               	movwf	fsr2l,c
  4006  0016B4  0E00               	movlw	high _uart_send_buffer
  4007  0016B6  20F4               	addwfc	prodh,w,c
  4008  0016B8  6EDA               	movwf	fsr2h,c
  4009  0016BA  50DF               	movf	indf2,w,c
  4010  0016BC  6EAE               	movwf	4014,c	;volatile
  4011                           
  4012                           ;my_uart.c: 79: uart_send_buffer.current_item = (uart_send_buffer.current_item + 1) % 4;
  4013  0016BE  2833               	incf	_uart_send_buffer+4,w,c
  4014  0016C0  0B03               	andlw	3
  4015  0016C2  6E33               	movwf	_uart_send_buffer+4,c
  4016                           
  4017                           ;my_uart.c: 80: uart_send_buffer.size -= 1;
  4018  0016C4  0635               	decf	_uart_send_buffer+6,f,c
  4019                           
  4020                           ;my_uart.c: 82: if( uart_send_buffer.size <= 0 )
  4021  0016C6  6635               	tstfsz	_uart_send_buffer+6,c
  4022  0016C8  0012               	return	
  4023                           
  4024                           ;my_uart.c: 83: {
  4025                           ;my_uart.c: 84: PIE1bits.TX1IE = 0;
  4026  0016CA  989D               	bcf	3997,4,c	;volatile
  4027  0016CC  0012               	return	
  4028  0016CE                     __end_of_uart_transmit_byte:
  4029                           	opt stack 0
  4030                           pclatu	equ	0xFFB
  4031                           pclath	equ	0xFFA
  4032                           tblptru	equ	0xFF8
  4033                           tblptrh	equ	0xFF7
  4034                           tblptrl	equ	0xFF6
  4035                           tablat	equ	0xFF5
  4036                           prodh	equ	0xFF4
  4037                           prodl	equ	0xFF3
  4038                           intcon	equ	0xFF2
  4039                           postinc0	equ	0xFEE
  4040                           fsr0h	equ	0xFEA
  4041                           fsr0l	equ	0xFE9
  4042                           wreg	equ	0xFE8
  4043                           indf1	equ	0xFE7
  4044                           fsr1h	equ	0xFE2
  4045                           fsr1l	equ	0xFE1
  4046                           bsr	equ	0xFE0
  4047                           indf2	equ	0xFDF
  4048                           postinc2	equ	0xFDE
  4049                           postdec2	equ	0xFDD
  4050                           fsr2h	equ	0xFDA
  4051                           fsr2l	equ	0xFD9
  4052                           status	equ	0xFD8
  4053                           
  4054 ;; *************** function _uart_send_buffer_empty *****************
  4055 ;; Defined at:
  4056 ;;		line 90 in file "../src/my_uart.c"
  4057 ;; Parameters:    Size  Location     Type
  4058 ;;		None
  4059 ;; Auto vars:     Size  Location     Type
  4060 ;;		None
  4061 ;; Return value:  Size  Location     Type
  4062 ;;                  2    0[COMRAM] int 
  4063 ;; Registers used:
  4064 ;;		wreg, status,2
  4065 ;; Tracked objects:
  4066 ;;		On entry : 0/0
  4067 ;;		On exit  : 0/0
  4068 ;;		Unchanged: 0/0
  4069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4070 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4073 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4074 ;;Total ram usage:        2 bytes
  4075 ;; Hardware stack levels used:    1
  4076 ;; Hardware stack levels required when called:    5
  4077 ;; This function calls:
  4078 ;;		Nothing
  4079 ;; This function is called by:
  4080 ;;		_InterruptHandlerLow
  4081 ;; This function uses a non-reentrant model
  4082 ;;
  4083                           
  4084                           	psect	text25
  4085  00173E                     __ptext25:
  4086                           	opt stack 0
  4087  00173E                     _uart_send_buffer_empty:
  4088                           	opt stack 20
  4089                           
  4090                           ;my_uart.c: 92: if( uart_send_buffer.size <= 0 )
  4091                           
  4092                           ;incstack = 0
  4093  00173E  6635               	tstfsz	_uart_send_buffer+6,c
  4094  001740  D007               	goto	i1l1571
  4095                           
  4096                           ;my_uart.c: 93: {
  4097                           ;my_uart.c: 94: uart_send_buffer.size = 0;
  4098  001742  0E00               	movlw	0
  4099  001744  6E35               	movwf	_uart_send_buffer+6,c
  4100                           
  4101                           ;my_uart.c: 95: return 1;
  4102  001746  0E00               	movlw	0
  4103  001748  6E02               	movwf	?_uart_send_buffer_empty+1,c
  4104  00174A  0E01               	movlw	1
  4105  00174C  6E01               	movwf	?_uart_send_buffer_empty,c
  4106  00174E  0012               	return	
  4107  001750                     i1l1571:
  4108                           
  4109                           ;my_uart.c: 97: else
  4110                           ;my_uart.c: 98: {
  4111                           ;my_uart.c: 99: return 0;
  4112  001750  0E00               	movlw	0
  4113  001752  6E02               	movwf	?_uart_send_buffer_empty+1,c
  4114  001754  0E00               	movlw	0
  4115  001756  6E01               	movwf	?_uart_send_buffer_empty,c
  4116  001758  0012               	return	
  4117  00175A                     __end_of_uart_send_buffer_empty:
  4118                           	opt stack 0
  4119                           pclatu	equ	0xFFB
  4120                           pclath	equ	0xFFA
  4121                           tblptru	equ	0xFF8
  4122                           tblptrh	equ	0xFF7
  4123                           tblptrl	equ	0xFF6
  4124                           tablat	equ	0xFF5
  4125                           prodh	equ	0xFF4
  4126                           prodl	equ	0xFF3
  4127                           intcon	equ	0xFF2
  4128                           postinc0	equ	0xFEE
  4129                           fsr0h	equ	0xFEA
  4130                           fsr0l	equ	0xFE9
  4131                           wreg	equ	0xFE8
  4132                           indf1	equ	0xFE7
  4133                           fsr1h	equ	0xFE2
  4134                           fsr1l	equ	0xFE1
  4135                           bsr	equ	0xFE0
  4136                           indf2	equ	0xFDF
  4137                           postinc2	equ	0xFDE
  4138                           postdec2	equ	0xFDD
  4139                           fsr2h	equ	0xFDA
  4140                           fsr2l	equ	0xFD9
  4141                           status	equ	0xFD8
  4142                           
  4143 ;; *************** function _uart_receive_byte *****************
  4144 ;; Defined at:
  4145 ;;		line 126 in file "../src/my_uart.c"
  4146 ;; Parameters:    Size  Location     Type
  4147 ;;		None
  4148 ;; Auto vars:     Size  Location     Type
  4149 ;;		None
  4150 ;; Return value:  Size  Location     Type
  4151 ;;		None               void
  4152 ;; Registers used:
  4153 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4154 ;; Tracked objects:
  4155 ;;		On entry : 0/0
  4156 ;;		On exit  : 0/0
  4157 ;;		Unchanged: 0/0
  4158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4163 ;;Total ram usage:        0 bytes
  4164 ;; Hardware stack levels used:    1
  4165 ;; Hardware stack levels required when called:    5
  4166 ;; This function calls:
  4167 ;;		Nothing
  4168 ;; This function is called by:
  4169 ;;		_InterruptHandlerLow
  4170 ;; This function uses a non-reentrant model
  4171 ;;
  4172                           
  4173                           	psect	text26
  4174  001474                     __ptext26:
  4175                           	opt stack 0
  4176  001474                     _uart_receive_byte:
  4177                           	opt stack 20
  4178                           
  4179                           ;my_uart.c: 128: if( uart_receive_buffer.size >= 4 )
  4180                           
  4181                           ;incstack = 0
  4182  001474  0100               	movlb	0	; () banked
  4183  001476  EE20  F09C         	lfsr	2,_uart_receive_buffer+6
  4184  00147A  0E03               	movlw	3
  4185  00147C  64DF               	cpfsgt	indf2,c
  4186  00147E  D002               	goto	i1l2391
  4187                           
  4188                           ; BSR set to: 0
  4189                           ;my_uart.c: 129: {
  4190                           ;my_uart.c: 130: PIE1bits.RC1IE = 0;
  4191  001480  9A9D               	bcf	3997,5,c	;volatile
  4192                           
  4193                           ;my_uart.c: 131: return;
  4194  001482  0012               	return	
  4195  001484                     i1l2391:
  4196                           
  4197                           ; BSR set to: 0
  4198                           ;my_uart.c: 132: }
  4199                           ;my_uart.c: 133: uart_receive_buffer.buffer[uart_receive_buffer.last_item] = RCREG1;
  4200  001484  0100               	movlb	0	; () banked
  4201  001486  519B               	movf	(_uart_receive_buffer+5)& (0+255),w,b
  4202  001488  0D01               	mullw	1
  4203  00148A  0100               	movlb	0	; () banked
  4204  00148C  0E96               	movlw	low _uart_receive_buffer
  4205  00148E  24F3               	addwf	prodl,w,c
  4206  001490  6ED9               	movwf	fsr2l,c
  4207  001492  0100               	movlb	0	; () banked
  4208  001494  0E00               	movlw	high _uart_receive_buffer
  4209  001496  20F4               	addwfc	prodh,w,c
  4210  001498  6EDA               	movwf	fsr2h,c
  4211  00149A  CFAF FFDF          	movff	4015,indf2	;volatile
  4212                           
  4213                           ; BSR set to: 0
  4214                           ;my_uart.c: 134: uart_receive_buffer.last_item = (uart_receive_buffer.last_item + 1) % 4
      +                          ;
  4215  00149E  0100               	movlb	0	; () banked
  4216  0014A0  299B               	incf	(_uart_receive_buffer+5)& (0+255),w,b
  4217  0014A2  0B03               	andlw	3
  4218  0014A4  0100               	movlb	0	; () banked
  4219  0014A6  6F9B               	movwf	(_uart_receive_buffer+5)& (0+255),b
  4220                           
  4221                           ; BSR set to: 0
  4222                           ;my_uart.c: 135: uart_receive_buffer.size -= 1;
  4223  0014A8  0100               	movlb	0	; () banked
  4224  0014AA  079C               	decf	(_uart_receive_buffer+6)& (0+255),f,b
  4225                           
  4226                           ; BSR set to: 0
  4227  0014AC  0012               	return	
  4228  0014AE                     __end_of_uart_receive_byte:
  4229                           	opt stack 0
  4230                           pclatu	equ	0xFFB
  4231                           pclath	equ	0xFFA
  4232                           tblptru	equ	0xFF8
  4233                           tblptrh	equ	0xFF7
  4234                           tblptrl	equ	0xFF6
  4235                           tablat	equ	0xFF5
  4236                           prodh	equ	0xFF4
  4237                           prodl	equ	0xFF3
  4238                           intcon	equ	0xFF2
  4239                           postinc0	equ	0xFEE
  4240                           fsr0h	equ	0xFEA
  4241                           fsr0l	equ	0xFE9
  4242                           wreg	equ	0xFE8
  4243                           indf1	equ	0xFE7
  4244                           fsr1h	equ	0xFE2
  4245                           fsr1l	equ	0xFE1
  4246                           bsr	equ	0xFE0
  4247                           indf2	equ	0xFDF
  4248                           postinc2	equ	0xFDE
  4249                           postdec2	equ	0xFDD
  4250                           fsr2h	equ	0xFDA
  4251                           fsr2l	equ	0xFD9
  4252                           status	equ	0xFD8
  4253                           
  4254 ;; *************** function _timer1_int_handler *****************
  4255 ;; Defined at:
  4256 ;;		line 49 in file "../src/user_interrupts.c"
  4257 ;; Parameters:    Size  Location     Type
  4258 ;;		None
  4259 ;; Auto vars:     Size  Location     Type
  4260 ;;  result          2   26[COMRAM] unsigned int 
  4261 ;; Return value:  Size  Location     Type
  4262 ;;		None               void
  4263 ;; Registers used:
  4264 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4265 ;; Tracked objects:
  4266 ;;		On entry : 0/0
  4267 ;;		On exit  : 0/0
  4268 ;;		Unchanged: 0/0
  4269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4271 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4273 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4274 ;;Total ram usage:        2 bytes
  4275 ;; Hardware stack levels used:    1
  4276 ;; Hardware stack levels required when called:    8
  4277 ;; This function calls:
  4278 ;;		_ReadTimer1
  4279 ;;		_ToMainLow_sendmsg
  4280 ;;		_WriteTimer1
  4281 ;; This function is called by:
  4282 ;;		_InterruptHandlerLow
  4283 ;; This function uses a non-reentrant model
  4284 ;;
  4285                           
  4286                           	psect	text27
  4287  001550                     __ptext27:
  4288                           	opt stack 0
  4289  001550                     _timer1_int_handler:
  4290                           	opt stack 17
  4291                           
  4292                           ;user_interrupts.c: 54: LATD = 0x80;
  4293                           
  4294                           ; BSR set to: 0
  4295                           ;incstack = 0
  4296  001550  0E80               	movlw	128
  4297  001552  6E8C               	movwf	3980,c	;volatile
  4298                           
  4299                           ;user_interrupts.c: 58: unsigned int result;
  4300                           ;user_interrupts.c: 65: result = ReadTimer1();
  4301  001554  ECBF  F00B         	call	_ReadTimer1	;wreg free
  4302  001558  C001  F01B         	movff	?_ReadTimer1,timer1_int_handler@result
  4303  00155C  C002  F01C         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  4304                           
  4305                           ;user_interrupts.c: 66: ToMainLow_sendmsg(0, 11, (void *) 0);
  4306  001560  0E0B               	movlw	11
  4307  001562  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  4308  001564  0E00               	movlw	0
  4309  001566  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  4310  001568  0E00               	movlw	0
  4311  00156A  6E18               	movwf	ToMainLow_sendmsg@data,c
  4312  00156C  0E00               	movlw	0
  4313  00156E  EC8E  F00B         	call	_ToMainLow_sendmsg
  4314                           
  4315                           ;user_interrupts.c: 69: WriteTimer1(0);
  4316  001572  0E00               	movlw	0
  4317  001574  6E02               	movwf	WriteTimer1@timer1+1,c
  4318  001576  0E00               	movlw	0
  4319  001578  6E01               	movwf	WriteTimer1@timer1,c
  4320  00157A  ECB6  F00B         	call	_WriteTimer1	;wreg free
  4321                           
  4322                           ;user_interrupts.c: 73: LATD = 0x00;
  4323  00157E  0E00               	movlw	0
  4324  001580  6E8C               	movwf	3980,c	;volatile
  4325  001582  0012               	return	
  4326  001584                     __end_of_timer1_int_handler:
  4327                           	opt stack 0
  4328                           pclatu	equ	0xFFB
  4329                           pclath	equ	0xFFA
  4330                           tblptru	equ	0xFF8
  4331                           tblptrh	equ	0xFF7
  4332                           tblptrl	equ	0xFF6
  4333                           tablat	equ	0xFF5
  4334                           prodh	equ	0xFF4
  4335                           prodl	equ	0xFF3
  4336                           intcon	equ	0xFF2
  4337                           postinc0	equ	0xFEE
  4338                           fsr0h	equ	0xFEA
  4339                           fsr0l	equ	0xFE9
  4340                           wreg	equ	0xFE8
  4341                           indf1	equ	0xFE7
  4342                           fsr1h	equ	0xFE2
  4343                           fsr1l	equ	0xFE1
  4344                           bsr	equ	0xFE0
  4345                           indf2	equ	0xFDF
  4346                           postinc2	equ	0xFDE
  4347                           postdec2	equ	0xFDD
  4348                           fsr2h	equ	0xFDA
  4349                           fsr2l	equ	0xFD9
  4350                           status	equ	0xFD8
  4351                           
  4352 ;; *************** function _WriteTimer1 *****************
  4353 ;; Defined at:
  4354 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1write.c"
  4355 ;; Parameters:    Size  Location     Type
  4356 ;;  timer1          2    0[COMRAM] unsigned int 
  4357 ;; Auto vars:     Size  Location     Type
  4358 ;;  timer           2    2[COMRAM] struct Timers
  4359 ;; Return value:  Size  Location     Type
  4360 ;;		None               void
  4361 ;; Registers used:
  4362 ;;		None
  4363 ;; Tracked objects:
  4364 ;;		On entry : 0/0
  4365 ;;		On exit  : 0/0
  4366 ;;		Unchanged: 0/0
  4367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4368 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4369 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4371 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4372 ;;Total ram usage:        4 bytes
  4373 ;; Hardware stack levels used:    1
  4374 ;; Hardware stack levels required when called:    5
  4375 ;; This function calls:
  4376 ;;		Nothing
  4377 ;; This function is called by:
  4378 ;;		_timer1_int_handler
  4379 ;; This function uses a non-reentrant model
  4380 ;;
  4381                           
  4382                           	psect	text28
  4383  00176C                     __ptext28:
  4384                           	opt stack 0
  4385  00176C                     _WriteTimer1:
  4386                           	opt stack 19
  4387                           
  4388                           ;incstack = 0
  4389  00176C  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  4390  001770  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  4391  001774  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  4392  001778  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  4393  00177C  0012               	return	
  4394  00177E                     __end_of_WriteTimer1:
  4395                           	opt stack 0
  4396                           pclatu	equ	0xFFB
  4397                           pclath	equ	0xFFA
  4398                           tblptru	equ	0xFF8
  4399                           tblptrh	equ	0xFF7
  4400                           tblptrl	equ	0xFF6
  4401                           tablat	equ	0xFF5
  4402                           prodh	equ	0xFF4
  4403                           prodl	equ	0xFF3
  4404                           intcon	equ	0xFF2
  4405                           postinc0	equ	0xFEE
  4406                           fsr0h	equ	0xFEA
  4407                           fsr0l	equ	0xFE9
  4408                           wreg	equ	0xFE8
  4409                           indf1	equ	0xFE7
  4410                           fsr1h	equ	0xFE2
  4411                           fsr1l	equ	0xFE1
  4412                           bsr	equ	0xFE0
  4413                           indf2	equ	0xFDF
  4414                           postinc2	equ	0xFDE
  4415                           postdec2	equ	0xFDD
  4416                           fsr2h	equ	0xFDA
  4417                           fsr2l	equ	0xFD9
  4418                           status	equ	0xFD8
  4419                           
  4420 ;; *************** function _ToMainLow_sendmsg *****************
  4421 ;; Defined at:
  4422 ;;		line 103 in file "../src/messages.c"
  4423 ;; Parameters:    Size  Location     Type
  4424 ;;  length          1    wreg     unsigned char 
  4425 ;;  msgtype         1   22[COMRAM] unsigned char 
  4426 ;;  data            2   23[COMRAM] PTR void 
  4427 ;;		 -> NULL(0), 
  4428 ;; Auto vars:     Size  Location     Type
  4429 ;;  length          1   25[COMRAM] unsigned char 
  4430 ;; Return value:  Size  Location     Type
  4431 ;;                  1    wreg      char 
  4432 ;; Registers used:
  4433 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4434 ;; Tracked objects:
  4435 ;;		On entry : 0/0
  4436 ;;		On exit  : 0/0
  4437 ;;		Unchanged: 0/0
  4438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4439 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4440 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4442 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4443 ;;Total ram usage:        4 bytes
  4444 ;; Hardware stack levels used:    1
  4445 ;; Hardware stack levels required when called:    7
  4446 ;; This function calls:
  4447 ;;		i1_send_msg
  4448 ;; This function is called by:
  4449 ;;		_timer1_int_handler
  4450 ;; This function uses a non-reentrant model
  4451 ;;
  4452                           
  4453                           	psect	text29
  4454  00171C                     __ptext29:
  4455                           	opt stack 0
  4456  00171C                     _ToMainLow_sendmsg:
  4457                           	opt stack 17
  4458                           
  4459                           ;incstack = 0
  4460                           ;ToMainLow_sendmsg@length stored from wreg
  4461  00171C  6E1A               	movwf	ToMainLow_sendmsg@length,c
  4462                           
  4463                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  4464                           ;	Return value of _ToMainLow_sendmsg is never used
  4465  00171E  0100               	movlb	0	; () banked
  4466  001720  0E00               	movlw	high _ToMainLow_MQ
  4467  001722  6E0C               	movwf	i1send_msg@qptr+1,c
  4468  001724  0100               	movlb	0	; () banked
  4469  001726  0E60               	movlw	low _ToMainLow_MQ
  4470  001728  6E0B               	movwf	i1send_msg@qptr,c
  4471  00172A  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  4472  00172E  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  4473  001732  6A10               	clrf	i1send_msg@data+1,c
  4474  001734  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  4475  001738  EC48  F007         	call	i1_send_msg	;wreg free
  4476  00173C  0012               	return	
  4477  00173E                     __end_of_ToMainLow_sendmsg:
  4478                           	opt stack 0
  4479                           pclatu	equ	0xFFB
  4480                           pclath	equ	0xFFA
  4481                           tblptru	equ	0xFF8
  4482                           tblptrh	equ	0xFF7
  4483                           tblptrl	equ	0xFF6
  4484                           tablat	equ	0xFF5
  4485                           prodh	equ	0xFF4
  4486                           prodl	equ	0xFF3
  4487                           intcon	equ	0xFF2
  4488                           postinc0	equ	0xFEE
  4489                           fsr0h	equ	0xFEA
  4490                           fsr0l	equ	0xFE9
  4491                           wreg	equ	0xFE8
  4492                           indf1	equ	0xFE7
  4493                           fsr1h	equ	0xFE2
  4494                           fsr1l	equ	0xFE1
  4495                           bsr	equ	0xFE0
  4496                           indf2	equ	0xFDF
  4497                           postinc2	equ	0xFDE
  4498                           postdec2	equ	0xFDD
  4499                           fsr2h	equ	0xFDA
  4500                           fsr2l	equ	0xFD9
  4501                           status	equ	0xFD8
  4502                           
  4503 ;; *************** function i1_send_msg *****************
  4504 ;; Defined at:
  4505 ;;		line 24 in file "../src/messages.c"
  4506 ;; Parameters:    Size  Location     Type
  4507 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  4508 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4509 ;;  length          1   12[COMRAM] unsigned char 
  4510 ;;  msgtype         1   13[COMRAM] unsigned char 
  4511 ;;  data            2   14[COMRAM] PTR void 
  4512 ;;		 -> NULL(0), timer0_int_handler@val(2), i2c_int_handler@error_buf(3), main@t1thread_data(2), 
  4513 ;;		 -> main@ic(28), 
  4514 ;; Auto vars:     Size  Location     Type
  4515 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  4516 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4517 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4518 ;;  send_msg        2   17[COMRAM] unsigned int 
  4519 ;;  send_msg        1   19[COMRAM] unsigned char 
  4520 ;; Return value:  Size  Location     Type
  4521 ;;                  1    wreg      char 
  4522 ;; Registers used:
  4523 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4524 ;; Tracked objects:
  4525 ;;		On entry : 0/0
  4526 ;;		On exit  : 0/0
  4527 ;;		Unchanged: 0/0
  4528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4529 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4530 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4531 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4532 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4533 ;;Total ram usage:       12 bytes
  4534 ;; Hardware stack levels used:    1
  4535 ;; Hardware stack levels required when called:    6
  4536 ;; This function calls:
  4537 ;;		i1_memcpy
  4538 ;; This function is called by:
  4539 ;;		_ToMainLow_sendmsg
  4540 ;; This function uses a non-reentrant model
  4541 ;;
  4542                           
  4543                           	psect	text30
  4544  000E90                     __ptext30:
  4545                           	opt stack 0
  4546  000E90                     i1_send_msg:
  4547                           	opt stack 17
  4548                           
  4549                           ;messages.c: 25: unsigned char slot;
  4550                           ;messages.c: 27: msg *qmsg;
  4551                           ;messages.c: 28: size_t tlength = length;
  4552                           
  4553                           ;incstack = 0
  4554  000E90  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  4555  000E94  6A13               	clrf	i1send_msg@tlength+1,c
  4556                           
  4557                           ;messages.c: 38: slot = qptr->cur_write_ind;
  4558  000E96  EE20 F034          	lfsr	2,52
  4559  000E9A  500B               	movf	i1send_msg@qptr,w,c
  4560  000E9C  26D9               	addwf	fsr2l,f,c
  4561  000E9E  500C               	movf	i1send_msg@qptr+1,w,c
  4562  000EA0  22DA               	addwfc	fsr2h,f,c
  4563  000EA2  50DF               	movf	indf2,w,c
  4564  000EA4  6E14               	movwf	i1send_msg@slot,c
  4565                           
  4566                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  4567  000EA6  5014               	movf	i1send_msg@slot,w,c
  4568  000EA8  0D0D               	mullw	13
  4569  000EAA  50F3               	movf	prodl,w,c
  4570  000EAC  240B               	addwf	i1send_msg@qptr,w,c
  4571  000EAE  6E15               	movwf	i1send_msg@qmsg,c
  4572  000EB0  50F4               	movf	prodh,w,c
  4573  000EB2  200C               	addwfc	i1send_msg@qptr+1,w,c
  4574  000EB4  6E16               	movwf	i1send_msg@qmsg+1,c
  4575                           
  4576                           ;messages.c: 41: if (qmsg->full != 0) {
  4577  000EB6  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  4578  000EBA  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  4579  000EBE  50DF               	movf	indf2,w,c
  4580  000EC0  B4D8               	btfsc	status,2,c
  4581  000EC2  D002               	goto	i1l1995
  4582                           
  4583                           ;messages.c: 42: return (-1);
  4584  000EC4  0EFF               	movlw	255
  4585  000EC6  0012               	return	
  4586  000EC8                     i1l1995:
  4587                           
  4588                           ;messages.c: 43: }
  4589                           ;messages.c: 46: qmsg->length = length;
  4590  000EC8  EE20 F001          	lfsr	2,1
  4591  000ECC  5015               	movf	i1send_msg@qmsg,w,c
  4592  000ECE  26D9               	addwf	fsr2l,f,c
  4593  000ED0  5016               	movf	i1send_msg@qmsg+1,w,c
  4594  000ED2  22DA               	addwfc	fsr2h,f,c
  4595  000ED4  C00D  FFDF         	movff	i1send_msg@length,indf2
  4596                           
  4597                           ;messages.c: 47: qmsg->msgtype = msgtype;
  4598  000ED8  EE20 F002          	lfsr	2,2
  4599  000EDC  5015               	movf	i1send_msg@qmsg,w,c
  4600  000EDE  26D9               	addwf	fsr2l,f,c
  4601  000EE0  5016               	movf	i1send_msg@qmsg+1,w,c
  4602  000EE2  22DA               	addwfc	fsr2h,f,c
  4603  000EE4  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  4604                           
  4605                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  4606  000EE8  0E03               	movlw	3
  4607  000EEA  2415               	addwf	i1send_msg@qmsg,w,c
  4608  000EEC  6E01               	movwf	i1memcpy@d1,c
  4609  000EEE  0E00               	movlw	0
  4610  000EF0  2016               	addwfc	i1send_msg@qmsg+1,w,c
  4611  000EF2  6E02               	movwf	i1memcpy@d1+1,c
  4612  000EF4  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  4613  000EF8  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  4614  000EFC  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  4615  000F00  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  4616  000F04  ECDD  F009         	call	i1_memcpy	;wreg free
  4617                           
  4618                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  4619  000F08  EE20 F034          	lfsr	2,52
  4620  000F0C  500B               	movf	i1send_msg@qptr,w,c
  4621  000F0E  26D9               	addwf	fsr2l,f,c
  4622  000F10  500C               	movf	i1send_msg@qptr+1,w,c
  4623  000F12  22DA               	addwfc	fsr2h,f,c
  4624  000F14  EE10 F034          	lfsr	1,52
  4625  000F18  500B               	movf	i1send_msg@qptr,w,c
  4626  000F1A  26E1               	addwf	fsr1l,f,c
  4627  000F1C  500C               	movf	i1send_msg@qptr+1,w,c
  4628  000F1E  22E2               	addwfc	fsr1h,f,c
  4629  000F20  50E7               	movf	indf1,w,c
  4630  000F22  6E11               	movwf	??i1_send_msg& (0+255),c
  4631  000F24  2811               	incf	??i1_send_msg,w,c
  4632  000F26  0B03               	andlw	3
  4633  000F28  6EDF               	movwf	indf2,c
  4634                           
  4635                           ;messages.c: 59: qmsg->full = 1;
  4636  000F2A  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  4637  000F2E  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  4638  000F32  0E01               	movlw	1
  4639  000F34  6EDF               	movwf	indf2,c
  4640                           
  4641                           ;messages.c: 60: return (1);
  4642  000F36  0E01               	movlw	1
  4643  000F38  0012               	return	
  4644  000F3A                     __end_ofi1_send_msg:
  4645                           	opt stack 0
  4646                           pclatu	equ	0xFFB
  4647                           pclath	equ	0xFFA
  4648                           tblptru	equ	0xFF8
  4649                           tblptrh	equ	0xFF7
  4650                           tblptrl	equ	0xFF6
  4651                           tablat	equ	0xFF5
  4652                           prodh	equ	0xFF4
  4653                           prodl	equ	0xFF3
  4654                           intcon	equ	0xFF2
  4655                           postinc0	equ	0xFEE
  4656                           fsr0h	equ	0xFEA
  4657                           fsr0l	equ	0xFE9
  4658                           wreg	equ	0xFE8
  4659                           indf1	equ	0xFE7
  4660                           fsr1h	equ	0xFE2
  4661                           fsr1l	equ	0xFE1
  4662                           bsr	equ	0xFE0
  4663                           indf2	equ	0xFDF
  4664                           postinc2	equ	0xFDE
  4665                           postdec2	equ	0xFDD
  4666                           fsr2h	equ	0xFDA
  4667                           fsr2l	equ	0xFD9
  4668                           status	equ	0xFD8
  4669                           
  4670 ;; *************** function i1_memcpy *****************
  4671 ;; Defined at:
  4672 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  4673 ;; Parameters:    Size  Location     Type
  4674 ;;  d1              2    0[COMRAM] PTR void 
  4675 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4676 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4677 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  4678 ;;  s1              2    2[COMRAM] PTR const void 
  4679 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4680 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4681 ;;		 -> NULL(0), timer0_int_handler@val(2), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  4682 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), 
  4683 ;;		 -> main@ic(28), 
  4684 ;;  n               2    4[COMRAM] unsigned int 
  4685 ;; Auto vars:     Size  Location     Type
  4686 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  4687 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4688 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4689 ;;		 -> NULL(0), timer0_int_handler@val(2), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  4690 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), 
  4691 ;;		 -> main@ic(28), 
  4692 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  4693 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4694 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4695 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  4696 ;; Return value:  Size  Location     Type
  4697 ;;                  2    0[COMRAM] PTR void 
  4698 ;; Registers used:
  4699 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4700 ;; Tracked objects:
  4701 ;;		On entry : 0/0
  4702 ;;		On exit  : 0/0
  4703 ;;		Unchanged: 0/0
  4704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4705 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4706 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4708 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4709 ;;Total ram usage:       10 bytes
  4710 ;; Hardware stack levels used:    1
  4711 ;; Hardware stack levels required when called:    5
  4712 ;; This function calls:
  4713 ;;		Nothing
  4714 ;; This function is called by:
  4715 ;;		i1_send_msg
  4716 ;; This function uses a non-reentrant model
  4717 ;;
  4718                           
  4719                           	psect	text31
  4720  0013BA                     __ptext31:
  4721                           	opt stack 0
  4722  0013BA                     i1_memcpy:
  4723                           	opt stack 17
  4724                           
  4725                           ;incstack = 0
  4726  0013BA  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  4727  0013BE  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  4728  0013C2  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  4729  0013C6  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  4730  0013CA  D00E               	goto	i1l1943
  4731  0013CC                     i1l1937:
  4732  0013CC  C009  FFD9         	movff	i1memcpy@s,fsr2l
  4733  0013D0  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  4734  0013D4  C007  FFE1         	movff	i1memcpy@d,fsr1l
  4735  0013D8  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  4736  0013DC  CFDF FFE7          	movff	indf2,indf1
  4737  0013E0  4A09               	infsnz	i1memcpy@s,f,c
  4738  0013E2  2A0A               	incf	i1memcpy@s+1,f,c
  4739  0013E4  4A07               	infsnz	i1memcpy@d,f,c
  4740  0013E6  2A08               	incf	i1memcpy@d+1,f,c
  4741  0013E8                     i1l1943:
  4742  0013E8  0605               	decf	i1memcpy@n,f,c
  4743  0013EA  A0D8               	btfss	status,0,c
  4744  0013EC  0606               	decf	i1memcpy@n+1,f,c
  4745  0013EE  2805               	incf	i1memcpy@n& (0+255),w,c
  4746  0013F0  B4D8               	btfsc	status,2,c
  4747  0013F2  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  4748  0013F4  B4D8               	btfsc	status,2,c
  4749                           
  4750                           ;	Return value of i1_memcpy is never used
  4751  0013F6  0012               	return	
  4752  0013F8  D7E9               	goto	i1l1937
  4753  0013FA                     __end_ofi1_memcpy:
  4754                           	opt stack 0
  4755                           pclatu	equ	0xFFB
  4756                           pclath	equ	0xFFA
  4757                           tblptru	equ	0xFF8
  4758                           tblptrh	equ	0xFF7
  4759                           tblptrl	equ	0xFF6
  4760                           tablat	equ	0xFF5
  4761                           prodh	equ	0xFF4
  4762                           prodl	equ	0xFF3
  4763                           intcon	equ	0xFF2
  4764                           postinc0	equ	0xFEE
  4765                           fsr0h	equ	0xFEA
  4766                           fsr0l	equ	0xFE9
  4767                           wreg	equ	0xFE8
  4768                           indf1	equ	0xFE7
  4769                           fsr1h	equ	0xFE2
  4770                           fsr1l	equ	0xFE1
  4771                           bsr	equ	0xFE0
  4772                           indf2	equ	0xFDF
  4773                           postinc2	equ	0xFDE
  4774                           postdec2	equ	0xFDD
  4775                           fsr2h	equ	0xFDA
  4776                           fsr2l	equ	0xFD9
  4777                           status	equ	0xFD8
  4778                           
  4779 ;; *************** function _ReadTimer1 *****************
  4780 ;; Defined at:
  4781 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1read.c"
  4782 ;; Parameters:    Size  Location     Type
  4783 ;;		None
  4784 ;; Auto vars:     Size  Location     Type
  4785 ;;  timer           2    2[COMRAM] struct Timers
  4786 ;; Return value:  Size  Location     Type
  4787 ;;                  2    0[COMRAM] unsigned int 
  4788 ;; Registers used:
  4789 ;;		None
  4790 ;; Tracked objects:
  4791 ;;		On entry : 0/0
  4792 ;;		On exit  : 0/0
  4793 ;;		Unchanged: 0/0
  4794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4795 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4796 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4798 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4799 ;;Total ram usage:        4 bytes
  4800 ;; Hardware stack levels used:    1
  4801 ;; Hardware stack levels required when called:    5
  4802 ;; This function calls:
  4803 ;;		Nothing
  4804 ;; This function is called by:
  4805 ;;		_timer1_int_handler
  4806 ;; This function uses a non-reentrant model
  4807 ;;
  4808                           
  4809                           	psect	text32
  4810  00177E                     __ptext32:
  4811                           	opt stack 0
  4812  00177E                     _ReadTimer1:
  4813                           	opt stack 19
  4814                           
  4815                           ;incstack = 0
  4816  00177E  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  4817  001782  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  4818  001786  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  4819  00178A  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  4820  00178E  0012               	return	
  4821  001790                     __end_of_ReadTimer1:
  4822                           	opt stack 0
  4823                           pclatu	equ	0xFFB
  4824                           pclath	equ	0xFFA
  4825                           tblptru	equ	0xFF8
  4826                           tblptrh	equ	0xFF7
  4827                           tblptrl	equ	0xFF6
  4828                           tablat	equ	0xFF5
  4829                           prodh	equ	0xFF4
  4830                           prodl	equ	0xFF3
  4831                           intcon	equ	0xFF2
  4832                           postinc0	equ	0xFEE
  4833                           fsr0h	equ	0xFEA
  4834                           fsr0l	equ	0xFE9
  4835                           wreg	equ	0xFE8
  4836                           indf1	equ	0xFE7
  4837                           fsr1h	equ	0xFE2
  4838                           fsr1l	equ	0xFE1
  4839                           bsr	equ	0xFE0
  4840                           indf2	equ	0xFDF
  4841                           postinc2	equ	0xFDE
  4842                           postdec2	equ	0xFDD
  4843                           fsr2h	equ	0xFDA
  4844                           fsr2l	equ	0xFD9
  4845                           status	equ	0xFD8
  4846                           
  4847 ;; *************** function _InterruptHandlerHigh *****************
  4848 ;; Defined at:
  4849 ;;		line 86 in file "../src/interrupts.c"
  4850 ;; Parameters:    Size  Location     Type
  4851 ;;		None
  4852 ;; Auto vars:     Size  Location     Type
  4853 ;;		None
  4854 ;; Return value:  Size  Location     Type
  4855 ;;		None               void
  4856 ;; Registers used:
  4857 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4858 ;; Tracked objects:
  4859 ;;		On entry : 0/0
  4860 ;;		On exit  : 0/0
  4861 ;;		Unchanged: 0/0
  4862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4865 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4866 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4867 ;;Total ram usage:       14 bytes
  4868 ;; Hardware stack levels used:    1
  4869 ;; Hardware stack levels required when called:    4
  4870 ;; This function calls:
  4871 ;;		_SleepIfOkay
  4872 ;;		_i2c_int_handler
  4873 ;;		_timer0_int_handler
  4874 ;; This function is called by:
  4875 ;;		Interrupt level 2
  4876 ;; This function uses a non-reentrant model
  4877 ;;
  4878                           
  4879                           	psect	intcode
  4880  000008                     __pintcode:
  4881                           	opt stack 0
  4882  000008                     _InterruptHandlerHigh:
  4883                           	opt stack 17
  4884                           
  4885                           ;incstack = 0
  4886  000008  CFFA F0C1          	movff	pclath,??_InterruptHandlerHigh
  4887  00000C  CFFB F0C2          	movff	pclatu,??_InterruptHandlerHigh+1
  4888  000010  CFE9 F0C3          	movff	fsr0l,??_InterruptHandlerHigh+2
  4889  000014  EF9D  F007         	goto	int_func
  4890                           pclatu	equ	0xFFB
  4891                           pclath	equ	0xFFA
  4892                           tblptru	equ	0xFF8
  4893                           tblptrh	equ	0xFF7
  4894                           tblptrl	equ	0xFF6
  4895                           tablat	equ	0xFF5
  4896                           prodh	equ	0xFF4
  4897                           prodl	equ	0xFF3
  4898                           intcon	equ	0xFF2
  4899                           postinc0	equ	0xFEE
  4900                           fsr0h	equ	0xFEA
  4901                           fsr0l	equ	0xFE9
  4902                           wreg	equ	0xFE8
  4903                           indf1	equ	0xFE7
  4904                           fsr1h	equ	0xFE2
  4905                           fsr1l	equ	0xFE1
  4906                           bsr	equ	0xFE0
  4907                           indf2	equ	0xFDF
  4908                           postinc2	equ	0xFDE
  4909                           postdec2	equ	0xFDD
  4910                           fsr2h	equ	0xFDA
  4911                           fsr2l	equ	0xFD9
  4912                           status	equ	0xFD8
  4913                           
  4914                           	psect	intcode_body
  4915  000F3A                     __pintcode_body:
  4916                           	opt stack 17
  4917  000F3A                     int_func:
  4918                           	opt stack 17
  4919  000F3A  CFEA F0C4          	movff	fsr0h,??_InterruptHandlerHigh+3
  4920  000F3E  CFE1 F0C5          	movff	fsr1l,??_InterruptHandlerHigh+4
  4921  000F42  CFE2 F0C6          	movff	fsr1h,??_InterruptHandlerHigh+5
  4922  000F46  CFD9 F0C7          	movff	fsr2l,??_InterruptHandlerHigh+6
  4923  000F4A  CFDA F0C8          	movff	fsr2h,??_InterruptHandlerHigh+7
  4924  000F4E  CFF3 F0C9          	movff	prodl,??_InterruptHandlerHigh+8
  4925  000F52  CFF4 F0CA          	movff	prodh,??_InterruptHandlerHigh+9
  4926  000F56  CFF6 F0CB          	movff	tblptrl,??_InterruptHandlerHigh+10
  4927  000F5A  CFF7 F0CC          	movff	tblptrh,??_InterruptHandlerHigh+11
  4928  000F5E  CFF8 F0CD          	movff	tblptru,??_InterruptHandlerHigh+12
  4929  000F62  CFF5 F0CE          	movff	tablat,??_InterruptHandlerHigh+13
  4930                           
  4931                           ;interrupts.c: 91: if (PIR1bits.SSPIF) {
  4932  000F66  A69E               	btfss	3998,3,c	;volatile
  4933  000F68  D003               	goto	i2l3319
  4934                           
  4935                           ;interrupts.c: 93: PIR1bits.SSPIF = 0;
  4936  000F6A  969E               	bcf	3998,3,c	;volatile
  4937                           
  4938                           ;interrupts.c: 95: i2c_int_handler();
  4939  000F6C  EC69  F000         	call	_i2c_int_handler	;wreg free
  4940  000F70                     i2l3319:
  4941                           
  4942                           ;interrupts.c: 96: }
  4943                           ;interrupts.c: 99: if (INTCONbits.TMR0IF) {
  4944  000F70  A4F2               	btfss	intcon,2,c	;volatile
  4945  000F72  D003               	goto	i2l3325
  4946                           
  4947                           ;interrupts.c: 100: INTCONbits.TMR0IF = 0;
  4948  000F74  94F2               	bcf	intcon,2,c	;volatile
  4949                           
  4950                           ;interrupts.c: 102: timer0_int_handler();
  4951  000F76  ECDC  F007         	call	_timer0_int_handler	;wreg free
  4952  000F7A                     i2l3325:
  4953                           
  4954                           ;interrupts.c: 103: }
  4955                           ;interrupts.c: 112: SleepIfOkay();
  4956  000F7A  EC13  F009         	call	_SleepIfOkay	;wreg free
  4957  000F7E  C0CE  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  4958  000F82  C0CD  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  4959  000F86  C0CC  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  4960  000F8A  C0CB  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  4961  000F8E  C0CA  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  4962  000F92  C0C9  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  4963  000F96  C0C8  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  4964  000F9A  C0C7  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  4965  000F9E  C0C6  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  4966  000FA2  C0C5  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  4967  000FA6  C0C4  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  4968  000FAA  C0C3  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  4969  000FAE  C0C2  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  4970  000FB2  C0C1  FFFA         	movff	??_InterruptHandlerHigh,pclath
  4971  000FB6  0011               	retfie		f
  4972  000FB8                     __end_of_InterruptHandlerHigh:
  4973                           	opt stack 0
  4974                           pclatu	equ	0xFFB
  4975                           pclath	equ	0xFFA
  4976                           tblptru	equ	0xFF8
  4977                           tblptrh	equ	0xFF7
  4978                           tblptrl	equ	0xFF6
  4979                           tablat	equ	0xFF5
  4980                           prodh	equ	0xFF4
  4981                           prodl	equ	0xFF3
  4982                           intcon	equ	0xFF2
  4983                           postinc0	equ	0xFEE
  4984                           fsr0h	equ	0xFEA
  4985                           fsr0l	equ	0xFE9
  4986                           wreg	equ	0xFE8
  4987                           indf1	equ	0xFE7
  4988                           fsr1h	equ	0xFE2
  4989                           fsr1l	equ	0xFE1
  4990                           bsr	equ	0xFE0
  4991                           indf2	equ	0xFDF
  4992                           postinc2	equ	0xFDE
  4993                           postdec2	equ	0xFDD
  4994                           fsr2h	equ	0xFDA
  4995                           fsr2l	equ	0xFD9
  4996                           status	equ	0xFD8
  4997                           
  4998 ;; *************** function _timer0_int_handler *****************
  4999 ;; Defined at:
  5000 ;;		line 16 in file "../src/user_interrupts.c"
  5001 ;; Parameters:    Size  Location     Type
  5002 ;;		None
  5003 ;; Auto vars:     Size  Location     Type
  5004 ;;  val             2   33[BANK0 ] unsigned int 
  5005 ;;  msgtype         2   31[BANK0 ] int 
  5006 ;;  length          2   29[BANK0 ] int 
  5007 ;; Return value:  Size  Location     Type
  5008 ;;		None               void
  5009 ;; Registers used:
  5010 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5011 ;; Tracked objects:
  5012 ;;		On entry : 0/0
  5013 ;;		On exit  : 0/0
  5014 ;;		Unchanged: 0/0
  5015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5017 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5019 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5020 ;;Total ram usage:        6 bytes
  5021 ;; Hardware stack levels used:    1
  5022 ;; Hardware stack levels required when called:    3
  5023 ;; This function calls:
  5024 ;;		_FromMainHigh_recvmsg
  5025 ;;		_ToMainHigh_sendmsg
  5026 ;;		_WriteTimer0
  5027 ;; This function is called by:
  5028 ;;		_InterruptHandlerHigh
  5029 ;; This function uses a non-reentrant model
  5030 ;;
  5031                           
  5032                           	psect	text34
  5033  000FB8                     __ptext34:
  5034                           	opt stack 0
  5035  000FB8                     _timer0_int_handler:
  5036                           	opt stack 17
  5037                           
  5038                           ;user_interrupts.c: 20: LATD = 0x40;
  5039                           
  5040                           ;incstack = 0
  5041  000FB8  0E40               	movlw	64
  5042  000FBA  6E8C               	movwf	3980,c	;volatile
  5043                           
  5044                           ;user_interrupts.c: 24: unsigned int val;
  5045                           ;user_interrupts.c: 25: int length, msgtype;
  5046                           ;user_interrupts.c: 32: WriteTimer0(0);
  5047  000FBC  0E00               	movlw	0
  5048  000FBE  0100               	movlb	0	; () banked
  5049  000FC0  6F9E               	movwf	(WriteTimer0@timer0+1)& (0+255),b
  5050  000FC2  0E00               	movlw	0
  5051  000FC4  0100               	movlb	0	; () banked
  5052  000FC6  6F9D               	movwf	WriteTimer0@timer0& (0+255),b
  5053  000FC8  ECC8  F00B         	call	_WriteTimer0	;wreg free
  5054                           
  5055                           ;user_interrupts.c: 34: length = FromMainHigh_recvmsg(sizeof(val), (unsigned char *)&msg
      +                          type, (void *) &val);
  5056  000FCC  0100               	movlb	0	; () banked
  5057  000FCE  0E00               	movlw	high timer0_int_handler@msgtype
  5058  000FD0  0100               	movlb	0	; () banked
  5059  000FD2  6FB6               	movwf	(FromMainHigh_recvmsg@msgtype+1)& (0+255),b
  5060  000FD4  0100               	movlb	0	; () banked
  5061  000FD6  0EBC               	movlw	low timer0_int_handler@msgtype
  5062  000FD8  0100               	movlb	0	; () banked
  5063  000FDA  6FB5               	movwf	FromMainHigh_recvmsg@msgtype& (0+255),b
  5064  000FDC  0100               	movlb	0	; () banked
  5065  000FDE  0E00               	movlw	high timer0_int_handler@val
  5066  000FE0  0100               	movlb	0	; () banked
  5067  000FE2  6FB8               	movwf	(FromMainHigh_recvmsg@data+1)& (0+255),b
  5068  000FE4  0100               	movlb	0	; () banked
  5069  000FE6  0EBE               	movlw	low timer0_int_handler@val
  5070  000FE8  0100               	movlb	0	; () banked
  5071  000FEA  6FB7               	movwf	FromMainHigh_recvmsg@data& (0+255),b
  5072  000FEC  0E02               	movlw	2
  5073  000FEE  EC8D  F00A         	call	_FromMainHigh_recvmsg
  5074  000FF2  0100               	movlb	0	; () banked
  5075  000FF4  6FBA               	movwf	timer0_int_handler@length& (0+255),b
  5076  000FF6  0100               	movlb	0	; () banked
  5077  000FF8  6BBB               	clrf	(timer0_int_handler@length+1)& (0+255),b
  5078  000FFA  0100               	movlb	0	; () banked
  5079  000FFC  BFBA               	btfsc	timer0_int_handler@length& (0+255),7,b
  5080  000FFE  07BB               	decf	(timer0_int_handler@length+1)& (0+255),f,b
  5081                           
  5082                           ; BSR set to: 0
  5083                           ;user_interrupts.c: 35: if (length == sizeof (val)) {
  5084  001000  0100               	movlb	0	; () banked
  5085  001002  51BA               	movf	timer0_int_handler@length& (0+255),w,b
  5086  001004  0A02               	xorlw	2
  5087  001006  11BB               	iorwf	(timer0_int_handler@length+1)& (0+255),w,b
  5088  001008  A4D8               	btfss	status,2,c
  5089  00100A  D00E               	goto	i2l3119
  5090                           
  5091                           ; BSR set to: 0
  5092                           ;user_interrupts.c: 36: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
  5093  00100C  0E0A               	movlw	10
  5094  00100E  0100               	movlb	0	; () banked
  5095  001010  6FB3               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  5096  001012  0100               	movlb	0	; () banked
  5097  001014  0E00               	movlw	high timer0_int_handler@val
  5098  001016  0100               	movlb	0	; () banked
  5099  001018  6FB5               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  5100  00101A  0100               	movlb	0	; () banked
  5101  00101C  0EBE               	movlw	low timer0_int_handler@val
  5102  00101E  0100               	movlb	0	; () banked
  5103  001020  6FB4               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  5104  001022  0E02               	movlw	2
  5105  001024  EC3B  F00B         	call	_ToMainHigh_sendmsg
  5106  001028                     i2l3119:
  5107                           
  5108                           ;user_interrupts.c: 37: }
  5109                           ;user_interrupts.c: 41: LATD = 0x00;
  5110  001028  0E00               	movlw	0
  5111  00102A  6E8C               	movwf	3980,c	;volatile
  5112  00102C  0012               	return	
  5113  00102E                     __end_of_timer0_int_handler:
  5114                           	opt stack 0
  5115                           pclatu	equ	0xFFB
  5116                           pclath	equ	0xFFA
  5117                           tblptru	equ	0xFF8
  5118                           tblptrh	equ	0xFF7
  5119                           tblptrl	equ	0xFF6
  5120                           tablat	equ	0xFF5
  5121                           prodh	equ	0xFF4
  5122                           prodl	equ	0xFF3
  5123                           intcon	equ	0xFF2
  5124                           postinc0	equ	0xFEE
  5125                           fsr0h	equ	0xFEA
  5126                           fsr0l	equ	0xFE9
  5127                           wreg	equ	0xFE8
  5128                           indf1	equ	0xFE7
  5129                           fsr1h	equ	0xFE2
  5130                           fsr1l	equ	0xFE1
  5131                           bsr	equ	0xFE0
  5132                           indf2	equ	0xFDF
  5133                           postinc2	equ	0xFDE
  5134                           postdec2	equ	0xFDD
  5135                           fsr2h	equ	0xFDA
  5136                           fsr2l	equ	0xFD9
  5137                           status	equ	0xFD8
  5138                           
  5139 ;; *************** function _WriteTimer0 *****************
  5140 ;; Defined at:
  5141 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0write.c"
  5142 ;; Parameters:    Size  Location     Type
  5143 ;;  timer0          2    0[BANK0 ] unsigned int 
  5144 ;; Auto vars:     Size  Location     Type
  5145 ;;  timer           2    2[BANK0 ] struct Timers
  5146 ;; Return value:  Size  Location     Type
  5147 ;;		None               void
  5148 ;; Registers used:
  5149 ;;		None
  5150 ;; Tracked objects:
  5151 ;;		On entry : 0/0
  5152 ;;		On exit  : 0/0
  5153 ;;		Unchanged: 0/0
  5154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5155 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5156 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5158 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5159 ;;Total ram usage:        4 bytes
  5160 ;; Hardware stack levels used:    1
  5161 ;; This function calls:
  5162 ;;		Nothing
  5163 ;; This function is called by:
  5164 ;;		_timer0_int_handler
  5165 ;; This function uses a non-reentrant model
  5166 ;;
  5167                           
  5168                           	psect	text35
  5169  001790                     __ptext35:
  5170                           	opt stack 0
  5171  001790                     _WriteTimer0:
  5172                           	opt stack 19
  5173                           
  5174                           ;incstack = 0
  5175  001790  C09D  F09F         	movff	WriteTimer0@timer0,WriteTimer0@timer
  5176  001794  C09E  F0A0         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  5177  001798  C0A0  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  5178  00179C  C09F  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  5179  0017A0  0012               	return	
  5180  0017A2                     __end_of_WriteTimer0:
  5181                           	opt stack 0
  5182                           pclatu	equ	0xFFB
  5183                           pclath	equ	0xFFA
  5184                           tblptru	equ	0xFF8
  5185                           tblptrh	equ	0xFF7
  5186                           tblptrl	equ	0xFF6
  5187                           tablat	equ	0xFF5
  5188                           prodh	equ	0xFF4
  5189                           prodl	equ	0xFF3
  5190                           intcon	equ	0xFF2
  5191                           postinc0	equ	0xFEE
  5192                           fsr0h	equ	0xFEA
  5193                           fsr0l	equ	0xFE9
  5194                           wreg	equ	0xFE8
  5195                           indf1	equ	0xFE7
  5196                           fsr1h	equ	0xFE2
  5197                           fsr1l	equ	0xFE1
  5198                           bsr	equ	0xFE0
  5199                           indf2	equ	0xFDF
  5200                           postinc2	equ	0xFDE
  5201                           postdec2	equ	0xFDD
  5202                           fsr2h	equ	0xFDA
  5203                           fsr2l	equ	0xFD9
  5204                           status	equ	0xFD8
  5205                           
  5206 ;; *************** function _FromMainHigh_recvmsg *****************
  5207 ;; Defined at:
  5208 ;;		line 183 in file "../src/messages.c"
  5209 ;; Parameters:    Size  Location     Type
  5210 ;;  maxlength       1    wreg     unsigned char 
  5211 ;;  msgtype         2   24[BANK0 ] PTR unsigned char 
  5212 ;;		 -> timer0_int_handler@msgtype(2), 
  5213 ;;  data            2   26[BANK0 ] PTR void 
  5214 ;;		 -> timer0_int_handler@val(2), 
  5215 ;; Auto vars:     Size  Location     Type
  5216 ;;  maxlength       1   28[BANK0 ] unsigned char 
  5217 ;; Return value:  Size  Location     Type
  5218 ;;                  1    wreg      char 
  5219 ;; Registers used:
  5220 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5221 ;; Tracked objects:
  5222 ;;		On entry : 0/0
  5223 ;;		On exit  : 0/0
  5224 ;;		Unchanged: 0/0
  5225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5226 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5227 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5229 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5230 ;;Total ram usage:        5 bytes
  5231 ;; Hardware stack levels used:    1
  5232 ;; Hardware stack levels required when called:    2
  5233 ;; This function calls:
  5234 ;;		i2_recv_msg
  5235 ;; This function is called by:
  5236 ;;		_timer0_int_handler
  5237 ;; This function uses a non-reentrant model
  5238 ;;
  5239                           
  5240                           	psect	text36
  5241  00151A                     __ptext36:
  5242                           	opt stack 0
  5243  00151A                     _FromMainHigh_recvmsg:
  5244                           	opt stack 17
  5245                           
  5246                           ;incstack = 0
  5247                           ;FromMainHigh_recvmsg@maxlength stored from wreg
  5248  00151A  0100               	movlb	0	; () banked
  5249  00151C  6FB9               	movwf	FromMainHigh_recvmsg@maxlength& (0+255),b
  5250                           
  5251                           ; BSR set to: 0
  5252                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  5253  00151E  0101               	movlb	1	; () banked
  5254  001520  0E01               	movlw	high _FromMainHigh_MQ
  5255  001522  0100               	movlb	0	; () banked
  5256  001524  6FA8               	movwf	(i2recv_msg@qptr+1)& (0+255),b
  5257  001526  0101               	movlb	1	; () banked
  5258  001528  0E00               	movlw	low _FromMainHigh_MQ
  5259  00152A  0100               	movlb	0	; () banked
  5260  00152C  6FA7               	movwf	i2recv_msg@qptr& (0+255),b
  5261  00152E  C0B9  F0A9         	movff	FromMainHigh_recvmsg@maxlength,i2recv_msg@maxlength
  5262  001532  0100               	movlb	0	; () banked
  5263  001534  C0B6  F0AB         	movff	FromMainHigh_recvmsg@msgtype+1,i2recv_msg@msgtype+1
  5264  001538  0100               	movlb	0	; () banked
  5265  00153A  C0B5  F0AA         	movff	FromMainHigh_recvmsg@msgtype,i2recv_msg@msgtype
  5266  00153E  0100               	movlb	0	; () banked
  5267  001540  C0B8  F0AD         	movff	FromMainHigh_recvmsg@data+1,i2recv_msg@data+1
  5268  001544  0100               	movlb	0	; () banked
  5269  001546  C0B7  F0AC         	movff	FromMainHigh_recvmsg@data,i2recv_msg@data
  5270  00154A  ECE6  F004         	call	i2_recv_msg	;wreg free
  5271  00154E  0012               	return	
  5272  001550                     __end_of_FromMainHigh_recvmsg:
  5273                           	opt stack 0
  5274                           pclatu	equ	0xFFB
  5275                           pclath	equ	0xFFA
  5276                           tblptru	equ	0xFF8
  5277                           tblptrh	equ	0xFF7
  5278                           tblptrl	equ	0xFF6
  5279                           tablat	equ	0xFF5
  5280                           prodh	equ	0xFF4
  5281                           prodl	equ	0xFF3
  5282                           intcon	equ	0xFF2
  5283                           postinc0	equ	0xFEE
  5284                           fsr0h	equ	0xFEA
  5285                           fsr0l	equ	0xFE9
  5286                           wreg	equ	0xFE8
  5287                           indf1	equ	0xFE7
  5288                           fsr1h	equ	0xFE2
  5289                           fsr1l	equ	0xFE1
  5290                           bsr	equ	0xFE0
  5291                           indf2	equ	0xFDF
  5292                           postinc2	equ	0xFDE
  5293                           postdec2	equ	0xFDD
  5294                           fsr2h	equ	0xFDA
  5295                           fsr2l	equ	0xFD9
  5296                           status	equ	0xFD8
  5297                           
  5298 ;; *************** function i2_recv_msg *****************
  5299 ;; Defined at:
  5300 ;;		line 63 in file "../src/messages.c"
  5301 ;; Parameters:    Size  Location     Type
  5302 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  5303 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5304 ;;  maxlength       1   12[BANK0 ] unsigned char 
  5305 ;;  msgtype         2   13[BANK0 ] PTR unsigned char 
  5306 ;;		 -> timer0_int_handler@msgtype(2), main@msgtype(1), 
  5307 ;;  data            2   15[BANK0 ] PTR void 
  5308 ;;		 -> timer0_int_handler@val(2), main@msgbuffer(11), 
  5309 ;; Auto vars:     Size  Location     Type
  5310 ;;  recv_msg        2   22[BANK0 ] PTR struct __msg
  5311 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5312 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5313 ;;  recv_msg        2   20[BANK0 ] unsigned int 
  5314 ;;  recv_msg        1   19[BANK0 ] unsigned char 
  5315 ;; Return value:  Size  Location     Type
  5316 ;;                  1    wreg      char 
  5317 ;; Registers used:
  5318 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5319 ;; Tracked objects:
  5320 ;;		On entry : 0/0
  5321 ;;		On exit  : 0/0
  5322 ;;		Unchanged: 0/0
  5323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5324 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5325 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5326 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5327 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5328 ;;Total ram usage:       14 bytes
  5329 ;; Hardware stack levels used:    1
  5330 ;; Hardware stack levels required when called:    1
  5331 ;; This function calls:
  5332 ;;		i2_memcpy
  5333 ;; This function is called by:
  5334 ;;		_FromMainHigh_recvmsg
  5335 ;; This function uses a non-reentrant model
  5336 ;;
  5337                           
  5338                           	psect	text37
  5339  0009CC                     __ptext37:
  5340                           	opt stack 0
  5341  0009CC                     i2_recv_msg:
  5342                           	opt stack 17
  5343                           
  5344                           ;messages.c: 64: unsigned char slot;
  5345                           ;messages.c: 68: msg *qmsg;
  5346                           ;messages.c: 69: size_t tlength;
  5347                           ;messages.c: 72: slot = qptr->cur_read_ind;
  5348                           
  5349                           ;incstack = 0
  5350  0009CC  0100               	movlb	0	; () banked
  5351  0009CE  EE20 F035          	lfsr	2,53
  5352  0009D2  0100               	movlb	0	; () banked
  5353  0009D4  51A7               	movf	i2recv_msg@qptr& (0+255),w,b
  5354  0009D6  26D9               	addwf	fsr2l,f,c
  5355  0009D8  0100               	movlb	0	; () banked
  5356  0009DA  51A8               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  5357  0009DC  22DA               	addwfc	fsr2h,f,c
  5358  0009DE  50DF               	movf	indf2,w,c
  5359  0009E0  0100               	movlb	0	; () banked
  5360  0009E2  6FB0               	movwf	i2recv_msg@slot& (0+255),b
  5361                           
  5362                           ; BSR set to: 0
  5363                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  5364  0009E4  0100               	movlb	0	; () banked
  5365  0009E6  51B0               	movf	i2recv_msg@slot& (0+255),w,b
  5366  0009E8  0D0D               	mullw	13
  5367  0009EA  50F3               	movf	prodl,w,c
  5368  0009EC  0100               	movlb	0	; () banked
  5369  0009EE  25A7               	addwf	i2recv_msg@qptr& (0+255),w,b
  5370  0009F0  0100               	movlb	0	; () banked
  5371  0009F2  6FB3               	movwf	i2recv_msg@qmsg& (0+255),b
  5372  0009F4  50F4               	movf	prodh,w,c
  5373  0009F6  0100               	movlb	0	; () banked
  5374  0009F8  21A8               	addwfc	(i2recv_msg@qptr+1)& (0+255),w,b
  5375  0009FA  0100               	movlb	0	; () banked
  5376  0009FC  6FB4               	movwf	(i2recv_msg@qmsg+1)& (0+255),b
  5377                           
  5378                           ; BSR set to: 0
  5379                           ;messages.c: 74: if (qmsg->full == 1) {
  5380  0009FE  0E01               	movlw	1
  5381  000A00  C0B3  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  5382  000A04  C0B4  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  5383  000A08  62DF               	cpfseq	indf2,c
  5384  000A0A  D06D               	goto	i2l2829
  5385                           
  5386                           ; BSR set to: 0
  5387                           ;messages.c: 76: if (qmsg->length > maxlength) {
  5388  000A0C  0100               	movlb	0	; () banked
  5389  000A0E  EE20 F001          	lfsr	2,1
  5390  000A12  0100               	movlb	0	; () banked
  5391  000A14  51B3               	movf	i2recv_msg@qmsg& (0+255),w,b
  5392  000A16  26D9               	addwf	fsr2l,f,c
  5393  000A18  0100               	movlb	0	; () banked
  5394  000A1A  51B4               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  5395  000A1C  22DA               	addwfc	fsr2h,f,c
  5396  000A1E  50DF               	movf	indf2,w,c
  5397  000A20  0100               	movlb	0	; () banked
  5398  000A22  5DA9               	subwf	i2recv_msg@maxlength& (0+255),w,b
  5399  000A24  B0D8               	btfsc	status,0,c
  5400  000A26  D002               	goto	i2l2813
  5401                           
  5402                           ; BSR set to: 0
  5403                           ;messages.c: 77: return (-3);
  5404  000A28  0EFD               	movlw	253
  5405  000A2A  0012               	return	
  5406  000A2C                     i2l2813:
  5407                           
  5408                           ; BSR set to: 0
  5409                           ;messages.c: 78: }
  5410                           ;messages.c: 80: tlength = qmsg->length;
  5411  000A2C  0100               	movlb	0	; () banked
  5412  000A2E  EE20 F001          	lfsr	2,1
  5413  000A32  0100               	movlb	0	; () banked
  5414  000A34  51B3               	movf	i2recv_msg@qmsg& (0+255),w,b
  5415  000A36  26D9               	addwf	fsr2l,f,c
  5416  000A38  0100               	movlb	0	; () banked
  5417  000A3A  51B4               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  5418  000A3C  22DA               	addwfc	fsr2h,f,c
  5419  000A3E  50DF               	movf	indf2,w,c
  5420  000A40  0100               	movlb	0	; () banked
  5421  000A42  6FAE               	movwf	??i2_recv_msg& (0+255),b
  5422  000A44  0100               	movlb	0	; () banked
  5423  000A46  51AE               	movf	??i2_recv_msg& (0+255),w,b
  5424  000A48  0100               	movlb	0	; () banked
  5425  000A4A  6FB1               	movwf	i2recv_msg@tlength& (0+255),b
  5426  000A4C  0100               	movlb	0	; () banked
  5427  000A4E  6BB2               	clrf	(i2recv_msg@tlength+1)& (0+255),b
  5428                           
  5429                           ; BSR set to: 0
  5430                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  5431  000A50  0100               	movlb	0	; () banked
  5432  000A52  C0AD  F09E         	movff	i2recv_msg@data+1,i2memcpy@d1+1
  5433  000A56  0100               	movlb	0	; () banked
  5434  000A58  C0AC  F09D         	movff	i2recv_msg@data,i2memcpy@d1
  5435  000A5C  0E03               	movlw	3
  5436  000A5E  0100               	movlb	0	; () banked
  5437  000A60  25B3               	addwf	i2recv_msg@qmsg& (0+255),w,b
  5438  000A62  0100               	movlb	0	; () banked
  5439  000A64  6FAE               	movwf	??i2_recv_msg& (0+255),b
  5440  000A66  0E00               	movlw	0
  5441  000A68  0100               	movlb	0	; () banked
  5442  000A6A  21B4               	addwfc	(i2recv_msg@qmsg+1)& (0+255),w,b
  5443  000A6C  0100               	movlb	0	; () banked
  5444  000A6E  6FAF               	movwf	(??i2_recv_msg+1)& (0+255),b
  5445  000A70  C0AE  F09F         	movff	??i2_recv_msg,i2memcpy@s1
  5446  000A74  C0AF  F0A0         	movff	??i2_recv_msg+1,i2memcpy@s1+1
  5447  000A78  C0B1  F0A1         	movff	i2recv_msg@tlength,i2memcpy@n
  5448  000A7C  C0B2  F0A2         	movff	i2recv_msg@tlength+1,i2memcpy@n+1
  5449  000A80  EC95  F009         	call	i2_memcpy	;wreg free
  5450                           
  5451                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  5452  000A84  0100               	movlb	0	; () banked
  5453  000A86  EE20 F035          	lfsr	2,53
  5454  000A8A  0100               	movlb	0	; () banked
  5455  000A8C  51A7               	movf	i2recv_msg@qptr& (0+255),w,b
  5456  000A8E  26D9               	addwf	fsr2l,f,c
  5457  000A90  0100               	movlb	0	; () banked
  5458  000A92  51A8               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  5459  000A94  22DA               	addwfc	fsr2h,f,c
  5460  000A96  0100               	movlb	0	; () banked
  5461  000A98  EE10 F035          	lfsr	1,53
  5462  000A9C  0100               	movlb	0	; () banked
  5463  000A9E  51A7               	movf	i2recv_msg@qptr& (0+255),w,b
  5464  000AA0  26E1               	addwf	fsr1l,f,c
  5465  000AA2  0100               	movlb	0	; () banked
  5466  000AA4  51A8               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  5467  000AA6  22E2               	addwfc	fsr1h,f,c
  5468  000AA8  50E7               	movf	indf1,w,c
  5469  000AAA  0100               	movlb	0	; () banked
  5470  000AAC  6FAE               	movwf	??i2_recv_msg& (0+255),b
  5471  000AAE  0100               	movlb	0	; () banked
  5472  000AB0  29AE               	incf	??i2_recv_msg& (0+255),w,b
  5473  000AB2  0B03               	andlw	3
  5474  000AB4  6EDF               	movwf	indf2,c
  5475                           
  5476                           ; BSR set to: 0
  5477                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  5478  000AB6  0100               	movlb	0	; () banked
  5479  000AB8  EE20 F002          	lfsr	2,2
  5480  000ABC  0100               	movlb	0	; () banked
  5481  000ABE  51B3               	movf	i2recv_msg@qmsg& (0+255),w,b
  5482  000AC0  26D9               	addwf	fsr2l,f,c
  5483  000AC2  0100               	movlb	0	; () banked
  5484  000AC4  51B4               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  5485  000AC6  22DA               	addwfc	fsr2h,f,c
  5486  000AC8  C0AA  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  5487  000ACC  C0AB  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  5488  000AD0  CFDF FFE7          	movff	indf2,indf1
  5489                           
  5490                           ; BSR set to: 0
  5491                           ;messages.c: 91: qmsg->full = 0;
  5492  000AD4  C0B3  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  5493  000AD8  C0B4  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  5494  000ADC  0E00               	movlw	0
  5495  000ADE  6EDF               	movwf	indf2,c
  5496                           
  5497                           ; BSR set to: 0
  5498                           ;messages.c: 92: return (tlength);
  5499  000AE0  0100               	movlb	0	; () banked
  5500  000AE2  51B1               	movf	i2recv_msg@tlength& (0+255),w,b
  5501  000AE4  0012               	return	
  5502  000AE6                     i2l2829:
  5503                           
  5504                           ; BSR set to: 0
  5505                           ;messages.c: 94: return (-4);
  5506  000AE6  0EFC               	movlw	252
  5507  000AE8  0012               	return	
  5508  000AEA                     __end_ofi2_recv_msg:
  5509                           	opt stack 0
  5510                           pclatu	equ	0xFFB
  5511                           pclath	equ	0xFFA
  5512                           tblptru	equ	0xFF8
  5513                           tblptrh	equ	0xFF7
  5514                           tblptrl	equ	0xFF6
  5515                           tablat	equ	0xFF5
  5516                           prodh	equ	0xFF4
  5517                           prodl	equ	0xFF3
  5518                           intcon	equ	0xFF2
  5519                           postinc0	equ	0xFEE
  5520                           fsr0h	equ	0xFEA
  5521                           fsr0l	equ	0xFE9
  5522                           wreg	equ	0xFE8
  5523                           indf1	equ	0xFE7
  5524                           fsr1h	equ	0xFE2
  5525                           fsr1l	equ	0xFE1
  5526                           bsr	equ	0xFE0
  5527                           indf2	equ	0xFDF
  5528                           postinc2	equ	0xFDE
  5529                           postdec2	equ	0xFDD
  5530                           fsr2h	equ	0xFDA
  5531                           fsr2l	equ	0xFD9
  5532                           status	equ	0xFD8
  5533                           
  5534 ;; *************** function _i2c_int_handler *****************
  5535 ;; Defined at:
  5536 ;;		line 100 in file "../src/my_i2c.c"
  5537 ;; Parameters:    Size  Location     Type
  5538 ;;		None
  5539 ;; Auto vars:     Size  Location     Type
  5540 ;;  error_buf       3   27[BANK0 ] unsigned char [3]
  5541 ;;  data_read       1   35[BANK0 ] unsigned char 
  5542 ;;  msg_ready       1   34[BANK0 ] unsigned char 
  5543 ;;  msg_to_send     1   33[BANK0 ] unsigned char 
  5544 ;;  i2c_data        1   32[BANK0 ] unsigned char 
  5545 ;;  overrun_erro    1   31[BANK0 ] unsigned char 
  5546 ;;  data_written    1   30[BANK0 ] unsigned char 
  5547 ;; Return value:  Size  Location     Type
  5548 ;;		None               void
  5549 ;; Registers used:
  5550 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5551 ;; Tracked objects:
  5552 ;;		On entry : 0/0
  5553 ;;		On exit  : 0/0
  5554 ;;		Unchanged: 0/0
  5555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5557 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5558 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5559 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5560 ;;Total ram usage:       10 bytes
  5561 ;; Hardware stack levels used:    1
  5562 ;; Hardware stack levels required when called:    3
  5563 ;; This function calls:
  5564 ;;		_ToMainHigh_sendmsg
  5565 ;;		_handle_start
  5566 ;; This function is called by:
  5567 ;;		_InterruptHandlerHigh
  5568 ;; This function uses a non-reentrant model
  5569 ;;
  5570                           
  5571                           	psect	text38
  5572  0000D2                     __ptext38:
  5573                           	opt stack 0
  5574  0000D2                     _i2c_int_handler:
  5575                           	opt stack 17
  5576                           
  5577                           ;my_i2c.c: 104: LATD = 0x10;
  5578                           
  5579                           ; BSR set to: 0
  5580                           ;incstack = 0
  5581  0000D2  0E10               	movlw	16
  5582  0000D4  6E8C               	movwf	3980,c	;volatile
  5583                           
  5584                           ;my_i2c.c: 109: unsigned char i2c_data;
  5585                           ;my_i2c.c: 110: unsigned char data_read = 0;
  5586  0000D6  0E00               	movlw	0
  5587  0000D8  0100               	movlb	0	; () banked
  5588  0000DA  6FC0               	movwf	i2c_int_handler@data_read& (0+255),b
  5589                           
  5590                           ;my_i2c.c: 111: unsigned char data_written = 0;
  5591  0000DC  0E00               	movlw	0
  5592  0000DE  0100               	movlb	0	; () banked
  5593  0000E0  6FBB               	movwf	i2c_int_handler@data_written& (0+255),b
  5594                           
  5595                           ;my_i2c.c: 112: unsigned char msg_ready = 0;
  5596  0000E2  0E00               	movlw	0
  5597  0000E4  0100               	movlb	0	; () banked
  5598  0000E6  6FBF               	movwf	i2c_int_handler@msg_ready& (0+255),b
  5599                           
  5600                           ;my_i2c.c: 113: unsigned char msg_to_send = 0;
  5601  0000E8  0E00               	movlw	0
  5602  0000EA  0100               	movlb	0	; () banked
  5603  0000EC  6FBE               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  5604                           
  5605                           ;my_i2c.c: 114: unsigned char overrun_error = 0;
  5606  0000EE  0E00               	movlw	0
  5607  0000F0  0100               	movlb	0	; () banked
  5608  0000F2  6FBC               	movwf	i2c_int_handler@overrun_error& (0+255),b
  5609                           
  5610                           ; BSR set to: 0
  5611                           ;my_i2c.c: 115: unsigned char error_buf[3];
  5612                           ;my_i2c.c: 118: if (SSPCON1bits.SSPOV == 1) {
  5613  0000F4  ACC6               	btfss	4038,6,c	;volatile
  5614  0000F6  D024               	goto	i2l2979
  5615                           
  5616                           ; BSR set to: 0
  5617                           ;my_i2c.c: 119: SSPCON1bits.SSPOV = 0;
  5618  0000F8  9CC6               	bcf	4038,6,c	;volatile
  5619                           
  5620                           ; BSR set to: 0
  5621                           ;my_i2c.c: 123: ic_ptr->status = 0x5;
  5622  0000FA  0100               	movlb	0	; () banked
  5623  0000FC  EE20 F00C          	lfsr	2,12
  5624  000100  0100               	movlb	0	; () banked
  5625  000102  51CF               	movf	_ic_ptr& (0+255),w,b
  5626  000104  26D9               	addwf	fsr2l,f,c
  5627  000106  0100               	movlb	0	; () banked
  5628  000108  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  5629  00010A  22DA               	addwfc	fsr2h,f,c
  5630  00010C  0E05               	movlw	5
  5631  00010E  6EDF               	movwf	indf2,c
  5632                           
  5633                           ; BSR set to: 0
  5634                           ;my_i2c.c: 124: overrun_error = 1;
  5635  000110  0E01               	movlw	1
  5636  000112  0100               	movlb	0	; () banked
  5637  000114  6FBC               	movwf	i2c_int_handler@overrun_error& (0+255),b
  5638                           
  5639                           ; BSR set to: 0
  5640                           ;my_i2c.c: 125: ic_ptr->error_count++;
  5641  000116  0100               	movlb	0	; () banked
  5642  000118  EE20 F00E          	lfsr	2,14
  5643  00011C  0100               	movlb	0	; () banked
  5644  00011E  51CF               	movf	_ic_ptr& (0+255),w,b
  5645  000120  26D9               	addwf	fsr2l,f,c
  5646  000122  0100               	movlb	0	; () banked
  5647  000124  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  5648  000126  22DA               	addwfc	fsr2h,f,c
  5649  000128  2ADF               	incf	indf2,f,c
  5650                           
  5651                           ; BSR set to: 0
  5652                           ;my_i2c.c: 126: ic_ptr->error_code = 0x4;
  5653  00012A  0100               	movlb	0	; () banked
  5654  00012C  EE20 F00D          	lfsr	2,13
  5655  000130  0100               	movlb	0	; () banked
  5656  000132  51CF               	movf	_ic_ptr& (0+255),w,b
  5657  000134  26D9               	addwf	fsr2l,f,c
  5658  000136  0100               	movlb	0	; () banked
  5659  000138  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  5660  00013A  22DA               	addwfc	fsr2h,f,c
  5661  00013C  0E04               	movlw	4
  5662  00013E  6EDF               	movwf	indf2,c
  5663  000140                     i2l2979:
  5664                           
  5665                           ; BSR set to: 0
  5666                           ;my_i2c.c: 127: }
  5667                           ;my_i2c.c: 129: if (SSPSTATbits.BF == 1) {
  5668  000140  A0C7               	btfss	4039,0,c	;volatile
  5669  000142  D005               	goto	i2l2985
  5670                           
  5671                           ; BSR set to: 0
  5672                           ;my_i2c.c: 130: i2c_data = SSPBUF;
  5673  000144  CFC9 F0BD          	movff	4041,i2c_int_handler@i2c_data	;volatile
  5674                           
  5675                           ; BSR set to: 0
  5676                           ;my_i2c.c: 131: data_read = 1;
  5677  000148  0E01               	movlw	1
  5678  00014A  0100               	movlb	0	; () banked
  5679  00014C  6FC0               	movwf	i2c_int_handler@data_read& (0+255),b
  5680  00014E                     i2l2985:
  5681                           
  5682                           ; BSR set to: 0
  5683                           ;my_i2c.c: 132: }
  5684                           ;my_i2c.c: 134: if (!overrun_error) {
  5685  00014E  0100               	movlb	0	; () banked
  5686  000150  67BC               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  5687  000152  D19F               	goto	i2l285
  5688  000154  D188               	goto	i2l3073
  5689  000156                     i2l287:
  5690                           
  5691                           ; BSR set to: 0
  5692                           ;my_i2c.c: 137: {
  5693                           ;my_i2c.c: 139: if (SSPSTATbits.S == 1) {
  5694  000156  A6C7               	btfss	4039,3,c	;volatile
  5695  000158  D19C               	goto	i2l285
  5696                           
  5697                           ; BSR set to: 0
  5698                           ;my_i2c.c: 140: handle_start(data_read);
  5699  00015A  0100               	movlb	0	; () banked
  5700  00015C  51C0               	movf	i2c_int_handler@data_read& (0+255),w,b
  5701  00015E  ECE3  F006         	call	_handle_start
  5702                           
  5703                           ;my_i2c.c: 142: if (ic_ptr->status == 0x8) {
  5704  000162  0100               	movlb	0	; () banked
  5705  000164  EE20 F00C          	lfsr	2,12
  5706  000168  0100               	movlb	0	; () banked
  5707  00016A  51CF               	movf	_ic_ptr& (0+255),w,b
  5708  00016C  26D9               	addwf	fsr2l,f,c
  5709  00016E  0100               	movlb	0	; () banked
  5710  000170  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  5711  000172  22DA               	addwfc	fsr2h,f,c
  5712  000174  0E08               	movlw	8
  5713  000176  62DF               	cpfseq	indf2,c
  5714  000178  D18C               	goto	i2l285
  5715                           
  5716                           ; BSR set to: 0
  5717                           ;my_i2c.c: 143: data_read = 0;
  5718  00017A  0E00               	movlw	0
  5719  00017C  0100               	movlb	0	; () banked
  5720  00017E  6FC0               	movwf	i2c_int_handler@data_read& (0+255),b
  5721                           
  5722                           ;my_i2c.c: 144: msg_to_send = 1;
  5723  000180  0E01               	movlw	1
  5724  000182  0100               	movlb	0	; () banked
  5725  000184  6FBE               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  5726  000186  D185               	goto	i2l285
  5727  000188                     i2l291:
  5728                           
  5729                           ; BSR set to: 0
  5730                           ;my_i2c.c: 150: {
  5731                           ;my_i2c.c: 152: if (SSPSTATbits.P == 1) {
  5732  000188  A8C7               	btfss	4039,4,c	;volatile
  5733  00018A  D02A               	goto	i2l3005
  5734                           
  5735                           ; BSR set to: 0
  5736                           ;my_i2c.c: 155: ic_ptr->event_count++;
  5737  00018C  0100               	movlb	0	; () banked
  5738  00018E  EE20 F00B          	lfsr	2,11
  5739  000192  0100               	movlb	0	; () banked
  5740  000194  51CF               	movf	_ic_ptr& (0+255),w,b
  5741  000196  26D9               	addwf	fsr2l,f,c
  5742  000198  0100               	movlb	0	; () banked
  5743  00019A  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  5744  00019C  22DA               	addwfc	fsr2h,f,c
  5745  00019E  2ADF               	incf	indf2,f,c
  5746                           
  5747                           ; BSR set to: 0
  5748                           ;my_i2c.c: 156: if (data_read) {
  5749  0001A0  0100               	movlb	0	; () banked
  5750  0001A2  51C0               	movf	i2c_int_handler@data_read& (0+255),w,b
  5751  0001A4  B4D8               	btfsc	status,2,c
  5752  0001A6  D154               	goto	L8
  5753                           
  5754                           ; BSR set to: 0
  5755                           ;my_i2c.c: 157: if (SSPSTATbits.D_A == 0) {
  5756  0001A8  BAC7               	btfsc	4039,5,c	;volatile
  5757  0001AA  D004               	goto	i2l3003
  5758                           
  5759                           ; BSR set to: 0
  5760                           ;my_i2c.c: 158: msg_ready = 1;
  5761  0001AC  0E01               	movlw	1
  5762  0001AE  0100               	movlb	0	; () banked
  5763  0001B0  6FBF               	movwf	i2c_int_handler@msg_ready& (0+255),b
  5764                           
  5765                           ;my_i2c.c: 159: } else {
  5766  0001B2  D14E               	goto	L8
  5767  0001B4                     i2l3003:
  5768                           
  5769                           ; BSR set to: 0
  5770                           ;my_i2c.c: 160: ic_ptr->error_count++;
  5771  0001B4  0100               	movlb	0	; () banked
  5772  0001B6  EE20 F00E          	lfsr	2,14
  5773  0001BA  0100               	movlb	0	; () banked
  5774  0001BC  51CF               	movf	_ic_ptr& (0+255),w,b
  5775  0001BE  26D9               	addwf	fsr2l,f,c
  5776  0001C0  0100               	movlb	0	; () banked
  5777  0001C2  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  5778  0001C4  22DA               	addwfc	fsr2h,f,c
  5779  0001C6  2ADF               	incf	indf2,f,c
  5780                           
  5781                           ;my_i2c.c: 161: ic_ptr->error_code = 0x6;
  5782  0001C8  0100               	movlb	0	; () banked
  5783  0001CA  EE20 F00D          	lfsr	2,13
  5784  0001CE  0100               	movlb	0	; () banked
  5785  0001D0  51CF               	movf	_ic_ptr& (0+255),w,b
  5786  0001D2  26D9               	addwf	fsr2l,f,c
  5787  0001D4  0100               	movlb	0	; () banked
  5788  0001D6  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  5789  0001D8  22DA               	addwfc	fsr2h,f,c
  5790  0001DA  0E06               	movlw	6
  5791  0001DC  6EDF               	movwf	indf2,c
  5792                           
  5793                           ; BSR set to: 0
  5794  0001DE  D138               	goto	L8
  5795  0001E0                     i2l3005:
  5796                           
  5797                           ; BSR set to: 0
  5798  0001E0  0100               	movlb	0	; () banked
  5799  0001E2  51C0               	movf	i2c_int_handler@data_read& (0+255),w,b
  5800  0001E4  B4D8               	btfsc	status,2,c
  5801  0001E6  D155               	goto	i2l285
  5802                           
  5803                           ; BSR set to: 0
  5804                           ;my_i2c.c: 166: ic_ptr->event_count++;
  5805  0001E8  0100               	movlb	0	; () banked
  5806  0001EA  EE20 F00B          	lfsr	2,11
  5807  0001EE  0100               	movlb	0	; () banked
  5808  0001F0  51CF               	movf	_ic_ptr& (0+255),w,b
  5809  0001F2  26D9               	addwf	fsr2l,f,c
  5810  0001F4  0100               	movlb	0	; () banked
  5811  0001F6  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  5812  0001F8  22DA               	addwfc	fsr2h,f,c
  5813  0001FA  2ADF               	incf	indf2,f,c
  5814                           
  5815                           ; BSR set to: 0
  5816                           ;my_i2c.c: 167: if (SSPSTATbits.D_A == 0) {
  5817  0001FC  BAC7               	btfsc	4039,5,c	;volatile
  5818  0001FE  D019               	goto	i2l3021
  5819                           
  5820                           ; BSR set to: 0
  5821                           ;my_i2c.c: 168: if (SSPSTATbits.R_W == 0) {
  5822  000200  B4C7               	btfsc	4039,2,c	;volatile
  5823  000202  D00B               	goto	i2l3015
  5824                           
  5825                           ; BSR set to: 0
  5826                           ;my_i2c.c: 169: ic_ptr->status = 0x7;
  5827  000204  0100               	movlb	0	; () banked
  5828  000206  EE20 F00C          	lfsr	2,12
  5829  00020A  0100               	movlb	0	; () banked
  5830  00020C  51CF               	movf	_ic_ptr& (0+255),w,b
  5831  00020E  26D9               	addwf	fsr2l,f,c
  5832  000210  0100               	movlb	0	; () banked
  5833  000212  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  5834  000214  22DA               	addwfc	fsr2h,f,c
  5835  000216  0E07               	movlw	7
  5836  000218  D071               	goto	L6
  5837  00021A                     i2l3015:
  5838                           
  5839                           ; BSR set to: 0
  5840                           ;my_i2c.c: 171: ic_ptr->status = 0x8;
  5841  00021A  0100               	movlb	0	; () banked
  5842  00021C  EE20 F00C          	lfsr	2,12
  5843  000220  0100               	movlb	0	; () banked
  5844  000222  51CF               	movf	_ic_ptr& (0+255),w,b
  5845  000224  26D9               	addwf	fsr2l,f,c
  5846  000226  0100               	movlb	0	; () banked
  5847  000228  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  5848  00022A  22DA               	addwfc	fsr2h,f,c
  5849  00022C  0E08               	movlw	8
  5850  00022E  6EDF               	movwf	indf2,c
  5851  000230  D108               	goto	L5
  5852  000232                     i2l3021:
  5853                           
  5854                           ; BSR set to: 0
  5855                           ;my_i2c.c: 177: ic_ptr->error_count++;
  5856  000232  0100               	movlb	0	; () banked
  5857  000234  EE20 F00E          	lfsr	2,14
  5858  000238  0100               	movlb	0	; () banked
  5859  00023A  51CF               	movf	_ic_ptr& (0+255),w,b
  5860  00023C  26D9               	addwf	fsr2l,f,c
  5861  00023E  0100               	movlb	0	; () banked
  5862  000240  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  5863  000242  22DA               	addwfc	fsr2h,f,c
  5864  000244  2ADF               	incf	indf2,f,c
  5865                           
  5866                           ;my_i2c.c: 178: ic_ptr->status = 0x5;
  5867  000246  0100               	movlb	0	; () banked
  5868  000248  EE20 F00C          	lfsr	2,12
  5869  00024C  0100               	movlb	0	; () banked
  5870  00024E  51CF               	movf	_ic_ptr& (0+255),w,b
  5871  000250  26D9               	addwf	fsr2l,f,c
  5872  000252  0100               	movlb	0	; () banked
  5873  000254  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  5874  000256  22DA               	addwfc	fsr2h,f,c
  5875  000258  0E05               	movlw	5
  5876  00025A  6EDF               	movwf	indf2,c
  5877                           
  5878                           ;my_i2c.c: 179: ic_ptr->error_code = 0x6;
  5879  00025C  0100               	movlb	0	; () banked
  5880  00025E  EE20 F00D          	lfsr	2,13
  5881  000262  0100               	movlb	0	; () banked
  5882  000264  51CF               	movf	_ic_ptr& (0+255),w,b
  5883  000266  26D9               	addwf	fsr2l,f,c
  5884  000268  0100               	movlb	0	; () banked
  5885  00026A  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  5886  00026C  22DA               	addwfc	fsr2h,f,c
  5887  00026E  0E06               	movlw	6
  5888  000270  D045               	goto	L6
  5889  000272                     i2l3023:
  5890                           
  5891                           ; BSR set to: 0
  5892                           ;my_i2c.c: 185: {
  5893                           ;my_i2c.c: 186: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  5894  000272  0100               	movlb	0	; () banked
  5895  000274  EE20 F01A          	lfsr	2,26
  5896  000278  0100               	movlb	0	; () banked
  5897  00027A  51CF               	movf	_ic_ptr& (0+255),w,b
  5898  00027C  26D9               	addwf	fsr2l,f,c
  5899  00027E  0100               	movlb	0	; () banked
  5900  000280  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  5901  000282  22DA               	addwfc	fsr2h,f,c
  5902  000284  50DF               	movf	indf2,w,c
  5903  000286  0100               	movlb	0	; () banked
  5904  000288  6FB7               	movwf	??_i2c_int_handler& (0+255),b
  5905  00028A  0100               	movlb	0	; () banked
  5906  00028C  EE20 F019          	lfsr	2,25
  5907  000290  0100               	movlb	0	; () banked
  5908  000292  51CF               	movf	_ic_ptr& (0+255),w,b
  5909  000294  26D9               	addwf	fsr2l,f,c
  5910  000296  0100               	movlb	0	; () banked
  5911  000298  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  5912  00029A  22DA               	addwfc	fsr2h,f,c
  5913  00029C  50DF               	movf	indf2,w,c
  5914  00029E  0100               	movlb	0	; () banked
  5915  0002A0  5DB7               	subwf	??_i2c_int_handler& (0+255),w,b
  5916  0002A2  B0D8               	btfsc	status,0,c
  5917  0002A4  D0D5               	goto	L8
  5918                           
  5919                           ; BSR set to: 0
  5920                           ;my_i2c.c: 187: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  5921  0002A6  0100               	movlb	0	; () banked
  5922  0002A8  EE20 F01A          	lfsr	2,26
  5923  0002AC  0100               	movlb	0	; () banked
  5924  0002AE  51CF               	movf	_ic_ptr& (0+255),w,b
  5925  0002B0  26D9               	addwf	fsr2l,f,c
  5926  0002B2  0100               	movlb	0	; () banked
  5927  0002B4  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  5928  0002B6  22DA               	addwfc	fsr2h,f,c
  5929  0002B8  50DF               	movf	indf2,w,c
  5930  0002BA  0100               	movlb	0	; () banked
  5931  0002BC  6FB7               	movwf	??_i2c_int_handler& (0+255),b
  5932  0002BE  0100               	movlb	0	; () banked
  5933  0002C0  51B7               	movf	??_i2c_int_handler& (0+255),w,b
  5934  0002C2  0D01               	mullw	1
  5935  0002C4  0E0F               	movlw	15
  5936  0002C6  26F3               	addwf	prodl,f,c
  5937  0002C8  0E00               	movlw	0
  5938  0002CA  22F4               	addwfc	prodh,f,c
  5939  0002CC  50F3               	movf	prodl,w,c
  5940  0002CE  0100               	movlb	0	; () banked
  5941  0002D0  25CF               	addwf	_ic_ptr& (0+255),w,b
  5942  0002D2  6ED9               	movwf	fsr2l,c
  5943  0002D4  50F4               	movf	prodh,w,c
  5944  0002D6  0100               	movlb	0	; () banked
  5945  0002D8  21D0               	addwfc	(_ic_ptr+1)& (0+255),w,b
  5946  0002DA  6EDA               	movwf	fsr2h,c
  5947  0002DC  50DF               	movf	indf2,w,c
  5948  0002DE  6EC9               	movwf	4041,c	;volatile
  5949                           
  5950                           ; BSR set to: 0
  5951                           ;my_i2c.c: 188: ic_ptr->outbufind++;
  5952  0002E0  0100               	movlb	0	; () banked
  5953  0002E2  EE20 F01A          	lfsr	2,26
  5954  0002E6  0100               	movlb	0	; () banked
  5955  0002E8  51CF               	movf	_ic_ptr& (0+255),w,b
  5956  0002EA  26D9               	addwf	fsr2l,f,c
  5957  0002EC  0100               	movlb	0	; () banked
  5958  0002EE  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  5959  0002F0  22DA               	addwfc	fsr2h,f,c
  5960  0002F2  2ADF               	incf	indf2,f,c
  5961                           
  5962                           ; BSR set to: 0
  5963                           ;my_i2c.c: 189: data_written = 1;
  5964  0002F4  0E01               	movlw	1
  5965  0002F6  0100               	movlb	0	; () banked
  5966  0002F8  6FBB               	movwf	i2c_int_handler@data_written& (0+255),b
  5967                           
  5968                           ;my_i2c.c: 190: } else {
  5969  0002FA  D0CB               	goto	i2l285
  5970  0002FC                     L6:
  5971  0002FC  6EDF               	movwf	indf2,c
  5972  0002FE  D0C9               	goto	i2l285
  5973  000300                     i2l305:
  5974                           
  5975                           ; BSR set to: 0
  5976                           ;my_i2c.c: 197: {
  5977                           ;my_i2c.c: 199: if (SSPSTATbits.P == 1) {
  5978  000300  A8C7               	btfss	4039,4,c	;volatile
  5979  000302  D05A               	goto	i2l3051
  5980                           
  5981                           ; BSR set to: 0
  5982                           ;my_i2c.c: 201: ic_ptr->event_count++;
  5983  000304  0100               	movlb	0	; () banked
  5984  000306  EE20 F00B          	lfsr	2,11
  5985  00030A  0100               	movlb	0	; () banked
  5986  00030C  51CF               	movf	_ic_ptr& (0+255),w,b
  5987  00030E  26D9               	addwf	fsr2l,f,c
  5988  000310  0100               	movlb	0	; () banked
  5989  000312  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  5990  000314  22DA               	addwfc	fsr2h,f,c
  5991  000316  2ADF               	incf	indf2,f,c
  5992                           
  5993                           ; BSR set to: 0
  5994                           ;my_i2c.c: 202: if (data_read) {
  5995  000318  0100               	movlb	0	; () banked
  5996  00031A  51C0               	movf	i2c_int_handler@data_read& (0+255),w,b
  5997  00031C  B4D8               	btfsc	status,2,c
  5998  00031E  D048               	goto	i2l3047
  5999                           
  6000                           ; BSR set to: 0
  6001                           ;my_i2c.c: 203: if (SSPSTATbits.D_A == 1) {
  6002  000320  AAC7               	btfss	4039,5,c	;volatile
  6003  000322  D025               	goto	i2l3045
  6004                           
  6005                           ; BSR set to: 0
  6006                           ;my_i2c.c: 204: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  6007  000324  0100               	movlb	0	; () banked
  6008  000326  EE20 F00A          	lfsr	2,10
  6009  00032A  0100               	movlb	0	; () banked
  6010  00032C  51CF               	movf	_ic_ptr& (0+255),w,b
  6011  00032E  26D9               	addwf	fsr2l,f,c
  6012  000330  0100               	movlb	0	; () banked
  6013  000332  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  6014  000334  22DA               	addwfc	fsr2h,f,c
  6015  000336  50DF               	movf	indf2,w,c
  6016  000338  0100               	movlb	0	; () banked
  6017  00033A  6FB7               	movwf	??_i2c_int_handler& (0+255),b
  6018  00033C  0100               	movlb	0	; () banked
  6019  00033E  51B7               	movf	??_i2c_int_handler& (0+255),w,b
  6020  000340  0D01               	mullw	1
  6021  000342  50F3               	movf	prodl,w,c
  6022  000344  0100               	movlb	0	; () banked
  6023  000346  25CF               	addwf	_ic_ptr& (0+255),w,b
  6024  000348  6ED9               	movwf	fsr2l,c
  6025  00034A  50F4               	movf	prodh,w,c
  6026  00034C  0100               	movlb	0	; () banked
  6027  00034E  21D0               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6028  000350  6EDA               	movwf	fsr2h,c
  6029  000352  0100               	movlb	0	; () banked
  6030  000354  C0BD  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  6031                           
  6032                           ; BSR set to: 0
  6033                           ;my_i2c.c: 205: ic_ptr->buflen++;
  6034  000358  0100               	movlb	0	; () banked
  6035  00035A  EE20 F00A          	lfsr	2,10
  6036  00035E  0100               	movlb	0	; () banked
  6037  000360  51CF               	movf	_ic_ptr& (0+255),w,b
  6038  000362  26D9               	addwf	fsr2l,f,c
  6039  000364  0100               	movlb	0	; () banked
  6040  000366  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  6041  000368  22DA               	addwfc	fsr2h,f,c
  6042  00036A  2ADF               	incf	indf2,f,c
  6043  00036C  D021               	goto	i2l3047
  6044  00036E                     i2l3045:
  6045                           
  6046                           ; BSR set to: 0
  6047                           ;my_i2c.c: 208: ic_ptr->error_count++;
  6048  00036E  0100               	movlb	0	; () banked
  6049  000370  EE20 F00E          	lfsr	2,14
  6050  000374  0100               	movlb	0	; () banked
  6051  000376  51CF               	movf	_ic_ptr& (0+255),w,b
  6052  000378  26D9               	addwf	fsr2l,f,c
  6053  00037A  0100               	movlb	0	; () banked
  6054  00037C  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  6055  00037E  22DA               	addwfc	fsr2h,f,c
  6056  000380  2ADF               	incf	indf2,f,c
  6057                           
  6058                           ;my_i2c.c: 209: ic_ptr->error_code = 0x6;
  6059  000382  0100               	movlb	0	; () banked
  6060  000384  EE20 F00D          	lfsr	2,13
  6061  000388  0100               	movlb	0	; () banked
  6062  00038A  51CF               	movf	_ic_ptr& (0+255),w,b
  6063  00038C  26D9               	addwf	fsr2l,f,c
  6064  00038E  0100               	movlb	0	; () banked
  6065  000390  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  6066  000392  22DA               	addwfc	fsr2h,f,c
  6067  000394  0E06               	movlw	6
  6068  000396  6EDF               	movwf	indf2,c
  6069                           
  6070                           ;my_i2c.c: 210: ic_ptr->status = 0x5;
  6071  000398  0100               	movlb	0	; () banked
  6072  00039A  EE20 F00C          	lfsr	2,12
  6073  00039E  0100               	movlb	0	; () banked
  6074  0003A0  51CF               	movf	_ic_ptr& (0+255),w,b
  6075  0003A2  26D9               	addwf	fsr2l,f,c
  6076  0003A4  0100               	movlb	0	; () banked
  6077  0003A6  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  6078  0003A8  22DA               	addwfc	fsr2h,f,c
  6079  0003AA  0E05               	movlw	5
  6080  0003AC  6EDF               	movwf	indf2,c
  6081  0003AE  D050               	goto	L8
  6082  0003B0                     i2l3047:
  6083                           
  6084                           ; BSR set to: 0
  6085                           ;my_i2c.c: 213: msg_ready = 1;
  6086  0003B0  0E01               	movlw	1
  6087  0003B2  0100               	movlb	0	; () banked
  6088  0003B4  6FBF               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6089                           
  6090                           ; BSR set to: 0
  6091  0003B6  D04C               	goto	L8
  6092  0003B8                     i2l3051:
  6093                           
  6094                           ; BSR set to: 0
  6095  0003B8  0100               	movlb	0	; () banked
  6096  0003BA  51C0               	movf	i2c_int_handler@data_read& (0+255),w,b
  6097  0003BC  B4D8               	btfsc	status,2,c
  6098  0003BE  D069               	goto	i2l285
  6099                           
  6100                           ; BSR set to: 0
  6101                           ;my_i2c.c: 217: ic_ptr->event_count++;
  6102  0003C0  0100               	movlb	0	; () banked
  6103  0003C2  EE20 F00B          	lfsr	2,11
  6104  0003C6  0100               	movlb	0	; () banked
  6105  0003C8  51CF               	movf	_ic_ptr& (0+255),w,b
  6106  0003CA  26D9               	addwf	fsr2l,f,c
  6107  0003CC  0100               	movlb	0	; () banked
  6108  0003CE  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  6109  0003D0  22DA               	addwfc	fsr2h,f,c
  6110  0003D2  2ADF               	incf	indf2,f,c
  6111                           
  6112                           ; BSR set to: 0
  6113                           ;my_i2c.c: 218: if (SSPSTATbits.D_A == 1) {
  6114  0003D4  AAC7               	btfss	4039,5,c	;volatile
  6115  0003D6  D025               	goto	i2l313
  6116                           
  6117                           ; BSR set to: 0
  6118                           ;my_i2c.c: 219: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  6119  0003D8  0100               	movlb	0	; () banked
  6120  0003DA  EE20 F00A          	lfsr	2,10
  6121  0003DE  0100               	movlb	0	; () banked
  6122  0003E0  51CF               	movf	_ic_ptr& (0+255),w,b
  6123  0003E2  26D9               	addwf	fsr2l,f,c
  6124  0003E4  0100               	movlb	0	; () banked
  6125  0003E6  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  6126  0003E8  22DA               	addwfc	fsr2h,f,c
  6127  0003EA  50DF               	movf	indf2,w,c
  6128  0003EC  0100               	movlb	0	; () banked
  6129  0003EE  6FB7               	movwf	??_i2c_int_handler& (0+255),b
  6130  0003F0  0100               	movlb	0	; () banked
  6131  0003F2  51B7               	movf	??_i2c_int_handler& (0+255),w,b
  6132  0003F4  0D01               	mullw	1
  6133  0003F6  50F3               	movf	prodl,w,c
  6134  0003F8  0100               	movlb	0	; () banked
  6135  0003FA  25CF               	addwf	_ic_ptr& (0+255),w,b
  6136  0003FC  6ED9               	movwf	fsr2l,c
  6137  0003FE  50F4               	movf	prodh,w,c
  6138  000400  0100               	movlb	0	; () banked
  6139  000402  21D0               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6140  000404  6EDA               	movwf	fsr2h,c
  6141  000406  0100               	movlb	0	; () banked
  6142  000408  C0BD  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  6143                           
  6144                           ; BSR set to: 0
  6145                           ;my_i2c.c: 220: ic_ptr->buflen++;
  6146  00040C  0100               	movlb	0	; () banked
  6147  00040E  EE20 F00A          	lfsr	2,10
  6148  000412  0100               	movlb	0	; () banked
  6149  000414  51CF               	movf	_ic_ptr& (0+255),w,b
  6150  000416  26D9               	addwf	fsr2l,f,c
  6151  000418  0100               	movlb	0	; () banked
  6152  00041A  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  6153  00041C  22DA               	addwfc	fsr2h,f,c
  6154  00041E  2ADF               	incf	indf2,f,c
  6155                           
  6156                           ;my_i2c.c: 221: } else {
  6157  000420  D038               	goto	i2l285
  6158  000422                     i2l313:
  6159                           
  6160                           ; BSR set to: 0
  6161                           ;my_i2c.c: 222: if (SSPSTATbits.R_W == 1) {
  6162  000422  A4C7               	btfss	4039,2,c	;volatile
  6163  000424  D6C7               	goto	i2l3003
  6164                           
  6165                           ; BSR set to: 0
  6166                           ;my_i2c.c: 223: ic_ptr->status = 0x8;
  6167  000426  0100               	movlb	0	; () banked
  6168  000428  EE20 F00C          	lfsr	2,12
  6169  00042C  0100               	movlb	0	; () banked
  6170  00042E  51CF               	movf	_ic_ptr& (0+255),w,b
  6171  000430  26D9               	addwf	fsr2l,f,c
  6172  000432  0100               	movlb	0	; () banked
  6173  000434  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  6174  000436  22DA               	addwfc	fsr2h,f,c
  6175  000438  0E08               	movlw	8
  6176  00043A  6EDF               	movwf	indf2,c
  6177                           
  6178                           ; BSR set to: 0
  6179                           ;my_i2c.c: 224: msg_ready = 1;
  6180  00043C  0E01               	movlw	1
  6181  00043E  0100               	movlb	0	; () banked
  6182  000440  6FBF               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6183  000442                     L5:
  6184                           
  6185                           ; BSR set to: 0
  6186                           ;my_i2c.c: 225: msg_to_send = 1;
  6187  000442  0E01               	movlw	1
  6188  000444  0100               	movlb	0	; () banked
  6189  000446  6FBE               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6190                           
  6191                           ; BSR set to: 0
  6192                           ;my_i2c.c: 227: data_read = 0;
  6193  000448  0E00               	movlw	0
  6194  00044A  0100               	movlb	0	; () banked
  6195  00044C  6FC0               	movwf	i2c_int_handler@data_read& (0+255),b
  6196                           
  6197                           ;my_i2c.c: 228: } else {
  6198  00044E  D021               	goto	i2l285
  6199  000450                     L8:
  6200                           
  6201                           ;my_i2c.c: 231: ic_ptr->status = 0x5;
  6202  000450  0100               	movlb	0	; () banked
  6203  000452  EE20 F00C          	lfsr	2,12
  6204  000456  0100               	movlb	0	; () banked
  6205  000458  51CF               	movf	_ic_ptr& (0+255),w,b
  6206  00045A  26D9               	addwf	fsr2l,f,c
  6207  00045C  0100               	movlb	0	; () banked
  6208  00045E  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  6209  000460  22DA               	addwfc	fsr2h,f,c
  6210  000462  0E05               	movlw	5
  6211  000464  D74B               	goto	L6
  6212  000466                     i2l3073:
  6213                           
  6214                           ; BSR set to: 0
  6215  000466  0100               	movlb	0	; () banked
  6216  000468  EE20 F00C          	lfsr	2,12
  6217  00046C  0100               	movlb	0	; () banked
  6218  00046E  51CF               	movf	_ic_ptr& (0+255),w,b
  6219  000470  26D9               	addwf	fsr2l,f,c
  6220  000472  0100               	movlb	0	; () banked
  6221  000474  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  6222  000476  22DA               	addwfc	fsr2h,f,c
  6223  000478  50DF               	movf	indf2,w,c
  6224                           
  6225                           ; Switch size 1, requested type "space"
  6226                           ; Number of cases is 4, Range of values is 5 to 8
  6227                           ; switch strategies available:
  6228                           ; Name         Instructions Cycles
  6229                           ; simple_byte           13     7 (average)
  6230                           ;	Chosen strategy is simple_byte
  6231  00047A  0A05               	xorlw	5	; case 5
  6232  00047C  B4D8               	btfsc	status,2,c
  6233  00047E  D66B               	goto	i2l287
  6234  000480  0A03               	xorlw	3	; case 6
  6235  000482  B4D8               	btfsc	status,2,c
  6236  000484  D681               	goto	i2l291
  6237  000486  0A01               	xorlw	1	; case 7
  6238  000488  B4D8               	btfsc	status,2,c
  6239  00048A  D73A               	goto	i2l305
  6240  00048C  0A0F               	xorlw	15	; case 8
  6241  00048E  B4D8               	btfsc	status,2,c
  6242  000490  D6F0               	goto	i2l3023
  6243  000492                     i2l285:
  6244                           
  6245                           ; BSR set to: 0
  6246                           ;my_i2c.c: 238: }
  6247                           ;my_i2c.c: 241: if (data_read || data_written) {
  6248  000492  0100               	movlb	0	; () banked
  6249  000494  67C0               	tstfsz	i2c_int_handler@data_read& (0+255),b
  6250  000496  D004               	goto	i2l319
  6251                           
  6252                           ; BSR set to: 0
  6253  000498  0100               	movlb	0	; () banked
  6254  00049A  51BB               	movf	i2c_int_handler@data_written& (0+255),w,b
  6255  00049C  B4D8               	btfsc	status,2,c
  6256  00049E  D002               	goto	i2l3079
  6257  0004A0                     i2l319:
  6258                           
  6259                           ; BSR set to: 0
  6260                           ;my_i2c.c: 243: if (SSPCON1bits.CKP == 0) {
  6261  0004A0  A8C6               	btfss	4038,4,c	;volatile
  6262                           
  6263                           ; BSR set to: 0
  6264                           ;my_i2c.c: 244: SSPCON1bits.CKP = 1;
  6265  0004A2  88C6               	bsf	4038,4,c	;volatile
  6266  0004A4                     i2l3079:
  6267                           
  6268                           ; BSR set to: 0
  6269                           ;my_i2c.c: 245: }
  6270                           ;my_i2c.c: 246: }
  6271                           ;my_i2c.c: 249: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  6272  0004A4  0100               	movlb	0	; () banked
  6273  0004A6  EE20 F00A          	lfsr	2,10
  6274  0004AA  0100               	movlb	0	; () banked
  6275  0004AC  51CF               	movf	_ic_ptr& (0+255),w,b
  6276  0004AE  26D9               	addwf	fsr2l,f,c
  6277  0004B0  0100               	movlb	0	; () banked
  6278  0004B2  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  6279  0004B4  22DA               	addwfc	fsr2h,f,c
  6280  0004B6  0E08               	movlw	8
  6281  0004B8  64DF               	cpfsgt	indf2,c
  6282  0004BA  D023               	goto	i2l3085
  6283                           
  6284                           ; BSR set to: 0
  6285  0004BC  0100               	movlb	0	; () banked
  6286  0004BE  67BF               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  6287  0004C0  D020               	goto	i2l3085
  6288                           
  6289                           ; BSR set to: 0
  6290                           ;my_i2c.c: 250: ic_ptr->status = 0x5;
  6291  0004C2  0100               	movlb	0	; () banked
  6292  0004C4  EE20 F00C          	lfsr	2,12
  6293  0004C8  0100               	movlb	0	; () banked
  6294  0004CA  51CF               	movf	_ic_ptr& (0+255),w,b
  6295  0004CC  26D9               	addwf	fsr2l,f,c
  6296  0004CE  0100               	movlb	0	; () banked
  6297  0004D0  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  6298  0004D2  22DA               	addwfc	fsr2h,f,c
  6299  0004D4  0E05               	movlw	5
  6300  0004D6  6EDF               	movwf	indf2,c
  6301                           
  6302                           ;my_i2c.c: 251: ic_ptr->error_count++;
  6303  0004D8  0100               	movlb	0	; () banked
  6304  0004DA  EE20 F00E          	lfsr	2,14
  6305  0004DE  0100               	movlb	0	; () banked
  6306  0004E0  51CF               	movf	_ic_ptr& (0+255),w,b
  6307  0004E2  26D9               	addwf	fsr2l,f,c
  6308  0004E4  0100               	movlb	0	; () banked
  6309  0004E6  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  6310  0004E8  22DA               	addwfc	fsr2h,f,c
  6311  0004EA  2ADF               	incf	indf2,f,c
  6312                           
  6313                           ;my_i2c.c: 252: ic_ptr->error_code = 0x7;
  6314  0004EC  0100               	movlb	0	; () banked
  6315  0004EE  EE20 F00D          	lfsr	2,13
  6316  0004F2  0100               	movlb	0	; () banked
  6317  0004F4  51CF               	movf	_ic_ptr& (0+255),w,b
  6318  0004F6  26D9               	addwf	fsr2l,f,c
  6319  0004F8  0100               	movlb	0	; () banked
  6320  0004FA  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  6321  0004FC  22DA               	addwfc	fsr2h,f,c
  6322  0004FE  0E07               	movlw	7
  6323  000500  6EDF               	movwf	indf2,c
  6324  000502                     i2l3085:
  6325                           
  6326                           ; BSR set to: 0
  6327                           ;my_i2c.c: 253: }
  6328                           ;my_i2c.c: 255: if (msg_ready) {
  6329  000502  0100               	movlb	0	; () banked
  6330  000504  51BF               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  6331  000506  B4D8               	btfsc	status,2,c
  6332  000508  D03F               	goto	i2l3093
  6333                           
  6334                           ; BSR set to: 0
  6335                           ;my_i2c.c: 256: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  6336  00050A  0100               	movlb	0	; () banked
  6337  00050C  EE20 F00B          	lfsr	2,11
  6338  000510  0100               	movlb	0	; () banked
  6339  000512  51CF               	movf	_ic_ptr& (0+255),w,b
  6340  000514  26D9               	addwf	fsr2l,f,c
  6341  000516  0100               	movlb	0	; () banked
  6342  000518  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  6343  00051A  22DA               	addwfc	fsr2h,f,c
  6344  00051C  0100               	movlb	0	; () banked
  6345  00051E  EE10 F00A          	lfsr	1,10
  6346  000522  0100               	movlb	0	; () banked
  6347  000524  51CF               	movf	_ic_ptr& (0+255),w,b
  6348  000526  26E1               	addwf	fsr1l,f,c
  6349  000528  0100               	movlb	0	; () banked
  6350  00052A  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  6351  00052C  22E2               	addwfc	fsr1h,f,c
  6352  00052E  50E7               	movf	indf1,w,c
  6353  000530  0100               	movlb	0	; () banked
  6354  000532  6FB7               	movwf	??_i2c_int_handler& (0+255),b
  6355  000534  0100               	movlb	0	; () banked
  6356  000536  51B7               	movf	??_i2c_int_handler& (0+255),w,b
  6357  000538  0D01               	mullw	1
  6358  00053A  50F3               	movf	prodl,w,c
  6359  00053C  0100               	movlb	0	; () banked
  6360  00053E  25CF               	addwf	_ic_ptr& (0+255),w,b
  6361  000540  6EE1               	movwf	fsr1l,c
  6362  000542  50F4               	movf	prodh,w,c
  6363  000544  0100               	movlb	0	; () banked
  6364  000546  21D0               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6365  000548  6EE2               	movwf	fsr1h,c
  6366  00054A  CFDF FFE7          	movff	indf2,indf1
  6367                           
  6368                           ; BSR set to: 0
  6369                           ;my_i2c.c: 257: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  6370  00054E  0E28               	movlw	40
  6371  000550  0100               	movlb	0	; () banked
  6372  000552  6FB3               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  6373  000554  0100               	movlb	0	; () banked
  6374  000556  C0D0  F0B5         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  6375  00055A  0100               	movlb	0	; () banked
  6376  00055C  C0CF  F0B4         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  6377  000560  0100               	movlb	0	; () banked
  6378  000562  EE20 F00A          	lfsr	2,10
  6379  000566  0100               	movlb	0	; () banked
  6380  000568  51CF               	movf	_ic_ptr& (0+255),w,b
  6381  00056A  26D9               	addwf	fsr2l,f,c
  6382  00056C  0100               	movlb	0	; () banked
  6383  00056E  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  6384  000570  22DA               	addwfc	fsr2h,f,c
  6385  000572  50DF               	movf	indf2,w,c
  6386  000574  0100               	movlb	0	; () banked
  6387  000576  6FB7               	movwf	??_i2c_int_handler& (0+255),b
  6388  000578  0100               	movlb	0	; () banked
  6389  00057A  29B7               	incf	??_i2c_int_handler& (0+255),w,b
  6390  00057C  EC3B  F00B         	call	_ToMainHigh_sendmsg
  6391                           
  6392                           ;my_i2c.c: 258: ic_ptr->buflen = 0;
  6393  000580  0100               	movlb	0	; () banked
  6394  000582  EE20 F00A          	lfsr	2,10
  6395  000586  D041               	goto	L7
  6396  000588                     i2l3093:
  6397                           
  6398                           ; BSR set to: 0
  6399  000588  0100               	movlb	0	; () banked
  6400  00058A  EE20 F00E          	lfsr	2,14
  6401  00058E  0100               	movlb	0	; () banked
  6402  000590  51CF               	movf	_ic_ptr& (0+255),w,b
  6403  000592  26D9               	addwf	fsr2l,f,c
  6404  000594  0100               	movlb	0	; () banked
  6405  000596  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  6406  000598  22DA               	addwfc	fsr2h,f,c
  6407  00059A  50DF               	movf	indf2,w,c
  6408  00059C  B4D8               	btfsc	status,2,c
  6409  00059E  D03D               	goto	i2l3101
  6410                           
  6411                           ; BSR set to: 0
  6412                           ;my_i2c.c: 260: error_buf[0] = ic_ptr->error_count;
  6413  0005A0  0100               	movlb	0	; () banked
  6414  0005A2  EE20 F00E          	lfsr	2,14
  6415  0005A6  0100               	movlb	0	; () banked
  6416  0005A8  51CF               	movf	_ic_ptr& (0+255),w,b
  6417  0005AA  26D9               	addwf	fsr2l,f,c
  6418  0005AC  0100               	movlb	0	; () banked
  6419  0005AE  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  6420  0005B0  22DA               	addwfc	fsr2h,f,c
  6421  0005B2  50DF               	movf	indf2,w,c
  6422  0005B4  0100               	movlb	0	; () banked
  6423  0005B6  6FB8               	movwf	i2c_int_handler@error_buf& (0+255),b
  6424                           
  6425                           ;my_i2c.c: 261: error_buf[1] = ic_ptr->error_code;
  6426  0005B8  0100               	movlb	0	; () banked
  6427  0005BA  EE20 F00D          	lfsr	2,13
  6428  0005BE  0100               	movlb	0	; () banked
  6429  0005C0  51CF               	movf	_ic_ptr& (0+255),w,b
  6430  0005C2  26D9               	addwf	fsr2l,f,c
  6431  0005C4  0100               	movlb	0	; () banked
  6432  0005C6  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  6433  0005C8  22DA               	addwfc	fsr2h,f,c
  6434  0005CA  50DF               	movf	indf2,w,c
  6435  0005CC  0100               	movlb	0	; () banked
  6436  0005CE  6FB9               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  6437                           
  6438                           ;my_i2c.c: 262: error_buf[2] = ic_ptr->event_count;
  6439  0005D0  0100               	movlb	0	; () banked
  6440  0005D2  EE20 F00B          	lfsr	2,11
  6441  0005D6  0100               	movlb	0	; () banked
  6442  0005D8  51CF               	movf	_ic_ptr& (0+255),w,b
  6443  0005DA  26D9               	addwf	fsr2l,f,c
  6444  0005DC  0100               	movlb	0	; () banked
  6445  0005DE  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  6446  0005E0  22DA               	addwfc	fsr2h,f,c
  6447  0005E2  50DF               	movf	indf2,w,c
  6448  0005E4  0100               	movlb	0	; () banked
  6449  0005E6  6FBA               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  6450                           
  6451                           ; BSR set to: 0
  6452                           ;my_i2c.c: 263: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  6453  0005E8  0E29               	movlw	41
  6454  0005EA  0100               	movlb	0	; () banked
  6455  0005EC  6FB3               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  6456  0005EE  0100               	movlb	0	; () banked
  6457  0005F0  0E00               	movlw	high i2c_int_handler@error_buf
  6458  0005F2  0100               	movlb	0	; () banked
  6459  0005F4  6FB5               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  6460  0005F6  0100               	movlb	0	; () banked
  6461  0005F8  0EB8               	movlw	low i2c_int_handler@error_buf
  6462  0005FA  0100               	movlb	0	; () banked
  6463  0005FC  6FB4               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  6464  0005FE  0E03               	movlw	3
  6465  000600  EC3B  F00B         	call	_ToMainHigh_sendmsg
  6466                           
  6467                           ;my_i2c.c: 264: ic_ptr->error_count = 0;
  6468  000604  0100               	movlb	0	; () banked
  6469  000606  EE20 F00E          	lfsr	2,14
  6470  00060A                     L7:
  6471  00060A  0100               	movlb	0	; () banked
  6472  00060C  51CF               	movf	_ic_ptr& (0+255),w,b
  6473  00060E  26D9               	addwf	fsr2l,f,c
  6474  000610  0100               	movlb	0	; () banked
  6475  000612  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  6476  000614  22DA               	addwfc	fsr2h,f,c
  6477  000616  0E00               	movlw	0
  6478  000618  6EDF               	movwf	indf2,c
  6479  00061A                     i2l3101:
  6480                           
  6481                           ; BSR set to: 0
  6482                           ;my_i2c.c: 265: }
  6483                           ;my_i2c.c: 266: if (msg_to_send) {
  6484  00061A  0100               	movlb	0	; () banked
  6485  00061C  51BE               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  6486  00061E  B4D8               	btfsc	status,2,c
  6487  000620  D00F               	goto	i2l3107
  6488                           
  6489                           ; BSR set to: 0
  6490                           ;my_i2c.c: 268: ToMainHigh_sendmsg(0, 42, (void *) ic_ptr->buffer);
  6491  000622  0E2A               	movlw	42
  6492  000624  0100               	movlb	0	; () banked
  6493  000626  6FB3               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  6494  000628  0100               	movlb	0	; () banked
  6495  00062A  C0D0  F0B5         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  6496  00062E  0100               	movlb	0	; () banked
  6497  000630  C0CF  F0B4         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  6498  000634  0E00               	movlw	0
  6499  000636  EC3B  F00B         	call	_ToMainHigh_sendmsg
  6500                           
  6501                           ;my_i2c.c: 269: msg_to_send = 0;
  6502  00063A  0E00               	movlw	0
  6503  00063C  0100               	movlb	0	; () banked
  6504  00063E  6FBE               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6505  000640                     i2l3107:
  6506                           
  6507                           ; BSR set to: 0
  6508                           ;my_i2c.c: 270: }
  6509                           ;my_i2c.c: 274: LATD = 0x00;
  6510  000640  0E00               	movlw	0
  6511  000642  6E8C               	movwf	3980,c	;volatile
  6512                           
  6513                           ; BSR set to: 0
  6514  000644  0012               	return	
  6515  000646                     __end_of_i2c_int_handler:
  6516                           	opt stack 0
  6517                           pclatu	equ	0xFFB
  6518                           pclath	equ	0xFFA
  6519                           tblptru	equ	0xFF8
  6520                           tblptrh	equ	0xFF7
  6521                           tblptrl	equ	0xFF6
  6522                           tablat	equ	0xFF5
  6523                           prodh	equ	0xFF4
  6524                           prodl	equ	0xFF3
  6525                           intcon	equ	0xFF2
  6526                           postinc0	equ	0xFEE
  6527                           fsr0h	equ	0xFEA
  6528                           fsr0l	equ	0xFE9
  6529                           wreg	equ	0xFE8
  6530                           indf1	equ	0xFE7
  6531                           fsr1h	equ	0xFE2
  6532                           fsr1l	equ	0xFE1
  6533                           bsr	equ	0xFE0
  6534                           indf2	equ	0xFDF
  6535                           postinc2	equ	0xFDE
  6536                           postdec2	equ	0xFDD
  6537                           fsr2h	equ	0xFDA
  6538                           fsr2l	equ	0xFD9
  6539                           status	equ	0xFD8
  6540                           
  6541 ;; *************** function _handle_start *****************
  6542 ;; Defined at:
  6543 ;;		line 71 in file "../src/my_i2c.c"
  6544 ;; Parameters:    Size  Location     Type
  6545 ;;  data_read       1    wreg     unsigned char 
  6546 ;; Auto vars:     Size  Location     Type
  6547 ;;  data_read       1    0[BANK0 ] unsigned char 
  6548 ;; Return value:  Size  Location     Type
  6549 ;;		None               void
  6550 ;; Registers used:
  6551 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6552 ;; Tracked objects:
  6553 ;;		On entry : 0/0
  6554 ;;		On exit  : 0/0
  6555 ;;		Unchanged: 0/0
  6556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6558 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6560 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6561 ;;Total ram usage:        1 bytes
  6562 ;; Hardware stack levels used:    1
  6563 ;; This function calls:
  6564 ;;		Nothing
  6565 ;; This function is called by:
  6566 ;;		_i2c_int_handler
  6567 ;; This function uses a non-reentrant model
  6568 ;;
  6569                           
  6570                           	psect	text39
  6571  000DC6                     __ptext39:
  6572                           	opt stack 0
  6573  000DC6                     _handle_start:
  6574                           	opt stack 19
  6575                           
  6576                           ; BSR set to: 0
  6577                           ;incstack = 0
  6578                           ;handle_start@data_read stored from wreg
  6579  000DC6  0100               	movlb	0	; () banked
  6580  000DC8  6F9D               	movwf	handle_start@data_read& (0+255),b
  6581                           
  6582                           ; BSR set to: 0
  6583                           ;my_i2c.c: 72: ic_ptr->event_count = 1;
  6584  000DCA  0100               	movlb	0	; () banked
  6585  000DCC  EE20 F00B          	lfsr	2,11
  6586  000DD0  0100               	movlb	0	; () banked
  6587  000DD2  51CF               	movf	_ic_ptr& (0+255),w,b
  6588  000DD4  26D9               	addwf	fsr2l,f,c
  6589  000DD6  0100               	movlb	0	; () banked
  6590  000DD8  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  6591  000DDA  22DA               	addwfc	fsr2h,f,c
  6592  000DDC  0E01               	movlw	1
  6593  000DDE  6EDF               	movwf	indf2,c
  6594                           
  6595                           ;my_i2c.c: 73: ic_ptr->buflen = 0;
  6596  000DE0  0100               	movlb	0	; () banked
  6597  000DE2  EE20 F00A          	lfsr	2,10
  6598  000DE6  0100               	movlb	0	; () banked
  6599  000DE8  51CF               	movf	_ic_ptr& (0+255),w,b
  6600  000DEA  26D9               	addwf	fsr2l,f,c
  6601  000DEC  0100               	movlb	0	; () banked
  6602  000DEE  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  6603  000DF0  22DA               	addwfc	fsr2h,f,c
  6604  000DF2  0E00               	movlw	0
  6605  000DF4  6EDF               	movwf	indf2,c
  6606                           
  6607                           ; BSR set to: 0
  6608                           ;my_i2c.c: 75: if (data_read) {
  6609  000DF6  0100               	movlb	0	; () banked
  6610  000DF8  519D               	movf	handle_start@data_read& (0+255),w,b
  6611  000DFA  B4D8               	btfsc	status,2,c
  6612  000DFC  D03D               	goto	i2l2929
  6613                           
  6614                           ; BSR set to: 0
  6615                           ;my_i2c.c: 76: if (SSPSTATbits.D_A == 1) {
  6616  000DFE  AAC7               	btfss	4039,5,c	;volatile
  6617  000E00  D021               	goto	i2l275
  6618                           
  6619                           ; BSR set to: 0
  6620                           ;my_i2c.c: 79: ic_ptr->status = 0x5;
  6621  000E02  0100               	movlb	0	; () banked
  6622  000E04  EE20 F00C          	lfsr	2,12
  6623  000E08  0100               	movlb	0	; () banked
  6624  000E0A  51CF               	movf	_ic_ptr& (0+255),w,b
  6625  000E0C  26D9               	addwf	fsr2l,f,c
  6626  000E0E  0100               	movlb	0	; () banked
  6627  000E10  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  6628  000E12  22DA               	addwfc	fsr2h,f,c
  6629  000E14  0E05               	movlw	5
  6630  000E16  6EDF               	movwf	indf2,c
  6631                           
  6632                           ;my_i2c.c: 80: ic_ptr->error_count++;
  6633  000E18  0100               	movlb	0	; () banked
  6634  000E1A  EE20 F00E          	lfsr	2,14
  6635  000E1E  0100               	movlb	0	; () banked
  6636  000E20  51CF               	movf	_ic_ptr& (0+255),w,b
  6637  000E22  26D9               	addwf	fsr2l,f,c
  6638  000E24  0100               	movlb	0	; () banked
  6639  000E26  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  6640  000E28  22DA               	addwfc	fsr2h,f,c
  6641  000E2A  2ADF               	incf	indf2,f,c
  6642                           
  6643                           ;my_i2c.c: 81: ic_ptr->error_code = 0x5;
  6644  000E2C  0100               	movlb	0	; () banked
  6645  000E2E  EE20 F00D          	lfsr	2,13
  6646  000E32  0100               	movlb	0	; () banked
  6647  000E34  51CF               	movf	_ic_ptr& (0+255),w,b
  6648  000E36  26D9               	addwf	fsr2l,f,c
  6649  000E38  0100               	movlb	0	; () banked
  6650  000E3A  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  6651  000E3C  22DA               	addwfc	fsr2h,f,c
  6652  000E3E  0E05               	movlw	5
  6653  000E40  6EDF               	movwf	indf2,c
  6654                           
  6655                           ;my_i2c.c: 82: } else {
  6656  000E42  0012               	return	
  6657  000E44                     i2l275:
  6658                           
  6659                           ; BSR set to: 0
  6660                           ;my_i2c.c: 83: if (SSPSTATbits.R_W == 1) {
  6661  000E44  A4C7               	btfss	4039,2,c	;volatile
  6662  000E46  D00C               	goto	i2l2927
  6663                           
  6664                           ; BSR set to: 0
  6665                           ;my_i2c.c: 84: ic_ptr->status = 0x8;
  6666  000E48  0100               	movlb	0	; () banked
  6667  000E4A  EE20 F00C          	lfsr	2,12
  6668  000E4E  0100               	movlb	0	; () banked
  6669  000E50  51CF               	movf	_ic_ptr& (0+255),w,b
  6670  000E52  26D9               	addwf	fsr2l,f,c
  6671  000E54  0100               	movlb	0	; () banked
  6672  000E56  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  6673  000E58  22DA               	addwfc	fsr2h,f,c
  6674  000E5A  0E08               	movlw	8
  6675  000E5C  6EDF               	movwf	indf2,c
  6676                           
  6677                           ;my_i2c.c: 85: } else {
  6678  000E5E  0012               	return	
  6679  000E60                     i2l2927:
  6680                           
  6681                           ; BSR set to: 0
  6682                           ;my_i2c.c: 86: ic_ptr->status = 0x7;
  6683  000E60  0100               	movlb	0	; () banked
  6684  000E62  EE20 F00C          	lfsr	2,12
  6685  000E66  0100               	movlb	0	; () banked
  6686  000E68  51CF               	movf	_ic_ptr& (0+255),w,b
  6687  000E6A  26D9               	addwf	fsr2l,f,c
  6688  000E6C  0100               	movlb	0	; () banked
  6689  000E6E  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  6690  000E70  22DA               	addwfc	fsr2h,f,c
  6691  000E72  0E07               	movlw	7
  6692  000E74  6EDF               	movwf	indf2,c
  6693  000E76  0012               	return	
  6694  000E78                     i2l2929:
  6695                           
  6696                           ; BSR set to: 0
  6697                           ;my_i2c.c: 90: ic_ptr->status = 0x6;
  6698  000E78  0100               	movlb	0	; () banked
  6699  000E7A  EE20 F00C          	lfsr	2,12
  6700  000E7E  0100               	movlb	0	; () banked
  6701  000E80  51CF               	movf	_ic_ptr& (0+255),w,b
  6702  000E82  26D9               	addwf	fsr2l,f,c
  6703  000E84  0100               	movlb	0	; () banked
  6704  000E86  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  6705  000E88  22DA               	addwfc	fsr2h,f,c
  6706  000E8A  0E06               	movlw	6
  6707  000E8C  6EDF               	movwf	indf2,c
  6708  000E8E  0012               	return	
  6709  000E90                     __end_of_handle_start:
  6710                           	opt stack 0
  6711                           pclatu	equ	0xFFB
  6712                           pclath	equ	0xFFA
  6713                           tblptru	equ	0xFF8
  6714                           tblptrh	equ	0xFF7
  6715                           tblptrl	equ	0xFF6
  6716                           tablat	equ	0xFF5
  6717                           prodh	equ	0xFF4
  6718                           prodl	equ	0xFF3
  6719                           intcon	equ	0xFF2
  6720                           postinc0	equ	0xFEE
  6721                           fsr0h	equ	0xFEA
  6722                           fsr0l	equ	0xFE9
  6723                           wreg	equ	0xFE8
  6724                           indf1	equ	0xFE7
  6725                           fsr1h	equ	0xFE2
  6726                           fsr1l	equ	0xFE1
  6727                           bsr	equ	0xFE0
  6728                           indf2	equ	0xFDF
  6729                           postinc2	equ	0xFDE
  6730                           postdec2	equ	0xFDD
  6731                           fsr2h	equ	0xFDA
  6732                           fsr2l	equ	0xFD9
  6733                           status	equ	0xFD8
  6734                           
  6735 ;; *************** function _ToMainHigh_sendmsg *****************
  6736 ;; Defined at:
  6737 ;;		line 126 in file "../src/messages.c"
  6738 ;; Parameters:    Size  Location     Type
  6739 ;;  length          1    wreg     unsigned char 
  6740 ;;  msgtype         1   22[BANK0 ] unsigned char 
  6741 ;;  data            2   23[BANK0 ] PTR void 
  6742 ;;		 -> NULL(0), timer0_int_handler@val(2), i2c_int_handler@error_buf(3), main@ic(28), 
  6743 ;; Auto vars:     Size  Location     Type
  6744 ;;  length          1   25[BANK0 ] unsigned char 
  6745 ;; Return value:  Size  Location     Type
  6746 ;;                  1    wreg      char 
  6747 ;; Registers used:
  6748 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6749 ;; Tracked objects:
  6750 ;;		On entry : 0/0
  6751 ;;		On exit  : 0/0
  6752 ;;		Unchanged: 0/0
  6753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6754 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6755 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6757 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6758 ;;Total ram usage:        4 bytes
  6759 ;; Hardware stack levels used:    1
  6760 ;; Hardware stack levels required when called:    2
  6761 ;; This function calls:
  6762 ;;		i2_send_msg
  6763 ;; This function is called by:
  6764 ;;		_i2c_int_handler
  6765 ;;		_timer0_int_handler
  6766 ;; This function uses a non-reentrant model
  6767 ;;
  6768                           
  6769                           	psect	text40
  6770  001676                     __ptext40:
  6771                           	opt stack 0
  6772  001676                     _ToMainHigh_sendmsg:
  6773                           	opt stack 17
  6774                           
  6775                           ; BSR set to: 0
  6776                           ;incstack = 0
  6777                           ;ToMainHigh_sendmsg@length stored from wreg
  6778  001676  0100               	movlb	0	; () banked
  6779  001678  6FB6               	movwf	ToMainHigh_sendmsg@length& (0+255),b
  6780                           
  6781                           ; BSR set to: 0
  6782                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  6783                           ;	Return value of _ToMainHigh_sendmsg is never used
  6784  00167A  0101               	movlb	1	; () banked
  6785  00167C  0E01               	movlw	high _ToMainHigh_MQ
  6786  00167E  0100               	movlb	0	; () banked
  6787  001680  6FA8               	movwf	(i2send_msg@qptr+1)& (0+255),b
  6788  001682  0101               	movlb	1	; () banked
  6789  001684  0E6C               	movlw	low _ToMainHigh_MQ
  6790  001686  0100               	movlb	0	; () banked
  6791  001688  6FA7               	movwf	i2send_msg@qptr& (0+255),b
  6792  00168A  C0B6  F0A9         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  6793  00168E  C0B3  F0AA         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  6794  001692  0100               	movlb	0	; () banked
  6795  001694  C0B5  F0AC         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  6796  001698  0100               	movlb	0	; () banked
  6797  00169A  C0B4  F0AB         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  6798  00169E  EC6D  F006         	call	i2_send_msg	;wreg free
  6799  0016A2  0012               	return	
  6800  0016A4                     __end_of_ToMainHigh_sendmsg:
  6801                           	opt stack 0
  6802                           pclatu	equ	0xFFB
  6803                           pclath	equ	0xFFA
  6804                           tblptru	equ	0xFF8
  6805                           tblptrh	equ	0xFF7
  6806                           tblptrl	equ	0xFF6
  6807                           tablat	equ	0xFF5
  6808                           prodh	equ	0xFF4
  6809                           prodl	equ	0xFF3
  6810                           intcon	equ	0xFF2
  6811                           postinc0	equ	0xFEE
  6812                           fsr0h	equ	0xFEA
  6813                           fsr0l	equ	0xFE9
  6814                           wreg	equ	0xFE8
  6815                           indf1	equ	0xFE7
  6816                           fsr1h	equ	0xFE2
  6817                           fsr1l	equ	0xFE1
  6818                           bsr	equ	0xFE0
  6819                           indf2	equ	0xFDF
  6820                           postinc2	equ	0xFDE
  6821                           postdec2	equ	0xFDD
  6822                           fsr2h	equ	0xFDA
  6823                           fsr2l	equ	0xFD9
  6824                           status	equ	0xFD8
  6825                           
  6826 ;; *************** function i2_send_msg *****************
  6827 ;; Defined at:
  6828 ;;		line 24 in file "../src/messages.c"
  6829 ;; Parameters:    Size  Location     Type
  6830 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  6831 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6832 ;;  length          1   12[BANK0 ] unsigned char 
  6833 ;;  msgtype         1   13[BANK0 ] unsigned char 
  6834 ;;  data            2   14[BANK0 ] PTR void 
  6835 ;;		 -> NULL(0), timer0_int_handler@val(2), i2c_int_handler@error_buf(3), main@t1thread_data(2), 
  6836 ;;		 -> main@ic(28), 
  6837 ;; Auto vars:     Size  Location     Type
  6838 ;;  send_msg        2   20[BANK0 ] PTR struct __msg
  6839 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6840 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6841 ;;  send_msg        2   17[BANK0 ] unsigned int 
  6842 ;;  send_msg        1   19[BANK0 ] unsigned char 
  6843 ;; Return value:  Size  Location     Type
  6844 ;;                  1    wreg      char 
  6845 ;; Registers used:
  6846 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6847 ;; Tracked objects:
  6848 ;;		On entry : 0/0
  6849 ;;		On exit  : 0/0
  6850 ;;		Unchanged: 0/0
  6851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6852 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6853 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6854 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6855 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6856 ;;Total ram usage:       12 bytes
  6857 ;; Hardware stack levels used:    1
  6858 ;; Hardware stack levels required when called:    1
  6859 ;; This function calls:
  6860 ;;		i2_memcpy
  6861 ;; This function is called by:
  6862 ;;		_ToMainHigh_sendmsg
  6863 ;; This function uses a non-reentrant model
  6864 ;;
  6865                           
  6866                           	psect	text41
  6867  000CDA                     __ptext41:
  6868                           	opt stack 0
  6869  000CDA                     i2_send_msg:
  6870                           	opt stack 17
  6871                           
  6872                           ;messages.c: 25: unsigned char slot;
  6873                           ;messages.c: 27: msg *qmsg;
  6874                           ;messages.c: 28: size_t tlength = length;
  6875                           
  6876                           ;incstack = 0
  6877  000CDA  0100               	movlb	0	; () banked
  6878  000CDC  C0A9  F0AE         	movff	i2send_msg@length,i2send_msg@tlength
  6879  000CE0  0100               	movlb	0	; () banked
  6880  000CE2  6BAF               	clrf	(i2send_msg@tlength+1)& (0+255),b
  6881                           
  6882                           ; BSR set to: 0
  6883                           ;messages.c: 38: slot = qptr->cur_write_ind;
  6884  000CE4  0100               	movlb	0	; () banked
  6885  000CE6  EE20 F034          	lfsr	2,52
  6886  000CEA  0100               	movlb	0	; () banked
  6887  000CEC  51A7               	movf	i2send_msg@qptr& (0+255),w,b
  6888  000CEE  26D9               	addwf	fsr2l,f,c
  6889  000CF0  0100               	movlb	0	; () banked
  6890  000CF2  51A8               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  6891  000CF4  22DA               	addwfc	fsr2h,f,c
  6892  000CF6  50DF               	movf	indf2,w,c
  6893  000CF8  0100               	movlb	0	; () banked
  6894  000CFA  6FB0               	movwf	i2send_msg@slot& (0+255),b
  6895                           
  6896                           ; BSR set to: 0
  6897                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  6898  000CFC  0100               	movlb	0	; () banked
  6899  000CFE  51B0               	movf	i2send_msg@slot& (0+255),w,b
  6900  000D00  0D0D               	mullw	13
  6901  000D02  50F3               	movf	prodl,w,c
  6902  000D04  0100               	movlb	0	; () banked
  6903  000D06  25A7               	addwf	i2send_msg@qptr& (0+255),w,b
  6904  000D08  0100               	movlb	0	; () banked
  6905  000D0A  6FB1               	movwf	i2send_msg@qmsg& (0+255),b
  6906  000D0C  50F4               	movf	prodh,w,c
  6907  000D0E  0100               	movlb	0	; () banked
  6908  000D10  21A8               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  6909  000D12  0100               	movlb	0	; () banked
  6910  000D14  6FB2               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  6911                           
  6912                           ; BSR set to: 0
  6913                           ;messages.c: 41: if (qmsg->full != 0) {
  6914  000D16  C0B1  FFD9         	movff	i2send_msg@qmsg,fsr2l
  6915  000D1A  C0B2  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  6916  000D1E  50DF               	movf	indf2,w,c
  6917  000D20  B4D8               	btfsc	status,2,c
  6918  000D22  D002               	goto	i2l2789
  6919                           
  6920                           ; BSR set to: 0
  6921                           ;messages.c: 42: return (-1);
  6922  000D24  0EFF               	movlw	255
  6923  000D26  0012               	return	
  6924  000D28                     i2l2789:
  6925                           
  6926                           ; BSR set to: 0
  6927                           ;messages.c: 43: }
  6928                           ;messages.c: 46: qmsg->length = length;
  6929  000D28  0100               	movlb	0	; () banked
  6930  000D2A  EE20 F001          	lfsr	2,1
  6931  000D2E  0100               	movlb	0	; () banked
  6932  000D30  51B1               	movf	i2send_msg@qmsg& (0+255),w,b
  6933  000D32  26D9               	addwf	fsr2l,f,c
  6934  000D34  0100               	movlb	0	; () banked
  6935  000D36  51B2               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  6936  000D38  22DA               	addwfc	fsr2h,f,c
  6937  000D3A  0100               	movlb	0	; () banked
  6938  000D3C  C0A9  FFDF         	movff	i2send_msg@length,indf2
  6939                           
  6940                           ;messages.c: 47: qmsg->msgtype = msgtype;
  6941  000D40  0100               	movlb	0	; () banked
  6942  000D42  EE20 F002          	lfsr	2,2
  6943  000D46  0100               	movlb	0	; () banked
  6944  000D48  51B1               	movf	i2send_msg@qmsg& (0+255),w,b
  6945  000D4A  26D9               	addwf	fsr2l,f,c
  6946  000D4C  0100               	movlb	0	; () banked
  6947  000D4E  51B2               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  6948  000D50  22DA               	addwfc	fsr2h,f,c
  6949  000D52  0100               	movlb	0	; () banked
  6950  000D54  C0AA  FFDF         	movff	i2send_msg@msgtype,indf2
  6951                           
  6952                           ; BSR set to: 0
  6953                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  6954  000D58  0E03               	movlw	3
  6955  000D5A  0100               	movlb	0	; () banked
  6956  000D5C  25B1               	addwf	i2send_msg@qmsg& (0+255),w,b
  6957  000D5E  0100               	movlb	0	; () banked
  6958  000D60  6F9D               	movwf	i2memcpy@d1& (0+255),b
  6959  000D62  0E00               	movlw	0
  6960  000D64  0100               	movlb	0	; () banked
  6961  000D66  21B2               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  6962  000D68  0100               	movlb	0	; () banked
  6963  000D6A  6F9E               	movwf	(i2memcpy@d1+1)& (0+255),b
  6964  000D6C  0100               	movlb	0	; () banked
  6965  000D6E  C0AC  F0A0         	movff	i2send_msg@data+1,i2memcpy@s1+1
  6966  000D72  0100               	movlb	0	; () banked
  6967  000D74  C0AB  F09F         	movff	i2send_msg@data,i2memcpy@s1
  6968  000D78  C0AE  F0A1         	movff	i2send_msg@tlength,i2memcpy@n
  6969  000D7C  C0AF  F0A2         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  6970  000D80  EC95  F009         	call	i2_memcpy	;wreg free
  6971                           
  6972                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  6973  000D84  0100               	movlb	0	; () banked
  6974  000D86  EE20 F034          	lfsr	2,52
  6975  000D8A  0100               	movlb	0	; () banked
  6976  000D8C  51A7               	movf	i2send_msg@qptr& (0+255),w,b
  6977  000D8E  26D9               	addwf	fsr2l,f,c
  6978  000D90  0100               	movlb	0	; () banked
  6979  000D92  51A8               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  6980  000D94  22DA               	addwfc	fsr2h,f,c
  6981  000D96  0100               	movlb	0	; () banked
  6982  000D98  EE10 F034          	lfsr	1,52
  6983  000D9C  0100               	movlb	0	; () banked
  6984  000D9E  51A7               	movf	i2send_msg@qptr& (0+255),w,b
  6985  000DA0  26E1               	addwf	fsr1l,f,c
  6986  000DA2  0100               	movlb	0	; () banked
  6987  000DA4  51A8               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  6988  000DA6  22E2               	addwfc	fsr1h,f,c
  6989  000DA8  50E7               	movf	indf1,w,c
  6990  000DAA  0100               	movlb	0	; () banked
  6991  000DAC  6FAD               	movwf	??i2_send_msg& (0+255),b
  6992  000DAE  0100               	movlb	0	; () banked
  6993  000DB0  29AD               	incf	??i2_send_msg& (0+255),w,b
  6994  000DB2  0B03               	andlw	3
  6995  000DB4  6EDF               	movwf	indf2,c
  6996                           
  6997                           ; BSR set to: 0
  6998                           ;messages.c: 59: qmsg->full = 1;
  6999  000DB6  C0B1  FFD9         	movff	i2send_msg@qmsg,fsr2l
  7000  000DBA  C0B2  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  7001  000DBE  0E01               	movlw	1
  7002  000DC0  6EDF               	movwf	indf2,c
  7003                           
  7004                           ; BSR set to: 0
  7005                           ;messages.c: 60: return (1);
  7006  000DC2  0E01               	movlw	1
  7007  000DC4  0012               	return	
  7008  000DC6                     __end_ofi2_send_msg:
  7009                           	opt stack 0
  7010                           pclatu	equ	0xFFB
  7011                           pclath	equ	0xFFA
  7012                           tblptru	equ	0xFF8
  7013                           tblptrh	equ	0xFF7
  7014                           tblptrl	equ	0xFF6
  7015                           tablat	equ	0xFF5
  7016                           prodh	equ	0xFF4
  7017                           prodl	equ	0xFF3
  7018                           intcon	equ	0xFF2
  7019                           postinc0	equ	0xFEE
  7020                           fsr0h	equ	0xFEA
  7021                           fsr0l	equ	0xFE9
  7022                           wreg	equ	0xFE8
  7023                           indf1	equ	0xFE7
  7024                           fsr1h	equ	0xFE2
  7025                           fsr1l	equ	0xFE1
  7026                           bsr	equ	0xFE0
  7027                           indf2	equ	0xFDF
  7028                           postinc2	equ	0xFDE
  7029                           postdec2	equ	0xFDD
  7030                           fsr2h	equ	0xFDA
  7031                           fsr2l	equ	0xFD9
  7032                           status	equ	0xFD8
  7033                           
  7034 ;; *************** function i2_memcpy *****************
  7035 ;; Defined at:
  7036 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  7037 ;; Parameters:    Size  Location     Type
  7038 ;;  d1              2    0[BANK0 ] PTR void 
  7039 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7040 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  7041 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  7042 ;;  s1              2    2[BANK0 ] PTR const void 
  7043 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  7044 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  7045 ;;		 -> NULL(0), timer0_int_handler@val(2), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  7046 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), 
  7047 ;;		 -> main@ic(28), 
  7048 ;;  n               2    4[BANK0 ] unsigned int 
  7049 ;; Auto vars:     Size  Location     Type
  7050 ;;  memcpy          2    8[BANK0 ] PTR const unsigned char 
  7051 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  7052 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  7053 ;;		 -> NULL(0), timer0_int_handler@val(2), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  7054 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), 
  7055 ;;		 -> main@ic(28), 
  7056 ;;  memcpy          2    6[BANK0 ] PTR unsigned char 
  7057 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7058 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  7059 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  7060 ;; Return value:  Size  Location     Type
  7061 ;;                  2    0[BANK0 ] PTR void 
  7062 ;; Registers used:
  7063 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7064 ;; Tracked objects:
  7065 ;;		On entry : 0/0
  7066 ;;		On exit  : 0/0
  7067 ;;		Unchanged: 0/0
  7068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7069 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7070 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7072 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7073 ;;Total ram usage:       10 bytes
  7074 ;; Hardware stack levels used:    1
  7075 ;; This function calls:
  7076 ;;		Nothing
  7077 ;; This function is called by:
  7078 ;;		i2_send_msg
  7079 ;;		i2_recv_msg
  7080 ;; This function uses a non-reentrant model
  7081 ;;
  7082                           
  7083                           	psect	text42
  7084  00132A                     __ptext42:
  7085                           	opt stack 0
  7086  00132A                     i2_memcpy:
  7087                           	opt stack 17
  7088                           
  7089                           ; BSR set to: 0
  7090                           ;incstack = 0
  7091  00132A  0100               	movlb	0	; () banked
  7092  00132C  C0A0  F0A6         	movff	i2memcpy@s1+1,i2memcpy@s+1
  7093  001330  0100               	movlb	0	; () banked
  7094  001332  C09F  F0A5         	movff	i2memcpy@s1,i2memcpy@s
  7095  001336  0100               	movlb	0	; () banked
  7096  001338  C09E  F0A4         	movff	i2memcpy@d1+1,i2memcpy@d+1
  7097  00133C  0100               	movlb	0	; () banked
  7098  00133E  C09D  F0A3         	movff	i2memcpy@d1,i2memcpy@d
  7099  001342  D010               	goto	i2l2747
  7100  001344                     i2l2741:
  7101                           
  7102                           ; BSR set to: 0
  7103  001344  C0A5  FFD9         	movff	i2memcpy@s,fsr2l
  7104  001348  C0A6  FFDA         	movff	i2memcpy@s+1,fsr2h
  7105  00134C  C0A3  FFE1         	movff	i2memcpy@d,fsr1l
  7106  001350  C0A4  FFE2         	movff	i2memcpy@d+1,fsr1h
  7107  001354  CFDF FFE7          	movff	indf2,indf1
  7108                           
  7109                           ; BSR set to: 0
  7110  001358  0100               	movlb	0	; () banked
  7111  00135A  4BA5               	infsnz	i2memcpy@s& (0+255),f,b
  7112  00135C  2BA6               	incf	(i2memcpy@s+1)& (0+255),f,b
  7113                           
  7114                           ; BSR set to: 0
  7115  00135E  0100               	movlb	0	; () banked
  7116  001360  4BA3               	infsnz	i2memcpy@d& (0+255),f,b
  7117  001362  2BA4               	incf	(i2memcpy@d+1)& (0+255),f,b
  7118  001364                     i2l2747:
  7119                           
  7120                           ; BSR set to: 0
  7121  001364  0100               	movlb	0	; () banked
  7122  001366  07A1               	decf	i2memcpy@n& (0+255),f,b
  7123  001368  A0D8               	btfss	status,0,c
  7124  00136A  07A2               	decf	(i2memcpy@n+1)& (0+255),f,b
  7125  00136C  0100               	movlb	0	; () banked
  7126  00136E  29A1               	incf	i2memcpy@n& (0+255),w,b
  7127  001370  B4D8               	btfsc	status,2,c
  7128  001372  29A2               	incf	(i2memcpy@n+1)& (0+255),w,b
  7129  001374  B4D8               	btfsc	status,2,c
  7130                           
  7131                           ; BSR set to: 0
  7132                           
  7133                           ; BSR set to: 0
  7134                           ;	Return value of i2_memcpy is never used
  7135  001376  0012               	return	
  7136  001378  D7E5               	goto	i2l2741
  7137  00137A                     __end_ofi2_memcpy:
  7138                           	opt stack 0
  7139                           pclatu	equ	0xFFB
  7140                           pclath	equ	0xFFA
  7141                           tblptru	equ	0xFF8
  7142                           tblptrh	equ	0xFF7
  7143                           tblptrl	equ	0xFF6
  7144                           tablat	equ	0xFF5
  7145                           prodh	equ	0xFF4
  7146                           prodl	equ	0xFF3
  7147                           intcon	equ	0xFF2
  7148                           postinc0	equ	0xFEE
  7149                           fsr0h	equ	0xFEA
  7150                           fsr0l	equ	0xFE9
  7151                           wreg	equ	0xFE8
  7152                           indf1	equ	0xFE7
  7153                           fsr1h	equ	0xFE2
  7154                           fsr1l	equ	0xFE1
  7155                           bsr	equ	0xFE0
  7156                           indf2	equ	0xFDF
  7157                           postinc2	equ	0xFDE
  7158                           postdec2	equ	0xFDD
  7159                           fsr2h	equ	0xFDA
  7160                           fsr2l	equ	0xFD9
  7161                           status	equ	0xFD8
  7162                           
  7163 ;; *************** function _SleepIfOkay *****************
  7164 ;; Defined at:
  7165 ;;		line 226 in file "../src/messages.c"
  7166 ;; Parameters:    Size  Location     Type
  7167 ;;		None
  7168 ;; Auto vars:     Size  Location     Type
  7169 ;;		None
  7170 ;; Return value:  Size  Location     Type
  7171 ;;		None               void
  7172 ;; Registers used:
  7173 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7174 ;; Tracked objects:
  7175 ;;		On entry : 0/0
  7176 ;;		On exit  : 0/0
  7177 ;;		Unchanged: 0/0
  7178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7183 ;;Total ram usage:        0 bytes
  7184 ;; Hardware stack levels used:    1
  7185 ;; Hardware stack levels required when called:    2
  7186 ;; This function calls:
  7187 ;;		_check_msg
  7188 ;;		_enter_sleep_mode
  7189 ;;		_in_high_int
  7190 ;;		_in_low_int
  7191 ;; This function is called by:
  7192 ;;		_InterruptHandlerHigh
  7193 ;; This function uses a non-reentrant model
  7194 ;;
  7195                           
  7196                           	psect	text43
  7197  001226                     __ptext43:
  7198                           	opt stack 0
  7199  001226                     _SleepIfOkay:
  7200                           	opt stack 18
  7201                           
  7202                           ;messages.c: 228: if (MQ_Main_Willing_to_block == 0) {
  7203                           
  7204                           ; BSR set to: 0
  7205                           ;incstack = 0
  7206  001226  662E               	tstfsz	_MQ_Main_Willing_to_block,c
  7207  001228  D001               	goto	i2l3125
  7208  00122A  0012               	return	
  7209  00122C                     i2l3125:
  7210                           
  7211                           ;messages.c: 230: }
  7212                           ;messages.c: 233: if (in_low_int()) {
  7213  00122C  ECFD  F009         	call	_in_low_int	;wreg free
  7214  001230  0100               	movlb	0	; () banked
  7215  001232  51A0               	movf	(?_in_low_int+1)& (0+255),w,b
  7216  001234  0100               	movlb	0	; () banked
  7217  001236  119F               	iorwf	?_in_low_int& (0+255),w,b
  7218  001238  A4D8               	btfss	status,2,c
  7219  00123A  0012               	return	
  7220                           
  7221                           ; BSR set to: 0
  7222                           ;messages.c: 235: }
  7223                           ;messages.c: 238: if (!in_high_int()) {
  7224                           
  7225                           ; BSR set to: 0
  7226                           
  7227                           ; BSR set to: 0
  7228                           ;messages.c: 234: return;
  7229  00123C  ECD1  F00B         	call	_in_high_int	;wreg free
  7230  001240  0100               	movlb	0	; () banked
  7231  001242  519E               	movf	(?_in_high_int+1)& (0+255),w,b
  7232  001244  0100               	movlb	0	; () banked
  7233  001246  119D               	iorwf	?_in_high_int& (0+255),w,b
  7234  001248  B4D8               	btfsc	status,2,c
  7235  00124A  0012               	return	
  7236                           
  7237                           ; BSR set to: 0
  7238                           ;messages.c: 240: }
  7239                           ;messages.c: 245: if (check_msg(&ToMainHigh_MQ)) {
  7240                           
  7241                           ; BSR set to: 0
  7242                           
  7243                           ; BSR set to: 0
  7244                           ;messages.c: 239: return;
  7245  00124C  0101               	movlb	1	; () banked
  7246  00124E  0E01               	movlw	high _ToMainHigh_MQ
  7247  001250  0100               	movlb	0	; () banked
  7248  001252  6F9E               	movwf	(check_msg@qptr+1)& (0+255),b
  7249  001254  0101               	movlb	1	; () banked
  7250  001256  0E6C               	movlw	low _ToMainHigh_MQ
  7251  001258  0100               	movlb	0	; () banked
  7252  00125A  6F9D               	movwf	check_msg@qptr& (0+255),b
  7253  00125C  ECF4  F00A         	call	_check_msg	;wreg free
  7254  001260  0900               	iorlw	0
  7255  001262  A4D8               	btfss	status,2,c
  7256  001264  0012               	return	
  7257                           
  7258                           ;messages.c: 247: }
  7259                           ;messages.c: 248: if (check_msg(&ToMainLow_MQ)) {
  7260                           
  7261                           ;messages.c: 246: return;
  7262  001266  0100               	movlb	0	; () banked
  7263  001268  0E00               	movlw	high _ToMainLow_MQ
  7264  00126A  0100               	movlb	0	; () banked
  7265  00126C  6F9E               	movwf	(check_msg@qptr+1)& (0+255),b
  7266  00126E  0100               	movlb	0	; () banked
  7267  001270  0E60               	movlw	low _ToMainLow_MQ
  7268  001272  0100               	movlb	0	; () banked
  7269  001274  6F9D               	movwf	check_msg@qptr& (0+255),b
  7270  001276  ECF4  F00A         	call	_check_msg	;wreg free
  7271  00127A  0900               	iorlw	0
  7272  00127C  B4D8               	btfsc	status,2,c
  7273                           
  7274                           ;messages.c: 250: }
  7275                           ;messages.c: 251: enter_sleep_mode();
  7276                           
  7277                           ;messages.c: 249: return;
  7278  00127E  ECE4  F00B         	call	_enter_sleep_mode	;wreg free
  7279  001282  0012               	return	
  7280  001284                     __end_of_SleepIfOkay:
  7281                           	opt stack 0
  7282                           pclatu	equ	0xFFB
  7283                           pclath	equ	0xFFA
  7284                           tblptru	equ	0xFF8
  7285                           tblptrh	equ	0xFF7
  7286                           tblptrl	equ	0xFF6
  7287                           tablat	equ	0xFF5
  7288                           prodh	equ	0xFF4
  7289                           prodl	equ	0xFF3
  7290                           intcon	equ	0xFF2
  7291                           postinc0	equ	0xFEE
  7292                           fsr0h	equ	0xFEA
  7293                           fsr0l	equ	0xFE9
  7294                           wreg	equ	0xFE8
  7295                           indf1	equ	0xFE7
  7296                           fsr1h	equ	0xFE2
  7297                           fsr1l	equ	0xFE1
  7298                           bsr	equ	0xFE0
  7299                           indf2	equ	0xFDF
  7300                           postinc2	equ	0xFDE
  7301                           postdec2	equ	0xFDD
  7302                           fsr2h	equ	0xFDA
  7303                           fsr2l	equ	0xFD9
  7304                           status	equ	0xFD8
  7305                           
  7306 ;; *************** function _in_low_int *****************
  7307 ;; Defined at:
  7308 ;;		line 33 in file "../src/interrupts.c"
  7309 ;; Parameters:    Size  Location     Type
  7310 ;;		None
  7311 ;; Auto vars:     Size  Location     Type
  7312 ;;		None
  7313 ;; Return value:  Size  Location     Type
  7314 ;;                  2    2[BANK0 ] int 
  7315 ;; Registers used:
  7316 ;;		wreg, status,2, status,0, cstack
  7317 ;; Tracked objects:
  7318 ;;		On entry : 0/0
  7319 ;;		On exit  : 0/0
  7320 ;;		Unchanged: 0/0
  7321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7322 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7325 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7326 ;;Total ram usage:        2 bytes
  7327 ;; Hardware stack levels used:    1
  7328 ;; Hardware stack levels required when called:    1
  7329 ;; This function calls:
  7330 ;;		_in_high_int
  7331 ;; This function is called by:
  7332 ;;		_SleepIfOkay
  7333 ;;		_in_main
  7334 ;; This function uses a non-reentrant model
  7335 ;;
  7336                           
  7337                           	psect	text44
  7338  0013FA                     __ptext44:
  7339                           	opt stack 0
  7340  0013FA                     _in_low_int:
  7341                           	opt stack 18
  7342                           
  7343                           ;interrupts.c: 34: if (INTCONbits.GIEL == 1) {
  7344                           
  7345                           ;incstack = 0
  7346  0013FA  ACF2               	btfss	intcon,6,c	;volatile
  7347  0013FC  D007               	goto	i2l2841
  7348                           
  7349                           ;interrupts.c: 35: return (0);
  7350  0013FE  0E00               	movlw	0
  7351  001400  0100               	movlb	0	; () banked
  7352  001402  6FA0               	movwf	(?_in_low_int+1)& (0+255),b
  7353  001404  0E00               	movlw	0
  7354  001406  0100               	movlb	0	; () banked
  7355  001408  6F9F               	movwf	?_in_low_int& (0+255),b
  7356  00140A  0012               	return	
  7357  00140C                     i2l2841:
  7358  00140C  ECD1  F00B         	call	_in_high_int	;wreg free
  7359  001410  0100               	movlb	0	; () banked
  7360  001412  519E               	movf	(?_in_high_int+1)& (0+255),w,b
  7361  001414  0100               	movlb	0	; () banked
  7362  001416  119D               	iorwf	?_in_high_int& (0+255),w,b
  7363  001418  B4D8               	btfsc	status,2,c
  7364  00141A  D007               	goto	i2l2849
  7365                           
  7366                           ; BSR set to: 0
  7367                           ;interrupts.c: 37: return (0);
  7368  00141C  0E00               	movlw	0
  7369  00141E  0100               	movlb	0	; () banked
  7370  001420  6FA0               	movwf	(?_in_low_int+1)& (0+255),b
  7371  001422  0E00               	movlw	0
  7372  001424  0100               	movlb	0	; () banked
  7373  001426  6F9F               	movwf	?_in_low_int& (0+255),b
  7374  001428  0012               	return	
  7375  00142A                     i2l2849:
  7376                           
  7377                           ; BSR set to: 0
  7378                           ;interrupts.c: 39: return (1);
  7379  00142A  0E00               	movlw	0
  7380  00142C  0100               	movlb	0	; () banked
  7381  00142E  6FA0               	movwf	(?_in_low_int+1)& (0+255),b
  7382  001430  0E01               	movlw	1
  7383  001432  0100               	movlb	0	; () banked
  7384  001434  6F9F               	movwf	?_in_low_int& (0+255),b
  7385  001436  0012               	return	
  7386  001438                     __end_of_in_low_int:
  7387                           	opt stack 0
  7388                           pclatu	equ	0xFFB
  7389                           pclath	equ	0xFFA
  7390                           tblptru	equ	0xFF8
  7391                           tblptrh	equ	0xFF7
  7392                           tblptrl	equ	0xFF6
  7393                           tablat	equ	0xFF5
  7394                           prodh	equ	0xFF4
  7395                           prodl	equ	0xFF3
  7396                           intcon	equ	0xFF2
  7397                           postinc0	equ	0xFEE
  7398                           fsr0h	equ	0xFEA
  7399                           fsr0l	equ	0xFE9
  7400                           wreg	equ	0xFE8
  7401                           indf1	equ	0xFE7
  7402                           fsr1h	equ	0xFE2
  7403                           fsr1l	equ	0xFE1
  7404                           bsr	equ	0xFE0
  7405                           indf2	equ	0xFDF
  7406                           postinc2	equ	0xFDE
  7407                           postdec2	equ	0xFDD
  7408                           fsr2h	equ	0xFDA
  7409                           fsr2l	equ	0xFD9
  7410                           status	equ	0xFD8
  7411                           
  7412 ;; *************** function _in_high_int *****************
  7413 ;; Defined at:
  7414 ;;		line 25 in file "../src/interrupts.c"
  7415 ;; Parameters:    Size  Location     Type
  7416 ;;		None
  7417 ;; Auto vars:     Size  Location     Type
  7418 ;;		None
  7419 ;; Return value:  Size  Location     Type
  7420 ;;                  2    0[BANK0 ] int 
  7421 ;; Registers used:
  7422 ;;		wreg, status,2
  7423 ;; Tracked objects:
  7424 ;;		On entry : 0/0
  7425 ;;		On exit  : 0/0
  7426 ;;		Unchanged: 0/0
  7427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7428 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7431 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7432 ;;Total ram usage:        2 bytes
  7433 ;; Hardware stack levels used:    1
  7434 ;; This function calls:
  7435 ;;		Nothing
  7436 ;; This function is called by:
  7437 ;;		_in_low_int
  7438 ;;		_SleepIfOkay
  7439 ;;		_in_main
  7440 ;; This function uses a non-reentrant model
  7441 ;;
  7442                           
  7443                           	psect	text45
  7444  0017A2                     __ptext45:
  7445                           	opt stack 0
  7446  0017A2                     _in_high_int:
  7447                           	opt stack 18
  7448                           
  7449                           ;interrupts.c: 26: return (!INTCONbits.GIEH);
  7450                           
  7451                           ; BSR set to: 0
  7452                           ;incstack = 0
  7453  0017A2  0E00               	movlw	0
  7454  0017A4  AEF2               	btfss	intcon,7,c	;volatile
  7455  0017A6  0E01               	movlw	1
  7456  0017A8  0100               	movlb	0	; () banked
  7457  0017AA  6F9D               	movwf	?_in_high_int& (0+255),b
  7458  0017AC  0100               	movlb	0	; () banked
  7459  0017AE  6B9E               	clrf	(?_in_high_int+1)& (0+255),b
  7460  0017B0  0012               	return	
  7461  0017B2                     __end_of_in_high_int:
  7462                           	opt stack 0
  7463                           pclatu	equ	0xFFB
  7464                           pclath	equ	0xFFA
  7465                           tblptru	equ	0xFF8
  7466                           tblptrh	equ	0xFF7
  7467                           tblptrl	equ	0xFF6
  7468                           tablat	equ	0xFF5
  7469                           prodh	equ	0xFF4
  7470                           prodl	equ	0xFF3
  7471                           intcon	equ	0xFF2
  7472                           postinc0	equ	0xFEE
  7473                           fsr0h	equ	0xFEA
  7474                           fsr0l	equ	0xFE9
  7475                           wreg	equ	0xFE8
  7476                           indf1	equ	0xFE7
  7477                           fsr1h	equ	0xFE2
  7478                           fsr1l	equ	0xFE1
  7479                           bsr	equ	0xFE0
  7480                           indf2	equ	0xFDF
  7481                           postinc2	equ	0xFDE
  7482                           postdec2	equ	0xFDD
  7483                           fsr2h	equ	0xFDA
  7484                           fsr2l	equ	0xFD9
  7485                           status	equ	0xFD8
  7486                           
  7487 ;; *************** function _enter_sleep_mode *****************
  7488 ;; Defined at:
  7489 ;;		line 202 in file "../src/messages.c"
  7490 ;; Parameters:    Size  Location     Type
  7491 ;;		None
  7492 ;; Auto vars:     Size  Location     Type
  7493 ;;		None
  7494 ;; Return value:  Size  Location     Type
  7495 ;;		None               void
  7496 ;; Registers used:
  7497 ;;		None
  7498 ;; Tracked objects:
  7499 ;;		On entry : 0/0
  7500 ;;		On exit  : 0/0
  7501 ;;		Unchanged: 0/0
  7502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7507 ;;Total ram usage:        0 bytes
  7508 ;; Hardware stack levels used:    1
  7509 ;; This function calls:
  7510 ;;		Nothing
  7511 ;; This function is called by:
  7512 ;;		_SleepIfOkay
  7513 ;; This function uses a non-reentrant model
  7514 ;;
  7515                           
  7516                           	psect	text46
  7517  0017C8                     __ptext46:
  7518                           	opt stack 0
  7519  0017C8                     _enter_sleep_mode:
  7520                           	opt stack 19
  7521                           
  7522                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  7523                           
  7524                           ; BSR set to: 0
  7525                           ;incstack = 0
  7526  0017C8  8ED3               	bsf	4051,7,c	;volatile
  7527  0017CA  0003               	sleep		;# 
  7528  0017CC  0012               	return	
  7529  0017CE                     __end_of_enter_sleep_mode:
  7530                           	opt stack 0
  7531                           pclatu	equ	0xFFB
  7532                           pclath	equ	0xFFA
  7533                           tblptru	equ	0xFF8
  7534                           tblptrh	equ	0xFF7
  7535                           tblptrl	equ	0xFF6
  7536                           tablat	equ	0xFF5
  7537                           prodh	equ	0xFF4
  7538                           prodl	equ	0xFF3
  7539                           intcon	equ	0xFF2
  7540                           postinc0	equ	0xFEE
  7541                           fsr0h	equ	0xFEA
  7542                           fsr0l	equ	0xFE9
  7543                           wreg	equ	0xFE8
  7544                           indf1	equ	0xFE7
  7545                           fsr1h	equ	0xFE2
  7546                           fsr1l	equ	0xFE1
  7547                           bsr	equ	0xFE0
  7548                           indf2	equ	0xFDF
  7549                           postinc2	equ	0xFDE
  7550                           postdec2	equ	0xFDD
  7551                           fsr2h	equ	0xFDA
  7552                           fsr2l	equ	0xFD9
  7553                           status	equ	0xFD8
  7554                           
  7555 ;; *************** function _check_msg *****************
  7556 ;; Defined at:
  7557 ;;		line 220 in file "../src/messages.c"
  7558 ;; Parameters:    Size  Location     Type
  7559 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
  7560 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7561 ;; Auto vars:     Size  Location     Type
  7562 ;;		None
  7563 ;; Return value:  Size  Location     Type
  7564 ;;                  1    wreg      unsigned char 
  7565 ;; Registers used:
  7566 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7567 ;; Tracked objects:
  7568 ;;		On entry : 0/0
  7569 ;;		On exit  : 0/0
  7570 ;;		Unchanged: 0/0
  7571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7572 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7574 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7575 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7576 ;;Total ram usage:        3 bytes
  7577 ;; Hardware stack levels used:    1
  7578 ;; This function calls:
  7579 ;;		Nothing
  7580 ;; This function is called by:
  7581 ;;		_SleepIfOkay
  7582 ;;		_block_on_To_msgqueues
  7583 ;; This function uses a non-reentrant model
  7584 ;;
  7585                           
  7586                           	psect	text47
  7587  0015E8                     __ptext47:
  7588                           	opt stack 0
  7589  0015E8                     _check_msg:
  7590                           	opt stack 19
  7591                           
  7592                           ;messages.c: 221: return (qptr->queue[qptr->cur_read_ind].full);
  7593                           
  7594                           ;incstack = 0
  7595  0015E8  0100               	movlb	0	; () banked
  7596  0015EA  EE20 F035          	lfsr	2,53
  7597  0015EE  0100               	movlb	0	; () banked
  7598  0015F0  519D               	movf	check_msg@qptr& (0+255),w,b
  7599  0015F2  26D9               	addwf	fsr2l,f,c
  7600  0015F4  0100               	movlb	0	; () banked
  7601  0015F6  519E               	movf	(check_msg@qptr+1)& (0+255),w,b
  7602  0015F8  22DA               	addwfc	fsr2h,f,c
  7603  0015FA  50DF               	movf	indf2,w,c
  7604  0015FC  0100               	movlb	0	; () banked
  7605  0015FE  6F9F               	movwf	??_check_msg& (0+255),b
  7606  001600  0100               	movlb	0	; () banked
  7607  001602  519F               	movf	??_check_msg& (0+255),w,b
  7608  001604  0D0D               	mullw	13
  7609  001606  50F3               	movf	prodl,w,c
  7610  001608  0100               	movlb	0	; () banked
  7611  00160A  259D               	addwf	check_msg@qptr& (0+255),w,b
  7612  00160C  6ED9               	movwf	fsr2l,c
  7613  00160E  50F4               	movf	prodh,w,c
  7614  001610  0100               	movlb	0	; () banked
  7615  001612  219E               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  7616  001614  6EDA               	movwf	fsr2h,c
  7617  001616  50DF               	movf	indf2,w,c
  7618  001618  0012               	return	
  7619  00161A                     __end_of_check_msg:
  7620                           	opt stack 0
  7621  0000                     pclatu	equ	0xFFB
  7622                           pclath	equ	0xFFA
  7623                           tblptru	equ	0xFF8
  7624                           tblptrh	equ	0xFF7
  7625                           tblptrl	equ	0xFF6
  7626                           tablat	equ	0xFF5
  7627                           prodh	equ	0xFF4
  7628                           prodl	equ	0xFF3
  7629                           intcon	equ	0xFF2
  7630                           postinc0	equ	0xFEE
  7631                           fsr0h	equ	0xFEA
  7632                           fsr0l	equ	0xFE9
  7633                           wreg	equ	0xFE8
  7634                           indf1	equ	0xFE7
  7635                           fsr1h	equ	0xFE2
  7636                           fsr1l	equ	0xFE1
  7637                           bsr	equ	0xFE0
  7638                           indf2	equ	0xFDF
  7639                           postinc2	equ	0xFDE
  7640                           postdec2	equ	0xFDD
  7641                           fsr2h	equ	0xFDA
  7642                           fsr2l	equ	0xFD9
  7643                           status	equ	0xFD8
  7644                           pclatu	equ	0xFFB
  7645                           pclath	equ	0xFFA
  7646                           tblptru	equ	0xFF8
  7647                           tblptrh	equ	0xFF7
  7648                           tblptrl	equ	0xFF6
  7649                           tablat	equ	0xFF5
  7650                           prodh	equ	0xFF4
  7651                           prodl	equ	0xFF3
  7652                           intcon	equ	0xFF2
  7653                           postinc0	equ	0xFEE
  7654                           fsr0h	equ	0xFEA
  7655                           fsr0l	equ	0xFE9
  7656                           wreg	equ	0xFE8
  7657                           indf1	equ	0xFE7
  7658                           fsr1h	equ	0xFE2
  7659                           fsr1l	equ	0xFE1
  7660                           bsr	equ	0xFE0
  7661                           indf2	equ	0xFDF
  7662                           postinc2	equ	0xFDE
  7663                           postdec2	equ	0xFDD
  7664                           fsr2h	equ	0xFDA
  7665                           fsr2l	equ	0xFD9
  7666                           status	equ	0xFD8
  7667                           
  7668                           	psect	param0
  7669  0000                     pclatu	equ	0xFFB
  7670                           pclath	equ	0xFFA
  7671                           tblptru	equ	0xFF8
  7672                           tblptrh	equ	0xFF7
  7673                           tblptrl	equ	0xFF6
  7674                           tablat	equ	0xFF5
  7675                           prodh	equ	0xFF4
  7676                           prodl	equ	0xFF3
  7677                           intcon	equ	0xFF2
  7678                           postinc0	equ	0xFEE
  7679                           fsr0h	equ	0xFEA
  7680                           fsr0l	equ	0xFE9
  7681                           wreg	equ	0xFE8
  7682                           indf1	equ	0xFE7
  7683                           fsr1h	equ	0xFE2
  7684                           fsr1l	equ	0xFE1
  7685                           bsr	equ	0xFE0
  7686                           indf2	equ	0xFDF
  7687                           postinc2	equ	0xFDE
  7688                           postdec2	equ	0xFDD
  7689                           fsr2h	equ	0xFDA
  7690                           fsr2l	equ	0xFD9
  7691                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         231
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     45      53
    BANK0           160     50     113
    BANK1           256     88     250
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
		 -> main@uthread_data(BANK1[2]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK1[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK1[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@t1thread_data(BANK1[2]), 
		 -> main@ic(BANK1[28]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@t1thread_data(BANK1[2]), 
		 -> main@ic(BANK1[28]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK1[28]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
		 -> NULL(NULL[0]), main@ic(BANK1[28]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 2
		 -> timer0_int_handler@val(BANK0[2]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 28
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK1[28]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> timer0_int_handler@val(BANK0[2]), main@msgbuffer(BANK1[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK1[11]), 

    send_msg@data	PTR void  size(2) Largest target is 28
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), i2c_int_handler@error_buf(BANK0[3]), main@t1thread_data(BANK1[2]), 
		 -> main@ic(BANK1[28]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    None.

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_timer1_int_handler
    _timer1_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler
    _timer0_int_handler->_FromMainHigh_recvmsg
    _FromMainHigh_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _i2c_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->_in_low_int
    _in_low_int->_in_high_int

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_timer1_lthread
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptHandlerHigh in BANK4

    None.

Critical Paths under _InterruptHandlerLow in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptHandlerHigh in BANK5

    None.

Critical Paths under _InterruptHandlerLow in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptHandlerHigh in BANK6

    None.

Critical Paths under _InterruptHandlerLow in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptHandlerHigh in BANK7

    None.

Critical Paths under _InterruptHandlerLow in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptHandlerHigh in BANK8

    None.

Critical Paths under _InterruptHandlerLow in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptHandlerHigh in BANK9

    None.

Critical Paths under _InterruptHandlerLow in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptHandlerHigh in BANK10

    None.

Critical Paths under _InterruptHandlerLow in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptHandlerHigh in BANK11

    None.

Critical Paths under _InterruptHandlerLow in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptHandlerHigh in BANK12

    None.

Critical Paths under _InterruptHandlerLow in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptHandlerHigh in BANK13

    None.

Critical Paths under _InterruptHandlerLow in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptHandlerHigh in BANK14

    None.

Critical Paths under _InterruptHandlerLow in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                55    55      0   10362
                                             35 BANK1     53    53      0
                         _OpenTimer0
                         _OpenTimer1
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
              _start_i2c_slave_reply
                     _timer0_lthread
                     _timer1_lthread
                     _uart_configure
                      _uart_get_byte
                       _uart_lthread
                     _uart_send_byte
 ---------------------------------------------------------------------------------
 (1) _uart_send_byte                                       1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                         8     0      8     384
                                              0 BANK1      8     0      8
 ---------------------------------------------------------------------------------
 (1) _uart_get_byte                                        1     1      0      34
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _uart_configure                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                       9     1      8    2710
                                             26 BANK1      9     1      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     302
                                              0 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2021
                                             22 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    1798
                                             10 BANK1     12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     294
                                              0 BANK1     10     2      8
 ---------------------------------------------------------------------------------
 (1) _start_i2c_slave_reply                                5     3      2     158
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          0     0      0     452
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           3     1      2     452
                                              0 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2192
                                             24 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2192
                                             24 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    1969
                                             10 BANK1     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     564
                                              0 BANK1     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           3     2      1     158
                                              0 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      62
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0     926
                                             28 COMRAM    17    17      0
                 _timer1_int_handler
                  _uart_receive_byte
             _uart_send_buffer_empty
                 _uart_transmit_byte
 ---------------------------------------------------------------------------------
 (6) _uart_transmit_byte                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _uart_send_buffer_empty                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _uart_receive_byte                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   2     2      0     926
                                             26 COMRAM     2     2      0
                         _ReadTimer1
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3     807
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6     635
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     198
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0    5737
                                             36 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  6     6      0    3193
                                             29 BANK0      6     6      0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2     164
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (12) _FromMainHigh_recvmsg                                5     1      4    1252
                                             24 BANK0      5     1      4
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (13) i2_recv_msg                                         14     7      7    1029
                                             10 BANK0     14     7      7
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                    10    10      0    2222
                                             26 BANK0     10    10      0
                 _ToMainHigh_sendmsg
                       _handle_start
 ---------------------------------------------------------------------------------
 (12) _handle_start                                        1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (12) _ToMainHigh_sendmsg                                  4     1      3    1611
                                             22 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6     998
                                             10 BANK0     12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6     384
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     322
                          _check_msg
                   _enter_sleep_mode
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (12) _in_low_int                                          2     0      2       0
                                              2 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (13) _in_high_int                                         2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _check_msg                                           3     1      2     322
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _OpenTimer1
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _start_i2c_slave_reply
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         _memcpy
     ___lwmod
   _uart_configure
   _uart_get_byte
   _uart_lthread
   _uart_send_byte

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
     _WriteTimer1
   _uart_receive_byte
   _uart_send_buffer_empty
   _uart_transmit_byte

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _check_msg
     _enter_sleep_mode
     _in_high_int
     _in_low_int
       _in_high_int
   _i2c_int_handler
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _handle_start
   _timer0_int_handler
     _FromMainHigh_recvmsg
       i2_recv_msg
         i2_memcpy
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100     58      FA       8       97.7%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     32      71       5       70.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2D      35       1       55.8%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1A0       6        0.0%
DATA                 0      0     1A0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Wed Sep 17 22:05:52 2014

               main@uthread_data 01D2         _MQ_Main_Willing_to_block 002E  
         _uart_send_buffer_empty 173E                      _SSPSTATbits 000FC7  
      __end_of_ToMainLow_recvmsg 14E4                  ??_uart_get_byte 01A2  
                             bsr 000FE0        __end_of_ToMainLow_sendmsg 173E  
                   __CFG_CP0$OFF 000000                i2recv_msg@msgtype 00AA  
              i2recv_msg@tlength 00B1                              l124 076A  
                            l445 1716                              l446 1718  
                            l473 146A                              l474 146C  
           __size_of_WriteTimer0 0012             __size_of_WriteTimer1 0012  
               ??_uart_configure 01A2                   _FromMainLow_MQ 0136  
                            prod 000FF3                              wreg 000FE8  
                     _TXSTA1bits 000FAD                     __CFG_IESO$ON 000000  
                   ?_in_high_int 009D                  ReadTimer1@timer 0003  
                           l1022 11BE              i2recv_msg@maxlength 00A9  
                           l3401 07E0                             l3261 1386  
                           l3413 0896                             l3247 1594  
                           l3407 0812                             l3409 0854  
                           l2731 12F4                             l3283 0B06  
                           l3363 06B8                             l3381 0728  
                           l3287 0B82                             l3383 0770  
                           l3375 06F6                             l2737 1314  
                           l3393 0794                             l3387 077C  
                           l3395 07AA                             l2861 1140  
                           l2765 0C3C                             l2941 118C  
                           l3389 0786                             l3399 07C4  
                           l2945 11B0                             l2937 117A  
                           l2939 1186                             l2879 090E  
                           l2895 09C8                             _LATB 000F8A  
                           _LATD 000F8C                             i1l61 0088  
                _FromMainHigh_MQ 0100                             _main 0646  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           fsr0l 000FE9                             fsr2h 000FDA  
                           indf1 000FE7                             fsr1l 000FE1  
                           indf2 000FDF                             fsr2l 000FD9  
         __CFG_DSWDTOSC$T1OSCREF 000000                      main@msgtype 01DC  
                     i1_send_msg 0E90                             pclat 000FFA  
                           prodh 000FF4                             prodl 000FF3  
          handle_start@data_read 009D                             start 00CE  
                     i2_recv_msg 09CC                       i2_send_msg 0CDA  
      ToMainHigh_recvmsg@msgtype 01BA                 ??_uart_send_byte 01A2  
                 send_msg@length 01AE      __size_of_timer0_int_handler 0076  
                  __CFG_PLLDIV$3 000000                            ?_main 0001  
                          _T0CON 000FD5                            _T1CON 000FCD  
                __end_of___lwmod 11C8                       i1memcpy@d1 0001  
                          i2l313 0422                            i2l305 0300  
                          i2l319 04A0                            i2l275 0E44  
                          i2l291 0188                            i2l285 0492  
                          i2l287 0156                       i1memcpy@s1 0003  
    FromMainHigh_recvmsg@msgtype 00B5                            _TMR0H 000FD7  
                          _TMR1H 000FCF                            _TMR0L 000FD6  
                          _TMR1L 000FCE                            _TRISB 000F93  
                          _TRISD 000F95                       i2memcpy@d1 009D  
                 __CFG_FCMEN$OFF 000000                       i2memcpy@s1 009F  
                   ?_init_queues 0001        __size_of_enter_sleep_mode 0006  
     ToMainLow_recvmsg@maxlength 01BE          timer0_lthread@msgbuffer 01A8  
                 __CFG_T1DIG$OFF 000000          i2c_configure_slave@addr 01A2  
                          tablat 000FF5                            status 000FD8  
               __end_ofi1_memcpy 13FA                 __end_ofi2_memcpy 137A  
                __initialization 161A                     __end_of_main 08AE  
                     _ReadTimer1 177E      __size_of_timer1_int_handler 0034  
     __size_of_ToMainLow_recvmsg 0036       __size_of_ToMainLow_sendmsg 0022  
  __size_of_FromMainHigh_recvmsg 0036                   __CFG_OSC$HSPLL 000000  
  __size_of_FromMainHigh_sendmsg 002E                           ??_main 01C5  
                send_msg@msgtype 01AF                    __activetblptr 000002  
                send_msg@tlength 01B3             __end_of_handle_start 0E90  
                         _T1GCON 000F9A                           i1l1571 1750  
                         i1l2391 1484                           i1l1579 16AA  
                         i1l1943 13E8                           i1l1937 13CC  
                         i1l2593 0070                           i2l3003 01B4  
                         i1l2587 0066                           i2l3101 061A  
                         i2l3021 0232                           i2l3005 01E0  
                         i2l3023 0272                           i2l3015 021A  
                         i2l3107 0640                           i2l3051 03B8  
                         i1l1995 0EC8                           i2l3125 122C  
                         i2l3045 036E                           i2l3047 03B0  
                         i2l3119 1028                           i2l3073 0466  
                     _OpenTimer0 16F6                       _OpenTimer1 1438  
                         i2l3093 0588                           i2l3085 0502  
                         i2l3325 0F7A                   __CFG_WDTEN$OFF 000000  
                         i2l3079 04A4                           i2l3319 0F70  
                         i2l2741 1344                           i2l2813 0A2C  
                         i2l2841 140C                           i2l2747 1364  
                         i2l2829 0AE6                           i2l2927 0E60  
                         i2l2849 142A                           i2l2929 0E78  
                         i2l2789 0D28                           i2l2985 014E  
                         i2l2979 0140                           _RCREG1 000FAF  
    __end_of_i2c_configure_slave 16F6                    ??_SleepIfOkay 00A1  
                         _OSCCON 000FD3                           _SPBRG1 000FB0  
                         _SSPADD 000FC8                   __CFG_WPCFG$OFF 000000  
                         _SSPBUF 000FC9   __size_of_start_i2c_slave_reply 0104  
                         _TXREG1 000FAE                      ?i1_send_msg 000B  
  __end_of_start_i2c_slave_reply 0BEE               timer0_lthread@tptr 01A2  
                 __CFG_WPDIS$OFF 000000                      ?i2_recv_msg 00A7  
                    ?i2_send_msg 00A7                 main@alex_counter 01C6  
                 __CFG_XINST$OFF 000000                  _i2c_int_handler 00D2  
               OpenTimer0@config 01A2                           _ic_ptr 00CF  
                      ??___lwmod 01A6                    main@msgbuffer 01C7  
               __end_of_init_i2c 1104                 OpenTimer1@config 01A4  
                         _memcpy 12DA                           clear_0 1620  
                         clear_1 162C                           clear_2 1638  
                         main@ic 01DE                 __end_of_recv_msg 09CC  
    start_i2c_slave_reply@length 01A6                 __end_of_send_msg 0CDA  
          timer0_int_handler@val 00BE          i2c_int_handler@i2c_data 00BD  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                      init_queue@i 01A4  
       ToMainLow_recvmsg@msgtype 01BA             __size_of_in_high_int 0010  
     __end_of_uart_transmit_byte 16CE                       __accesstop 0060  
        __end_of__initialization 163E       __end_of_ToMainHigh_recvmsg 151A  
     __end_of_ToMainHigh_sendmsg 16A4                  __CFG_IOL1WAY$ON 000000  
        ?_uart_send_buffer_empty 0001             __CFG_WPEND$PAGE_WPFP 000000  
    __end_of_init_timer1_lthread 176C              __end_of_SleepIfOkay 1284  
                 __pcstackCOMRAM 0001                      ?_ReadTimer1 0001  
             __size_of_check_msg 0032                  __CFG_DSWDTPS$G2 000000  
      timer0_int_handler@msgtype 00BC              __size_ofi1_send_msg 00AA  
                      ?i1_memcpy 0001    __size_of_InterruptHandlerHigh 0FB0  
    __end_of_InterruptHandlerLow 00CE                        ?i2_memcpy 009D  
                  _ToMainHigh_MQ 016C              __size_ofi2_recv_msg 011E  
               _enter_sleep_mode 17C8              __size_ofi2_send_msg 00EC  
           timer1_lthread@length 01C0                    check_msg@qptr 009D  
           timer1_lthread@retval 01C4             __size_of_init_queues 0056  
                     __pbssBANK0 0060                       __pbssBANK1 0100  
                    ?_OpenTimer0 0001                      ?_OpenTimer1 01A2  
      uart_get_byte@return_value 01A2   __end_of_uart_send_buffer_empty 175A  
        __end_of_i2c_int_handler 0646               timer1_lthread@tptr 01BC  
              recv_msg@maxlength 01AE                  recv_msg@msgtype 01AF  
                recv_msg@tlength 01B6            __size_of_handle_start 00CA  
               WriteTimer0@timer 009F                          ?_memcpy 01A2  
               WriteTimer1@timer 0003                    ??_WriteTimer0 009F  
                  ??_WriteTimer1 0003          __size_of_timer0_lthread 000E  
          __end_of_uart_get_byte 13BA          __size_of_timer1_lthread 005E  
                     ??i1_memcpy 0007                       ??i2_memcpy 00A3  
                        _SPBRGH1 000F7F                 i1send_msg@length 000D  
                        _SSPCON1 000FC6                          _SSPCON2 000FC5  
                        _SSPSTAT 000FC7              __size_of_ReadTimer1 0012  
              __end_of_check_msg 161A                        ?_init_i2c 01A2  
                    _SleepIfOkay 1226                        ?_recv_msg 01AC  
                     _in_low_int 13FA                     _handle_start 0DC6  
                        __Hparam 0000                        ?_send_msg 01AC  
                        __Lparam 0000       __end_of_timer0_int_handler 102E  
                        ___lwmod 1168                  __CFG_STVREN$OFF 000000  
                        __pcinit 161A                  __size_of_memcpy 0050  
                     _init_queue 1104                          __ramtop 0F00  
            __size_of_OpenTimer0 0026              __size_of_OpenTimer1 003C  
                        __ptext0 0646                          __ptext1 1584  
                        __ptext2 15B6                          __ptext3 137A  
                        __ptext4 102E                          __ptext5 11C8  
                        __ptext6 1168                          __ptext7 1648  
                        __ptext8 0BEE                          __ptext9 17B2  
                      _T0CONbits 000FD5                OpenTimer1@config1 01A2  
                      _T1CONbits 000FCD              __end_of_WriteTimer0 17A2  
            __end_of_WriteTimer1 177E                _uart_receive_byte 1474  
                 __pintcode_body 0F3A     __end_of_FromMainHigh_recvmsg 1550  
           end_of_initialization 163E          timer1_lthread@msgbuffer 01C2  
   __end_of_FromMainHigh_sendmsg 1676       FromMainHigh_sendmsg@length 01BB  
                        memcpy@d 01A8               ?_uart_receive_byte 0001  
                        memcpy@n 01A6                          memcpy@s 01AA  
                     ??_init_i2c 01A4          __size_of_uart_configure 006C  
    i2c_int_handler@data_written 00BB                    __Lmediumconst 0000  
                        int_func 0F3A                     ??i1_send_msg 0011  
                  ?_uart_lthread 01A2                 ?_i2c_int_handler 0001  
                   ??i2_recv_msg 00AE                       ??_recv_msg 01B3  
                   ??i2_send_msg 00AD                       ??_send_msg 01B2  
            ??_uart_receive_byte 0001       __end_of_timer1_int_handler 1584  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc2 000FDE        ToMainHigh_sendmsg@msgtype 00B3  
                      _PORTBbits 000F81                 __CFG_DSBOREN$OFF 000000  
        __size_of_uart_send_byte 0032                 __CFG_CPUDIV$OSC1 000000  
             __end_ofi1_send_msg 0F3A      FromMainHigh_sendmsg@msgtype 01B8  
                      _TRISBbits 000F93                        _TRISCbits 000F94  
      __end_of_uart_receive_byte 14AE               __end_ofi2_recv_msg 0AEA  
             __end_ofi2_send_msg 0DC6           uart_send_byte@sendByte 01A2  
  FromMainHigh_recvmsg@maxlength 00B9         timer1_int_handler@result 001B  
                 ??_uart_lthread 01AA                __CFG_WPFP$PAGE_63 000000  
                     main@length 01DD                       main@myByte 01D9  
                    ?_in_low_int 009F            timer0_lthread@msgtype 01A4  
          _start_i2c_slave_reply 0AEA              __CFG_MSSP7B_EN$MSK7 000000  
   __size_of_i2c_configure_slave 0028         __end_of_enter_sleep_mode 17CE  
             _uart_transmit_byte 16A4                     ??_ReadTimer1 0003  
             _ToMainHigh_recvmsg 14E4                        i1memcpy@d 0007  
             _ToMainHigh_sendmsg 1676                        i1memcpy@n 0005  
                      i1memcpy@s 0009                      _BAUDCONbits 000F7E  
                 _timer0_lthread 17B2                      ?_init_queue 01A2  
                      i2memcpy@d 00A3                      _WriteTimer0 1790  
                    _WriteTimer1 176C                        i2memcpy@n 00A1  
                      i2memcpy@s 00A5              ?_uart_transmit_byte 0001  
                 _timer1_lthread 11C8                   __end_of_memcpy 132A  
              _enable_interrupts 17C0                 __CFG_DSWDTEN$OFF 000000  
            ?_ToMainHigh_recvmsg 01BA         i2c_int_handler@data_read 00C0  
            ?_ToMainHigh_sendmsg 00B3               ?_enable_interrupts 0001  
            start_initialization 161A                    ??_in_high_int 009F  
              __size_ofi1_memcpy 0040                __size_ofi2_memcpy 0050  
            ??_enable_interrupts 01A2                     ??_OpenTimer0 01A2  
                   ??_OpenTimer1 01A3               __end_of_ReadTimer1 1790  
           ??_uart_transmit_byte 0001     __end_of_InterruptHandlerHigh 0FB8  
                     init_i2c@ic 01A2             ??_ToMainHigh_recvmsg 01BE  
           ??_ToMainHigh_sendmsg 00B6           __end_of_timer0_lthread 17C0  
       i2c_int_handler@error_buf 00B8           __end_of_timer1_lthread 1226  
               __CFG_LPT1OSC$OFF 000000        __end_of_enable_interrupts 17C8  
                       ??_memcpy 01A8            timer1_lthread@msgtype 01BE  
           _FromMainHigh_recvmsg 151A             _FromMainHigh_sendmsg 1648  
   __size_of_init_timer1_lthread 0012               __end_of_OpenTimer0 171C  
             __end_of_OpenTimer1 1474         i2c_int_handler@msg_ready 00BF  
                    __pbssCOMRAM 002E                    ??_init_queues 01A5  
                  __pcstackBANK0 009D                    __pcstackBANK1 01A2  
            __size_of_in_low_int 003E       __size_of_uart_receive_byte 003A  
       start_i2c_slave_reply@msg 01A2         ToMainLow_sendmsg@msgtype 0017  
   __size_of_InterruptHandlerLow 00B6              __end_of_in_high_int 17B2  
                 _uart_configure 102E                     ?_SleepIfOkay 0001  
          ToMainLow_recvmsg@data 01BC                     _ToMainLow_MQ 0060  
            __size_of_init_queue 0064                        _check_msg 15E8  
                      __pnvBANK0 00CF           ?_start_i2c_slave_reply 01A2  
              __size_of_init_i2c 006A                     recv_msg@data 01B1  
                   recv_msg@qmsg 01B8                     recv_msg@slot 01B5  
                   recv_msg@qptr 01AC                __size_of_recv_msg 011E  
                      __pintcode 0008                __size_of_send_msg 00EC  
                ?_timer0_lthread 01A2                         ?___lwmod 01A2  
          ?_FromMainHigh_recvmsg 00B5                  ?_timer1_lthread 01BC  
          ?_FromMainHigh_sendmsg 01B8                      __pintcodelo 0018  
         ToMainHigh_recvmsg@data 01BC             __end_of_uart_lthread 15E8  
     i2c_int_handler@msg_to_send 00BE                WriteTimer0@timer0 009D  
                 _uart_send_byte 1584               _timer0_int_handler 0FB8  
              WriteTimer1@timer1 0001             __CFG_RTCOSC$T1OSCREF 000000  
            uart_lthread@msgtype 01A4            ToMainLow_sendmsg@data 0018  
         __end_of_uart_configure 109A              ?_timer0_int_handler 0001  
               uart_lthread@uptr 01A2              __end_of_init_queues 12DA  
                       _LATDbits 000F8C                       ?_check_msg 009D  
                       _IPR1bits 000F9F                         _PIE1bits 000F9D  
         __size_of_uart_get_byte 0040                         _PIR1bits 000F9E  
         ToMainHigh_sendmsg@data 00B4                         _RCONbits 000FD0  
               __CFG_WDTPS$32768 000000             ??_timer0_int_handler 00BA  
     __size_of_enable_interrupts 0008                i1send_msg@msgtype 000E  
              i1send_msg@tlength 0012           __end_of_uart_send_byte 15B6  
                      main@i_677 01D7             timer0_lthread@length 01A6  
             _timer1_int_handler 1550                         i1_memcpy 13BA  
           _InterruptHandlerHigh 0008                         i2_memcpy 132A  
            _uart_receive_buffer 0096             timer0_lthread@msgval 01AA  
       FromMainHigh_recvmsg@data 00B7                 _uart_send_buffer 002F  
                    _in_high_int 17A2                     send_msg@data 01B0  
            _i2c_configure_slave 16CE                     send_msg@qmsg 01B6  
                   send_msg@slot 01B5                     send_msg@qptr 01AC  
       ??_uart_send_buffer_empty 0003            uart_lthread@msgbuffer 01A8  
                ?_uart_configure 0001              ?_timer1_int_handler 0001  
                       __Hparam0 0000                     ??_in_low_int 00A1  
                       __Lparam0 0000             ?_i2c_configure_slave 0001  
              ?_enter_sleep_mode 0001           ??_FromMainHigh_recvmsg 00B9  
         ??_FromMainHigh_sendmsg 01BB             ??_timer1_int_handler 001B  
       __size_of_i2c_int_handler 0574               ??_enter_sleep_mode 009D  
               __size_of___lwmod 0060                     ??_init_queue 01A4  
                   ?_WriteTimer0 009D                     ?_WriteTimer1 0001  
       FromMainHigh_sendmsg@data 01B9                  ?_uart_send_byte 0001  
        ToMainLow_sendmsg@length 001A                main@t0thread_data 01D4  
                  _uart_get_byte 137A            ?_InterruptHandlerHigh 0001  
              i2send_msg@msgtype 00AA      ToMainHigh_recvmsg@maxlength 01BE  
              i2send_msg@tlength 00AE          init_timer1_lthread@tptr 01A2  
                    _init_queues 1284               __end_of_in_low_int 1438  
                       __ptext10 0AEA                         __ptext11 175A  
                       __ptext20 12DA                         __ptext12 1284  
                       __ptext21 1438                         __ptext13 1104  
                     _T1GCONbits 000F9A                         __ptext30 0E90  
                       __ptext22 16F6                         __ptext14 109A  
                       __ptext31 13BA                         __ptext15 16CE  
                       __ptext40 1676                         __ptext32 177E  
                       __ptext24 16A4                         __ptext16 17C0  
                       __ptext41 0CDA                         __ptext25 173E  
                       __ptext17 14AE                         __ptext42 132A  
                       __ptext34 0FB8                         __ptext26 1474  
                       __ptext18 14E4                         __ptext43 1226  
                       __ptext35 1790                         __ptext27 1550  
                       __ptext19 08AE                         __ptext44 13FA  
                       __ptext36 151A                         __ptext28 176C  
                       __ptext45 17A2                         __ptext37 09CC  
                       __ptext29 171C                         __ptext46 17C8  
                       __ptext38 00D2                         __ptext47 15E8  
                       __ptext39 0DC6                   i1send_msg@data 000F  
                 i1send_msg@qmsg 0015                   i1send_msg@slot 0014  
                 i1send_msg@qptr 000B               uart_lthread@length 01A6  
       timer0_int_handler@length 00BA                         _init_i2c 109A  
            _init_timer1_lthread 175A                    __size_of_main 0268  
              main@t1thread_data 01DA                      ??_check_msg 009F  
             __end_of_init_queue 1168             __size_of_SleepIfOkay 005E  
                       _recv_msg 08AE            ??_i2c_configure_slave 01A2  
                       _send_msg 0BEE                   init_queue@qptr 01A2  
          __size_of_uart_lthread 0032                   i2recv_msg@data 00AC  
                 i2recv_msg@qmsg 00B3                   i2recv_msg@slot 00B0  
                 i2recv_msg@qptr 00A7              _InterruptHandlerLow 0018  
           ?_init_timer1_lthread 01A2                   ?_uart_get_byte 0001  
                    _OSCTUNEbits 000F9B                       _INTCONbits 000FF2  
                       memcpy@d1 01A2                         memcpy@s1 01A4  
   i2c_int_handler@overrun_error 00BC  __size_of_uart_send_buffer_empty 001C  
               i2send_msg@length 00A9                         intlevel1 0000  
                       intlevel2 0000             ?_InterruptHandlerLow 0001  
        ??_start_i2c_slave_reply 01A4                 ___lwmod@dividend 01A2  
    __size_of_uart_transmit_byte 002A                     _uart_lthread 15B6  
                     _RCSTA1bits 000FAC                    ?_handle_start 0001  
               ??_timer0_lthread 01AA      __size_of_ToMainHigh_recvmsg 0036  
    __size_of_ToMainHigh_sendmsg 002E                       _OSCCONbits 000FD3  
               ??_timer1_lthread 01C4         ToMainHigh_sendmsg@length 00B6  
          ??_init_timer1_lthread 01A4           ??_InterruptHandlerHigh 00C1  
              _ToMainLow_recvmsg 14AE                _ToMainLow_sendmsg 171C  
             main@last_reg_recvd 01D6                  ___lwmod@divisor 01A4  
             ?_ToMainLow_recvmsg 01BA                ??_i2c_int_handler 00B7  
                ___lwmod@counter 01A6               ?_ToMainLow_sendmsg 0017  
                    _SSPCON1bits 000FC6                      _SSPCON2bits 000FC5  
                 i2send_msg@data 00AB            ??_InterruptHandlerLow 001D  
            ??_ToMainLow_recvmsg 01BE                   i2send_msg@qmsg 00B1  
                 i2send_msg@slot 00B0                   i2send_msg@qptr 00A7  
            ??_ToMainLow_sendmsg 001A                   ??_handle_start 009D  
