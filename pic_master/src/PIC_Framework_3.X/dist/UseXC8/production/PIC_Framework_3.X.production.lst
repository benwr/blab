

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Mon Sep 08 18:23:09 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    67                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    68  0000                     _INTCONbits	set	4082
    69  0000                     _IPR1bits	set	3999
    70  0000                     _LATB	set	3978
    71  0000                     _LATD	set	3980
    72  0000                     _OSCCON	set	4051
    73  0000                     _OSCCONbits	set	4051
    74  0000                     _OSCTUNEbits	set	3995
    75  0000                     _PIE1bits	set	3997
    76  0000                     _PIR1bits	set	3998
    77  0000                     _RCONbits	set	4048
    78  0000                     _RCREG	set	4014
    79  0000                     _RCSTA	set	4011
    80  0000                     _RCSTAbits	set	4011
    81  0000                     _SPBRG	set	4015
    82  0000                     _SPBRGH	set	4016
    83  0000                     _SSPADD	set	4040
    84  0000                     _SSPBUF	set	4041
    85  0000                     _SSPCON1	set	4038
    86  0000                     _SSPCON1bits	set	4038
    87  0000                     _SSPCON2	set	4037
    88  0000                     _SSPCON2bits	set	4037
    89  0000                     _SSPSTAT	set	4039
    90  0000                     _SSPSTATbits	set	4039
    91  0000                     _T0CON	set	4053
    92  0000                     _T0CONbits	set	4053
    93  0000                     _T1CON	set	4045
    94  0000                     _T1CONbits	set	4045
    95  0000                     _TMR0H	set	4055
    96  0000                     _TMR0L	set	4054
    97  0000                     _TMR1H	set	4047
    98  0000                     _TMR1L	set	4046
    99  0000                     _TRISB	set	3987
   100  0000                     _TRISCbits	set	3988
   101  0000                     _TRISD	set	3989
   102  0000                     _TXSTA	set	4012
   103  0000                     _TXSTAbits	set	4012
   104                           
   105                           	psect	nvCOMRAM
   106  00004B                     __pnvCOMRAM:
   107                           	opt stack 0
   108  00004B                     _uc_ptr:
   109                           	opt stack 0
   110  00004B                     	ds	2
   111                           
   112                           	psect	nvBANK0
   113  0000BA                     __pnvBANK0:
   114                           	opt stack 0
   115  0000BA                     _ic_ptr:
   116                           	opt stack 0
   117  0000BA                     	ds	2
   118                           
   119                           ; #config settings
   120  0000                     
   121                           	psect	cinit
   122  0016B6                     __pcinit:
   123                           	opt stack 0
   124  0016B6                     start_initialization:
   125                           	opt stack 0
   126  0016B6                     __initialization:
   127                           	opt stack 0
   128                           
   129                           ; Clear objects allocated to BANK1 (216 bytes)
   130  0016B6  EE01  F000         	lfsr	0,__pbssBANK1
   131  0016BA  0ED8               	movlw	216
   132  0016BC                     clear_0:
   133  0016BC  6AEE               	clrf	postinc0,c
   134  0016BE  06E8               	decf	wreg,f,c
   135  0016C0  E1FD               	bnz	clear_0
   136                           
   137                           ; Clear objects allocated to COMRAM (2 bytes)
   138  0016C2  6A4E               	clrf	(__pbssCOMRAM+1)& (0+255),c
   139  0016C4  6A4D               	clrf	__pbssCOMRAM& (0+255),c
   140  0016C6                     end_of_initialization:
   141                           	opt stack 0
   142  0016C6                     __end_of__initialization:
   143                           	opt stack 0
   144  0016C6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   145  0016C8  6EF8               	movwf	tblptru,c
   146  0016CA  0100               	movlb	0
   147  0016CC  EF02  F003         	goto	_main	;jump to C main() function
   148                           tblptru	equ	0xFF8
   149                           postinc0	equ	0xFEE
   150                           wreg	equ	0xFE8
   151                           
   152                           	psect	bssCOMRAM
   153  00004D                     __pbssCOMRAM:
   154                           	opt stack 0
   155  00004D                     _MQ_Main_Willing_to_block:
   156                           	opt stack 0
   157  00004D                     	ds	1
   158  00004E                     _USART_Status:
   159                           	opt stack 0
   160  00004E                     	ds	1
   161                           tblptru	equ	0xFF8
   162                           postinc0	equ	0xFEE
   163                           wreg	equ	0xFE8
   164                           
   165                           	psect	bssBANK1
   166  000100                     __pbssBANK1:
   167                           	opt stack 0
   168  000100                     _FromMainHigh_MQ:
   169                           	opt stack 0
   170  000100                     	ds	54
   171  000136                     _FromMainLow_MQ:
   172                           	opt stack 0
   173  000136                     	ds	54
   174  00016C                     _ToMainHigh_MQ:
   175                           	opt stack 0
   176  00016C                     	ds	54
   177  0001A2                     _ToMainLow_MQ:
   178                           	opt stack 0
   179  0001A2                     	ds	54
   180                           tblptru	equ	0xFF8
   181                           postinc0	equ	0xFEE
   182                           wreg	equ	0xFE8
   183                           
   184                           	psect	cstackBANK2
   185  000200                     __pcstackBANK2:
   186                           	opt stack 0
   187  000200                     main@msgbuffer:
   188                           	opt stack 0
   189                           
   190                           ; 11 bytes @ 0x0
   191  000200                     	ds	11
   192  00020B                     main@uthread_data:
   193                           	opt stack 0
   194                           
   195                           ; 2 bytes @ 0xB
   196  00020B                     	ds	2
   197  00020D                     main@t0thread_data:
   198                           	opt stack 0
   199                           
   200                           ; 2 bytes @ 0xD
   201  00020D                     	ds	2
   202  00020F                     main@last_reg_recvd:
   203                           	opt stack 0
   204                           
   205                           ; 1 bytes @ 0xF
   206  00020F                     	ds	1
   207  000210                     main@t1thread_data:
   208                           	opt stack 0
   209                           
   210                           ; 2 bytes @ 0x10
   211  000210                     	ds	2
   212  000212                     main@uc:
   213                           	opt stack 0
   214                           
   215                           ; 5 bytes @ 0x12
   216  000212                     	ds	5
   217  000217                     main@msgtype:
   218                           	opt stack 0
   219                           
   220                           ; 1 bytes @ 0x17
   221  000217                     	ds	1
   222  000218                     main@length:
   223                           	opt stack 0
   224                           
   225                           ; 1 bytes @ 0x18
   226  000218                     	ds	1
   227  000219                     main@ic:
   228                           	opt stack 0
   229                           
   230                           ; 28 bytes @ 0x19
   231  000219                     	ds	28
   232                           tblptru	equ	0xFF8
   233                           postinc0	equ	0xFEE
   234                           wreg	equ	0xFE8
   235                           
   236                           	psect	cstackBANK0
   237  000080                     __pcstackBANK0:
   238                           	opt stack 0
   239  000080                     timer0_int_handler@length:
   240                           	opt stack 0
   241  000080                     i2c_int_handler@error_buf:
   242                           	opt stack 0
   243                           
   244                           ; 3 bytes @ 0x0
   245  000080                     	ds	2
   246  000082                     timer0_int_handler@msgtype:
   247                           	opt stack 0
   248                           
   249                           ; 2 bytes @ 0x2
   250  000082                     	ds	1
   251  000083                     i2c_int_handler@data_written:
   252                           	opt stack 0
   253                           
   254                           ; 1 bytes @ 0x3
   255  000083                     	ds	1
   256  000084                     i2c_int_handler@overrun_error:
   257                           	opt stack 0
   258  000084                     timer0_int_handler@val:
   259                           	opt stack 0
   260                           
   261                           ; 2 bytes @ 0x4
   262  000084                     	ds	1
   263  000085                     i2c_int_handler@i2c_data:
   264                           	opt stack 0
   265                           
   266                           ; 1 bytes @ 0x5
   267  000085                     	ds	1
   268  000086                     i2c_int_handler@msg_to_send:
   269                           	opt stack 0
   270                           
   271                           ; 1 bytes @ 0x6
   272  000086                     	ds	1
   273  000087                     i2c_int_handler@msg_ready:
   274                           	opt stack 0
   275                           
   276                           ; 1 bytes @ 0x7
   277  000087                     	ds	1
   278  000088                     i2c_int_handler@data_read:
   279                           	opt stack 0
   280                           
   281                           ; 1 bytes @ 0x8
   282  000088                     	ds	1
   283  000089                     ??_InterruptHandlerHigh:
   284                           
   285                           ; 0 bytes @ 0x9
   286  000089                     	ds	14
   287  000097                     ?_in_high_int:
   288                           	opt stack 0
   289  000097                     ?___lwmod:
   290                           	opt stack 0
   291  000097                     i2c_configure_slave@addr:
   292                           	opt stack 0
   293  000097                     OpenTimer0@config:
   294                           	opt stack 0
   295  000097                     OpenTimer1@config:
   296                           	opt stack 0
   297  000097                     Delay1KTCYx@unit:
   298                           	opt stack 0
   299  000097                     init_queue@qptr:
   300                           	opt stack 0
   301  000097                     check_msg@qptr:
   302                           	opt stack 0
   303  000097                     start_i2c_slave_reply@msg:
   304                           	opt stack 0
   305  000097                     init_i2c@ic:
   306                           	opt stack 0
   307  000097                     init_uart_recv@uc:
   308                           	opt stack 0
   309  000097                     timer0_lthread@tptr:
   310                           	opt stack 0
   311  000097                     init_timer1_lthread@tptr:
   312                           	opt stack 0
   313  000097                     uart_lthread@uptr:
   314                           	opt stack 0
   315  000097                     OpenUSART@spbrg:
   316                           	opt stack 0
   317  000097                     ___lwmod@dividend:
   318                           	opt stack 0
   319  000097                     memcpy@d1:
   320                           	opt stack 0
   321                           
   322                           ; 2 bytes @ 0x17
   323  000097                     	ds	2
   324  000099                     ??_OpenUSART:
   325  000099                     ??_start_i2c_slave_reply:
   326  000099                     ??_check_msg:
   327  000099                     ?_in_low_int:
   328                           	opt stack 0
   329  000099                     init_queue@i:
   330                           	opt stack 0
   331  000099                     timer0_lthread@msgtype:
   332                           	opt stack 0
   333  000099                     uart_lthread@msgtype:
   334                           	opt stack 0
   335  000099                     ___lwmod@divisor:
   336                           	opt stack 0
   337  000099                     memcpy@s1:
   338                           	opt stack 0
   339                           
   340                           ; 2 bytes @ 0x19
   341  000099                     	ds	1
   342  00009A                     
   343                           ; 0 bytes @ 0x1A
   344  00009A                     	ds	1
   345  00009B                     ?_in_main:
   346                           	opt stack 0
   347  00009B                     start_i2c_slave_reply@length:
   348                           	opt stack 0
   349  00009B                     ___lwmod@counter:
   350                           	opt stack 0
   351  00009B                     timer0_lthread@length:
   352                           	opt stack 0
   353  00009B                     uart_lthread@length:
   354                           	opt stack 0
   355  00009B                     memcpy@n:
   356                           	opt stack 0
   357                           
   358                           ; 2 bytes @ 0x1B
   359  00009B                     	ds	1
   360  00009C                     OpenUSART@config:
   361                           	opt stack 0
   362                           
   363                           ; 1 bytes @ 0x1C
   364  00009C                     	ds	1
   365  00009D                     timer0_lthread@msgbuffer:
   366                           	opt stack 0
   367  00009D                     uart_lthread@msgbuffer:
   368                           	opt stack 0
   369  00009D                     memcpy@d:
   370                           	opt stack 0
   371                           
   372                           ; 2 bytes @ 0x1D
   373  00009D                     	ds	2
   374  00009F                     timer0_lthread@msgval:
   375                           	opt stack 0
   376  00009F                     memcpy@s:
   377                           	opt stack 0
   378                           
   379                           ; 2 bytes @ 0x1F
   380  00009F                     	ds	2
   381  0000A1                     send_msg@qptr:
   382                           	opt stack 0
   383  0000A1                     recv_msg@qptr:
   384                           	opt stack 0
   385                           
   386                           ; 2 bytes @ 0x21
   387  0000A1                     	ds	2
   388  0000A3                     send_msg@length:
   389                           	opt stack 0
   390  0000A3                     recv_msg@maxlength:
   391                           	opt stack 0
   392                           
   393                           ; 1 bytes @ 0x23
   394  0000A3                     	ds	1
   395  0000A4                     send_msg@msgtype:
   396                           	opt stack 0
   397  0000A4                     recv_msg@msgtype:
   398                           	opt stack 0
   399                           
   400                           ; 2 bytes @ 0x24
   401  0000A4                     	ds	1
   402  0000A5                     send_msg@data:
   403                           	opt stack 0
   404                           
   405                           ; 2 bytes @ 0x25
   406  0000A5                     	ds	1
   407  0000A6                     recv_msg@data:
   408                           	opt stack 0
   409                           
   410                           ; 2 bytes @ 0x26
   411  0000A6                     	ds	1
   412  0000A7                     ??_send_msg:
   413                           
   414                           ; 0 bytes @ 0x27
   415  0000A7                     	ds	1
   416  0000A8                     ??_recv_msg:
   417  0000A8                     send_msg@tlength:
   418                           	opt stack 0
   419                           
   420                           ; 2 bytes @ 0x28
   421  0000A8                     	ds	2
   422  0000AA                     send_msg@slot:
   423                           	opt stack 0
   424  0000AA                     recv_msg@slot:
   425                           	opt stack 0
   426                           
   427                           ; 1 bytes @ 0x2A
   428  0000AA                     	ds	1
   429  0000AB                     send_msg@qmsg:
   430                           	opt stack 0
   431  0000AB                     recv_msg@tlength:
   432                           	opt stack 0
   433                           
   434                           ; 2 bytes @ 0x2B
   435  0000AB                     	ds	2
   436  0000AD                     FromMainHigh_sendmsg@msgtype:
   437                           	opt stack 0
   438  0000AD                     recv_msg@qmsg:
   439                           	opt stack 0
   440                           
   441                           ; 2 bytes @ 0x2D
   442  0000AD                     	ds	1
   443  0000AE                     FromMainHigh_sendmsg@data:
   444                           	opt stack 0
   445                           
   446                           ; 2 bytes @ 0x2E
   447  0000AE                     	ds	1
   448  0000AF                     ToMainLow_recvmsg@msgtype:
   449                           	opt stack 0
   450  0000AF                     ToMainHigh_recvmsg@msgtype:
   451                           	opt stack 0
   452                           
   453                           ; 2 bytes @ 0x2F
   454  0000AF                     	ds	1
   455  0000B0                     FromMainHigh_sendmsg@length:
   456                           	opt stack 0
   457                           
   458                           ; 1 bytes @ 0x30
   459  0000B0                     	ds	1
   460  0000B1                     ToMainLow_recvmsg@data:
   461                           	opt stack 0
   462  0000B1                     ToMainHigh_recvmsg@data:
   463                           	opt stack 0
   464  0000B1                     timer1_lthread@tptr:
   465                           	opt stack 0
   466                           
   467                           ; 2 bytes @ 0x31
   468  0000B1                     	ds	2
   469  0000B3                     ToMainLow_recvmsg@maxlength:
   470                           	opt stack 0
   471  0000B3                     ToMainHigh_recvmsg@maxlength:
   472                           	opt stack 0
   473  0000B3                     timer1_lthread@msgtype:
   474                           	opt stack 0
   475                           
   476                           ; 2 bytes @ 0x33
   477  0000B3                     	ds	2
   478  0000B5                     timer1_lthread@length:
   479                           	opt stack 0
   480                           
   481                           ; 2 bytes @ 0x35
   482  0000B5                     	ds	2
   483  0000B7                     timer1_lthread@msgbuffer:
   484                           	opt stack 0
   485                           
   486                           ; 2 bytes @ 0x37
   487  0000B7                     	ds	2
   488  0000B9                     timer1_lthread@retval:
   489                           	opt stack 0
   490                           
   491                           ; 1 bytes @ 0x39
   492  0000B9                     	ds	1
   493  0000BA                     tblptru	equ	0xFF8
   494                           postinc0	equ	0xFEE
   495                           wreg	equ	0xFE8
   496                           
   497                           ; 0 bytes @ 0x3A
   498                           
   499                           	psect	cstackCOMRAM
   500  000001                     __pcstackCOMRAM:
   501                           	opt stack 0
   502  000001                     ?_ReadTimer1:
   503                           	opt stack 0
   504  000001                     ReadUSART@data:
   505                           	opt stack 0
   506  000001                     WriteTimer1@timer1:
   507                           	opt stack 0
   508  000001                     i1memcpy@d1:
   509                           	opt stack 0
   510                           
   511                           ; 2 bytes @ 0x0
   512  000001                     	ds	2
   513  000003                     ReadTimer1@timer:
   514                           	opt stack 0
   515  000003                     WriteTimer1@timer:
   516                           	opt stack 0
   517  000003                     i1memcpy@s1:
   518                           	opt stack 0
   519                           
   520                           ; 2 bytes @ 0x2
   521  000003                     	ds	2
   522  000005                     i1memcpy@n:
   523                           	opt stack 0
   524                           
   525                           ; 2 bytes @ 0x4
   526  000005                     	ds	2
   527  000007                     i1memcpy@d:
   528                           	opt stack 0
   529                           
   530                           ; 2 bytes @ 0x6
   531  000007                     	ds	2
   532  000009                     i1memcpy@s:
   533                           	opt stack 0
   534                           
   535                           ; 2 bytes @ 0x8
   536  000009                     	ds	2
   537  00000B                     i1send_msg@qptr:
   538                           	opt stack 0
   539                           
   540                           ; 2 bytes @ 0xA
   541  00000B                     	ds	2
   542  00000D                     i1send_msg@length:
   543                           	opt stack 0
   544                           
   545                           ; 1 bytes @ 0xC
   546  00000D                     	ds	1
   547  00000E                     i1send_msg@msgtype:
   548                           	opt stack 0
   549                           
   550                           ; 1 bytes @ 0xD
   551  00000E                     	ds	1
   552  00000F                     i1send_msg@data:
   553                           	opt stack 0
   554                           
   555                           ; 2 bytes @ 0xE
   556  00000F                     	ds	2
   557  000011                     ??i1_send_msg:
   558                           
   559                           ; 0 bytes @ 0x10
   560  000011                     	ds	1
   561  000012                     i1send_msg@tlength:
   562                           	opt stack 0
   563                           
   564                           ; 2 bytes @ 0x11
   565  000012                     	ds	2
   566  000014                     i1send_msg@slot:
   567                           	opt stack 0
   568                           
   569                           ; 1 bytes @ 0x13
   570  000014                     	ds	1
   571  000015                     i1send_msg@qmsg:
   572                           	opt stack 0
   573                           
   574                           ; 2 bytes @ 0x14
   575  000015                     	ds	2
   576  000017                     ToMainLow_sendmsg@msgtype:
   577                           	opt stack 0
   578                           
   579                           ; 1 bytes @ 0x16
   580  000017                     	ds	1
   581  000018                     ToMainLow_sendmsg@data:
   582                           	opt stack 0
   583                           
   584                           ; 2 bytes @ 0x17
   585  000018                     	ds	2
   586  00001A                     ToMainLow_sendmsg@length:
   587                           	opt stack 0
   588                           
   589                           ; 1 bytes @ 0x19
   590  00001A                     	ds	1
   591  00001B                     ??_uart_recv_int_handler:
   592  00001B                     timer1_int_handler@result:
   593                           	opt stack 0
   594                           
   595                           ; 2 bytes @ 0x1A
   596  00001B                     	ds	2
   597  00001D                     ??_InterruptHandlerLow:
   598                           
   599                           ; 0 bytes @ 0x1C
   600  00001D                     	ds	17
   601  00002E                     ?i2_in_high_int:
   602                           	opt stack 0
   603  00002E                     handle_start@data_read:
   604                           	opt stack 0
   605  00002E                     WriteTimer0@timer0:
   606                           	opt stack 0
   607  00002E                     i2check_msg@qptr:
   608                           	opt stack 0
   609  00002E                     i2memcpy@d1:
   610                           	opt stack 0
   611                           
   612                           ; 2 bytes @ 0x2D
   613  00002E                     	ds	2
   614  000030                     ??i2_check_msg:
   615  000030                     ?i2_in_low_int:
   616                           	opt stack 0
   617  000030                     WriteTimer0@timer:
   618                           	opt stack 0
   619  000030                     i2memcpy@s1:
   620                           	opt stack 0
   621                           
   622                           ; 2 bytes @ 0x2F
   623  000030                     	ds	2
   624  000032                     i2memcpy@n:
   625                           	opt stack 0
   626                           
   627                           ; 2 bytes @ 0x31
   628  000032                     	ds	2
   629  000034                     i2memcpy@d:
   630                           	opt stack 0
   631                           
   632                           ; 2 bytes @ 0x33
   633  000034                     	ds	2
   634  000036                     i2memcpy@s:
   635                           	opt stack 0
   636                           
   637                           ; 2 bytes @ 0x35
   638  000036                     	ds	2
   639  000038                     i2send_msg@qptr:
   640                           	opt stack 0
   641  000038                     i2recv_msg@qptr:
   642                           	opt stack 0
   643                           
   644                           ; 2 bytes @ 0x37
   645  000038                     	ds	2
   646  00003A                     i2send_msg@length:
   647                           	opt stack 0
   648  00003A                     i2recv_msg@maxlength:
   649                           	opt stack 0
   650                           
   651                           ; 1 bytes @ 0x39
   652  00003A                     	ds	1
   653  00003B                     i2send_msg@msgtype:
   654                           	opt stack 0
   655  00003B                     i2recv_msg@msgtype:
   656                           	opt stack 0
   657                           
   658                           ; 2 bytes @ 0x3A
   659  00003B                     	ds	1
   660  00003C                     i2send_msg@data:
   661                           	opt stack 0
   662                           
   663                           ; 2 bytes @ 0x3B
   664  00003C                     	ds	1
   665  00003D                     i2recv_msg@data:
   666                           	opt stack 0
   667                           
   668                           ; 2 bytes @ 0x3C
   669  00003D                     	ds	1
   670  00003E                     ??i2_send_msg:
   671                           
   672                           ; 0 bytes @ 0x3D
   673  00003E                     	ds	1
   674  00003F                     ??i2_recv_msg:
   675  00003F                     i2send_msg@tlength:
   676                           	opt stack 0
   677                           
   678                           ; 2 bytes @ 0x3E
   679  00003F                     	ds	2
   680  000041                     i2send_msg@slot:
   681                           	opt stack 0
   682  000041                     i2recv_msg@slot:
   683                           	opt stack 0
   684                           
   685                           ; 1 bytes @ 0x40
   686  000041                     	ds	1
   687  000042                     i2send_msg@qmsg:
   688                           	opt stack 0
   689  000042                     i2recv_msg@tlength:
   690                           	opt stack 0
   691                           
   692                           ; 2 bytes @ 0x41
   693  000042                     	ds	2
   694  000044                     ToMainHigh_sendmsg@msgtype:
   695                           	opt stack 0
   696  000044                     i2recv_msg@qmsg:
   697                           	opt stack 0
   698                           
   699                           ; 2 bytes @ 0x43
   700  000044                     	ds	1
   701  000045                     ToMainHigh_sendmsg@data:
   702                           	opt stack 0
   703                           
   704                           ; 2 bytes @ 0x44
   705  000045                     	ds	1
   706  000046                     FromMainHigh_recvmsg@msgtype:
   707                           	opt stack 0
   708                           
   709                           ; 2 bytes @ 0x45
   710  000046                     	ds	1
   711  000047                     ToMainHigh_sendmsg@length:
   712                           	opt stack 0
   713                           
   714                           ; 1 bytes @ 0x46
   715  000047                     	ds	1
   716  000048                     ??_i2c_int_handler:
   717  000048                     FromMainHigh_recvmsg@data:
   718                           	opt stack 0
   719                           
   720                           ; 2 bytes @ 0x47
   721  000048                     	ds	2
   722  00004A                     FromMainHigh_recvmsg@maxlength:
   723                           	opt stack 0
   724                           
   725                           ; 1 bytes @ 0x49
   726  00004A                     	ds	1
   727  00004B                     tblptru	equ	0xFF8
   728                           postinc0	equ	0xFEE
   729                           wreg	equ	0xFE8
   730                           
   731                           ; 0 bytes @ 0x4A
   732 ;;
   733 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   734 ;;
   735 ;; *************** function _main *****************
   736 ;; Defined at:
   737 ;;		line 186 in file "../src/main.c"
   738 ;; Parameters:    Size  Location     Type
   739 ;;		None
   740 ;; Auto vars:     Size  Location     Type
   741 ;;  ic             28   25[BANK2 ] struct __i2c_comm
   742 ;;  msgbuffer      11    0[BANK2 ] unsigned char [11]
   743 ;;  uc              5   18[BANK2 ] struct __uart_comm
   744 ;;  t1thread_dat    2   16[BANK2 ] struct __timer1_thread_s
   745 ;;  t0thread_dat    2   13[BANK2 ] struct __timer0_thread_s
   746 ;;  uthread_data    2   11[BANK2 ] struct __uart_thread_str
   747 ;;  length          1   24[BANK2 ] char 
   748 ;;  msgtype         1   23[BANK2 ] unsigned char 
   749 ;;  last_reg_rec    1   15[BANK2 ] unsigned char 
   750 ;;  i               1    0        unsigned char 
   751 ;;  c               1    0        unsigned char 
   752 ;; Return value:  Size  Location     Type
   753 ;;		None               void
   754 ;; Registers used:
   755 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   756 ;; Tracked objects:
   757 ;;		On entry : 0/0
   758 ;;		On exit  : 0/0
   759 ;;		Unchanged: 0/0
   760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   761 ;;      Params:         0       0       0       0       0
   762 ;;      Locals:         0       0       0      53       0
   763 ;;      Temps:          0       0       0       0       0
   764 ;;      Totals:         0       0       0      53       0
   765 ;;Total ram usage:       53 bytes
   766 ;; Hardware stack levels required when called:   14
   767 ;; This function calls:
   768 ;;		_OpenTimer0
   769 ;;		_OpenTimer1
   770 ;;		_OpenUSART
   771 ;;		_ToMainHigh_recvmsg
   772 ;;		_ToMainLow_recvmsg
   773 ;;		_block_on_To_msgqueues
   774 ;;		_enable_interrupts
   775 ;;		_i2c_configure_slave
   776 ;;		_init_i2c
   777 ;;		_init_queues
   778 ;;		_init_timer1_lthread
   779 ;;		_init_uart_recv
   780 ;;		_start_i2c_slave_reply
   781 ;;		_timer0_lthread
   782 ;;		_timer1_lthread
   783 ;;		_uart_lthread
   784 ;; This function is called by:
   785 ;;		Startup code after reset
   786 ;; This function uses a non-reentrant model
   787 ;;
   788                           
   789                           	psect	text0
   790  000604                     __ptext0:
   791                           	opt stack 0
   792  000604                     _main:
   793                           	opt stack 17
   794                           
   795                           ;main.c: 187: char c;
   796                           ;main.c: 188: signed char length;
   797                           ;main.c: 189: unsigned char msgtype;
   798                           ;main.c: 190: unsigned char last_reg_recvd;
   799                           ;main.c: 191: uart_comm uc;
   800                           ;main.c: 192: i2c_comm ic;
   801                           ;main.c: 193: unsigned char msgbuffer[10 + 1];
   802                           ;main.c: 194: unsigned char i;
   803                           ;main.c: 195: uart_thread_struct uthread_data;
   804                           ;main.c: 196: timer1_thread_struct t1thread_data;
   805                           ;main.c: 197: timer0_thread_struct t0thread_data;
   806                           ;main.c: 205: OSCCON = 0x82;
   807                           
   808                           ;incstack = 0
   809  000604  0E82               	movlw	130
   810  000606  6ED3               	movwf	4051,c	;volatile
   811                           
   812                           ;main.c: 206: OSCTUNEbits.PLLEN = 0;
   813  000608  9C9B               	bcf	3995,6,c	;volatile
   814                           
   815                           ;main.c: 224: init_uart_recv(&uc);
   816  00060A  0102               	movlb	2	; () banked
   817  00060C  0E02               	movlw	high main@uc
   818  00060E  0100               	movlb	0	; () banked
   819  000610  6F98               	movwf	(init_uart_recv@uc+1)& (0+255),b
   820  000612  0102               	movlb	2	; () banked
   821  000614  0E12               	movlw	low main@uc
   822  000616  0100               	movlb	0	; () banked
   823  000618  6F97               	movwf	init_uart_recv@uc& (0+255),b
   824  00061A  EC3D  F00B         	call	_init_uart_recv	;wreg free
   825                           
   826                           ;main.c: 227: init_i2c(&ic);
   827  00061E  0102               	movlb	2	; () banked
   828  000620  0E02               	movlw	high main@ic
   829  000622  0100               	movlb	0	; () banked
   830  000624  6F98               	movwf	(init_i2c@ic+1)& (0+255),b
   831  000626  0102               	movlb	2	; () banked
   832  000628  0E19               	movlw	low main@ic
   833  00062A  0100               	movlb	0	; () banked
   834  00062C  6F97               	movwf	init_i2c@ic& (0+255),b
   835  00062E  ECF0  F007         	call	_init_i2c	;wreg free
   836                           
   837                           ;main.c: 230: init_timer1_lthread(&t1thread_data);
   838  000632  0102               	movlb	2	; () banked
   839  000634  0E02               	movlw	high main@t1thread_data
   840  000636  0100               	movlb	0	; () banked
   841  000638  6F98               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
   842  00063A  0102               	movlb	2	; () banked
   843  00063C  0E10               	movlw	low main@t1thread_data
   844  00063E  0100               	movlb	0	; () banked
   845  000640  6F97               	movwf	init_timer1_lthread@tptr& (0+255),b
   846  000642  EC72  F00B         	call	_init_timer1_lthread	;wreg free
   847                           
   848                           ;main.c: 233: init_queues();
   849  000646  EC10  F009         	call	_init_queues	;wreg free
   850                           
   851                           ;main.c: 237: TRISB = 0x0;
   852  00064A  0E00               	movlw	0
   853  00064C  6E93               	movwf	3987,c	;volatile
   854                           
   855                           ;main.c: 238: LATB = 0x0;
   856  00064E  0E00               	movlw	0
   857  000650  6E8A               	movwf	3978,c	;volatile
   858                           
   859                           ;main.c: 251: OpenTimer0(0b11111111 & 0b10111111 & 0b11011111 & 0b11110110);
   860  000652  0E96               	movlw	150
   861  000654  ECF4  F00A         	call	_OpenTimer0
   862                           
   863                           ;main.c: 260: OpenTimer1(0b11111111 & 0b11111111 & 0b11111111 & 0b11111101 & 0b11110111 
      +                          & 0b11111111);
   864  000658  0EF5               	movlw	245
   865  00065A  EC6F  F00A         	call	_OpenTimer1
   866                           
   867                           ;main.c: 267: IPR1bits.TMR1IP = 0;
   868  00065E  909F               	bcf	3999,0,c	;volatile
   869                           
   870                           ;main.c: 269: IPR1bits.RCIP = 0;
   871  000660  9A9F               	bcf	3999,5,c	;volatile
   872                           
   873                           ;main.c: 271: IPR1bits.SSPIP = 1;
   874  000662  869F               	bsf	3999,3,c	;volatile
   875                           
   876                           ;main.c: 280: i2c_configure_slave(0x9E);
   877  000664  0E9E               	movlw	158
   878  000666  ECCC  F00A         	call	_i2c_configure_slave
   879                           
   880                           ;main.c: 295: PIE1bits.SSPIE = 1;
   881  00066A  869D               	bsf	3997,3,c	;volatile
   882                           
   883                           ;main.c: 306: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
   884                           ;main.c: 307: 0b11111111 & 0b11101111, 0x19);
   885  00066C  0E00               	movlw	0
   886  00066E  0100               	movlb	0	; () banked
   887  000670  6F98               	movwf	(OpenUSART@spbrg+1)& (0+255),b
   888  000672  0E19               	movlw	25
   889  000674  0100               	movlb	0	; () banked
   890  000676  6F97               	movwf	OpenUSART@spbrg& (0+255),b
   891  000678  0E6C               	movlw	108
   892  00067A  EC70  F007         	call	_OpenUSART
   893                           
   894                           ;main.c: 313: enable_interrupts();
   895  00067E  ECAB  F00B         	call	_enable_interrupts	;wreg free
   896                           
   897                           ;main.c: 323: TRISD = 0x0;
   898  000682  0E00               	movlw	0
   899  000684  6E95               	movwf	3989,c	;volatile
   900                           
   901                           ;main.c: 324: LATD = 0xff;
   902  000686  688C               	setf	3980,c	;volatile
   903  000688                     l3415:
   904                           
   905                           ;main.c: 345: block_on_To_msgqueues();
   906  000688  ECB4  F008         	call	_block_on_To_msgqueues	;wreg free
   907                           
   908                           ;main.c: 352: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
   909  00068C  0102               	movlb	2	; () banked
   910  00068E  0E02               	movlw	high main@msgtype
   911  000690  0100               	movlb	0	; () banked
   912  000692  6FB0               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
   913  000694  0102               	movlb	2	; () banked
   914  000696  0E17               	movlw	low main@msgtype
   915  000698  0100               	movlb	0	; () banked
   916  00069A  6FAF               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
   917  00069C  0102               	movlb	2	; () banked
   918  00069E  0E02               	movlw	high main@msgbuffer
   919  0006A0  0100               	movlb	0	; () banked
   920  0006A2  6FB2               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
   921  0006A4  0102               	movlb	2	; () banked
   922  0006A6  0E00               	movlw	low main@msgbuffer
   923  0006A8  0100               	movlb	0	; () banked
   924  0006AA  6FB1               	movwf	ToMainHigh_recvmsg@data& (0+255),b
   925  0006AC  0E0A               	movlw	10
   926  0006AE  EC22  F00A         	call	_ToMainHigh_recvmsg
   927  0006B2  0102               	movlb	2	; () banked
   928  0006B4  6F18               	movwf	main@length& (0+255),b
   929                           
   930                           ; BSR set to: 2
   931                           ;main.c: 353: if (length < 0) {
   932  0006B6  0102               	movlb	2	; () banked
   933  0006B8  BF18               	btfsc	main@length& (0+255),7,b
   934  0006BA  D062               	goto	l3441
   935  0006BC  D053               	goto	l3439
   936  0006BE                     l3423:
   937                           
   938                           ; BSR set to: 2
   939                           ;main.c: 361: {
   940                           ;main.c: 362: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
   941  0006BE  0102               	movlb	2	; () banked
   942  0006C0  0E02               	movlw	high main@t0thread_data
   943  0006C2  0100               	movlb	0	; () banked
   944  0006C4  6F98               	movwf	(timer0_lthread@tptr+1)& (0+255),b
   945  0006C6  0102               	movlb	2	; () banked
   946  0006C8  0E0D               	movlw	low main@t0thread_data
   947  0006CA  0100               	movlb	0	; () banked
   948  0006CC  6F97               	movwf	timer0_lthread@tptr& (0+255),b
   949  0006CE  0102               	movlb	2	; () banked
   950  0006D0  0100               	movlb	0	; () banked
   951  0006D2  C217  F099         	movff	main@msgtype,timer0_lthread@msgtype
   952  0006D6  0100               	movlb	0	; () banked
   953  0006D8  6B9A               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
   954  0006DA  0102               	movlb	2	; () banked
   955  0006DC  5118               	movf	main@length& (0+255),w,b
   956  0006DE  0100               	movlb	0	; () banked
   957  0006E0  6F9B               	movwf	timer0_lthread@length& (0+255),b
   958  0006E2  0100               	movlb	0	; () banked
   959  0006E4  6B9C               	clrf	(timer0_lthread@length+1)& (0+255),b
   960  0006E6  0100               	movlb	0	; () banked
   961  0006E8  BF9B               	btfsc	timer0_lthread@length& (0+255),7,b
   962  0006EA  079C               	decf	(timer0_lthread@length+1)& (0+255),f,b
   963  0006EC  0102               	movlb	2	; () banked
   964  0006EE  0E02               	movlw	high main@msgbuffer
   965  0006F0  0100               	movlb	0	; () banked
   966  0006F2  6F9E               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
   967  0006F4  0102               	movlb	2	; () banked
   968  0006F6  0E00               	movlw	low main@msgbuffer
   969  0006F8  0100               	movlb	0	; () banked
   970  0006FA  6F9D               	movwf	timer0_lthread@msgbuffer& (0+255),b
   971  0006FC  EC9E  F00B         	call	_timer0_lthread	;wreg free
   972                           
   973                           ;main.c: 363: break;
   974  000700  D03F               	goto	l3441
   975  000702                     l106:
   976                           
   977                           ;main.c: 366: case 41:
   978                           ;main.c: 367: {
   979                           ;main.c: 370: last_reg_recvd = msgbuffer[0];
   980  000702  C200  F20F         	movff	main@msgbuffer,main@last_reg_recvd
   981                           
   982                           ;main.c: 371: break;
   983  000706  D03C               	goto	l3441
   984  000708                     l3425:
   985                           
   986                           ;main.c: 384: {
   987                           ;main.c: 385: length = 2;
   988  000708  0E02               	movlw	2
   989  00070A  0102               	movlb	2	; () banked
   990  00070C  6F18               	movwf	main@length& (0+255),b
   991                           
   992                           ;main.c: 386: msgbuffer[0] = 0x55;
   993  00070E  0E55               	movlw	85
   994  000710  0102               	movlb	2	; () banked
   995  000712  6F00               	movwf	main@msgbuffer& (0+255),b
   996                           
   997                           ;main.c: 387: msgbuffer[1] = 0xAA;
   998  000714  0EAA               	movlw	170
   999  000716  0102               	movlb	2	; () banked
  1000  000718  6F01               	movwf	(main@msgbuffer+1)& (0+255),b
  1001                           
  1002                           ;main.c: 388: break;
  1003  00071A  D017               	goto	l3435
  1004  00071C                     l3427:
  1005                           
  1006                           ; BSR set to: 2
  1007                           ;main.c: 391: {
  1008                           ;main.c: 392: length = 1;
  1009  00071C  0E01               	movlw	1
  1010  00071E  0102               	movlb	2	; () banked
  1011  000720  6F18               	movwf	main@length& (0+255),b
  1012                           
  1013                           ;main.c: 393: msgbuffer[0] = 0x3A;
  1014  000722  0E3A               	movlw	58
  1015  000724  D004               	goto	L1
  1016  000726                     l3429:
  1017                           
  1018                           ; BSR set to: 2
  1019                           ;main.c: 397: {
  1020                           ;main.c: 398: length = 1;
  1021  000726  0E01               	movlw	1
  1022  000728  0102               	movlb	2	; () banked
  1023  00072A  6F18               	movwf	main@length& (0+255),b
  1024                           
  1025                           ;main.c: 399: msgbuffer[0] = 0xA3;
  1026  00072C  0EA3               	movlw	163
  1027  00072E                     L1:
  1028  00072E  0102               	movlb	2	; () banked
  1029  000730  6F00               	movwf	main@msgbuffer& (0+255),b
  1030                           
  1031                           ;main.c: 400: break;
  1032  000732  D00B               	goto	l3435
  1033  000734                     l3433:
  1034  000734  0102               	movlb	2	; () banked
  1035  000736  510F               	movf	main@last_reg_recvd& (0+255),w,b
  1036                           
  1037                           ; Switch size 1, requested type "space"
  1038                           ; Number of cases is 3, Range of values is 168 to 170
  1039                           ; switch strategies available:
  1040                           ; Name         Instructions Cycles
  1041                           ; simple_byte           10     6 (average)
  1042                           ;	Chosen strategy is simple_byte
  1043  000738  0AA8               	xorlw	168	; case 168
  1044  00073A  B4D8               	btfsc	status,2,c
  1045  00073C  D7EF               	goto	l3427
  1046  00073E  0A01               	xorlw	1	; case 169
  1047  000740  B4D8               	btfsc	status,2,c
  1048  000742  D7F1               	goto	l3429
  1049  000744  0A03               	xorlw	3	; case 170
  1050  000746  B4D8               	btfsc	status,2,c
  1051  000748  D7DF               	goto	l3425
  1052  00074A                     l3435:
  1053                           
  1054                           ; BSR set to: 2
  1055                           ;main.c: 403: start_i2c_slave_reply(length, msgbuffer);
  1056  00074A  0102               	movlb	2	; () banked
  1057  00074C  0E02               	movlw	high main@msgbuffer
  1058  00074E  0100               	movlb	0	; () banked
  1059  000750  6F98               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  1060  000752  0102               	movlb	2	; () banked
  1061  000754  0E00               	movlw	low main@msgbuffer
  1062  000756  0100               	movlb	0	; () banked
  1063  000758  6F97               	movwf	start_i2c_slave_reply@msg& (0+255),b
  1064  00075A  0102               	movlb	2	; () banked
  1065  00075C  5118               	movf	main@length& (0+255),w,b
  1066  00075E  ECB8  F004         	call	_start_i2c_slave_reply
  1067                           
  1068                           ;main.c: 404: break;
  1069  000762  D00E               	goto	l3441
  1070  000764                     l3439:
  1071  000764  0102               	movlb	2	; () banked
  1072  000766  5117               	movf	main@msgtype& (0+255),w,b
  1073                           
  1074                           ; Switch size 1, requested type "space"
  1075                           ; Number of cases is 4, Range of values is 10 to 42
  1076                           ; switch strategies available:
  1077                           ; Name         Instructions Cycles
  1078                           ; simple_byte           13     7 (average)
  1079                           ;	Chosen strategy is simple_byte
  1080  000768  0A0A               	xorlw	10	; case 10
  1081  00076A  B4D8               	btfsc	status,2,c
  1082  00076C  D7A8               	goto	l3423
  1083  00076E  0A22               	xorlw	34	; case 40
  1084  000770  B4D8               	btfsc	status,2,c
  1085  000772  D7C7               	goto	l106
  1086  000774  0A01               	xorlw	1	; case 41
  1087  000776  B4D8               	btfsc	status,2,c
  1088  000778  D7C4               	goto	l106
  1089  00077A  0A03               	xorlw	3	; case 42
  1090  00077C  B4D8               	btfsc	status,2,c
  1091  00077E  D7DA               	goto	l3433
  1092  000780                     l3441:
  1093                           
  1094                           ;main.c: 412: }
  1095                           ;main.c: 415: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1096  000780  0102               	movlb	2	; () banked
  1097  000782  0E02               	movlw	high main@msgtype
  1098  000784  0100               	movlb	0	; () banked
  1099  000786  6FB0               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1100  000788  0102               	movlb	2	; () banked
  1101  00078A  0E17               	movlw	low main@msgtype
  1102  00078C  0100               	movlb	0	; () banked
  1103  00078E  6FAF               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1104  000790  0102               	movlb	2	; () banked
  1105  000792  0E02               	movlw	high main@msgbuffer
  1106  000794  0100               	movlb	0	; () banked
  1107  000796  6FB2               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1108  000798  0102               	movlb	2	; () banked
  1109  00079A  0E00               	movlw	low main@msgbuffer
  1110  00079C  0100               	movlb	0	; () banked
  1111  00079E  6FB1               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1112  0007A0  0E0A               	movlw	10
  1113  0007A2  EC07  F00A         	call	_ToMainLow_recvmsg
  1114  0007A6  0102               	movlb	2	; () banked
  1115  0007A8  6F18               	movwf	main@length& (0+255),b
  1116                           
  1117                           ; BSR set to: 2
  1118                           ;main.c: 416: if (length < 0) {
  1119  0007AA  0102               	movlb	2	; () banked
  1120  0007AC  BF18               	btfsc	main@length& (0+255),7,b
  1121  0007AE  D76C               	goto	l3415
  1122  0007B0  D044               	goto	l3453
  1123  0007B2                     l3447:
  1124                           
  1125                           ; BSR set to: 2
  1126                           ;main.c: 424: {
  1127                           ;main.c: 425: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1128  0007B2  0102               	movlb	2	; () banked
  1129  0007B4  0E02               	movlw	high main@t1thread_data
  1130  0007B6  0100               	movlb	0	; () banked
  1131  0007B8  6FB2               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1132  0007BA  0102               	movlb	2	; () banked
  1133  0007BC  0E10               	movlw	low main@t1thread_data
  1134  0007BE  0100               	movlb	0	; () banked
  1135  0007C0  6FB1               	movwf	timer1_lthread@tptr& (0+255),b
  1136  0007C2  0102               	movlb	2	; () banked
  1137  0007C4  0100               	movlb	0	; () banked
  1138  0007C6  C217  F0B3         	movff	main@msgtype,timer1_lthread@msgtype
  1139  0007CA  0100               	movlb	0	; () banked
  1140  0007CC  6BB4               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1141  0007CE  0102               	movlb	2	; () banked
  1142  0007D0  5118               	movf	main@length& (0+255),w,b
  1143  0007D2  0100               	movlb	0	; () banked
  1144  0007D4  6FB5               	movwf	timer1_lthread@length& (0+255),b
  1145  0007D6  0100               	movlb	0	; () banked
  1146  0007D8  6BB6               	clrf	(timer1_lthread@length+1)& (0+255),b
  1147  0007DA  0100               	movlb	0	; () banked
  1148  0007DC  BFB5               	btfsc	timer1_lthread@length& (0+255),7,b
  1149  0007DE  07B6               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1150  0007E0  0102               	movlb	2	; () banked
  1151  0007E2  0E02               	movlw	high main@msgbuffer
  1152  0007E4  0100               	movlb	0	; () banked
  1153  0007E6  6FB8               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1154  0007E8  0102               	movlb	2	; () banked
  1155  0007EA  0E00               	movlw	low main@msgbuffer
  1156  0007EC  0100               	movlb	0	; () banked
  1157  0007EE  6FB7               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1158  0007F0  EC85  F008         	call	_timer1_lthread	;wreg free
  1159                           
  1160                           ;main.c: 426: break;
  1161  0007F4  D749               	goto	l3415
  1162  0007F6                     l3449:
  1163                           
  1164                           ;main.c: 429: case 31:
  1165                           ;main.c: 430: {
  1166                           ;main.c: 431: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1167  0007F6  0102               	movlb	2	; () banked
  1168  0007F8  0E02               	movlw	high main@uthread_data
  1169  0007FA  0100               	movlb	0	; () banked
  1170  0007FC  6F98               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1171  0007FE  0102               	movlb	2	; () banked
  1172  000800  0E0B               	movlw	low main@uthread_data
  1173  000802  0100               	movlb	0	; () banked
  1174  000804  6F97               	movwf	uart_lthread@uptr& (0+255),b
  1175  000806  0102               	movlb	2	; () banked
  1176  000808  0100               	movlb	0	; () banked
  1177  00080A  C217  F099         	movff	main@msgtype,uart_lthread@msgtype
  1178  00080E  0100               	movlb	0	; () banked
  1179  000810  6B9A               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1180  000812  0102               	movlb	2	; () banked
  1181  000814  5118               	movf	main@length& (0+255),w,b
  1182  000816  0100               	movlb	0	; () banked
  1183  000818  6F9B               	movwf	uart_lthread@length& (0+255),b
  1184  00081A  0100               	movlb	0	; () banked
  1185  00081C  6B9C               	clrf	(uart_lthread@length+1)& (0+255),b
  1186  00081E  0100               	movlb	0	; () banked
  1187  000820  BF9B               	btfsc	uart_lthread@length& (0+255),7,b
  1188  000822  079C               	decf	(uart_lthread@length+1)& (0+255),f,b
  1189  000824  0102               	movlb	2	; () banked
  1190  000826  0E02               	movlw	high main@msgbuffer
  1191  000828  0100               	movlb	0	; () banked
  1192  00082A  6F9E               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1193  00082C  0102               	movlb	2	; () banked
  1194  00082E  0E00               	movlw	low main@msgbuffer
  1195  000830  0100               	movlb	0	; () banked
  1196  000832  6F9D               	movwf	uart_lthread@msgbuffer& (0+255),b
  1197  000834  EC3D  F00A         	call	_uart_lthread	;wreg free
  1198                           
  1199                           ;main.c: 432: break;
  1200  000838  D727               	goto	l3415
  1201  00083A                     l3453:
  1202  00083A  0102               	movlb	2	; () banked
  1203  00083C  5117               	movf	main@msgtype& (0+255),w,b
  1204                           
  1205                           ; Switch size 1, requested type "space"
  1206                           ; Number of cases is 3, Range of values is 11 to 31
  1207                           ; switch strategies available:
  1208                           ; Name         Instructions Cycles
  1209                           ; simple_byte           10     6 (average)
  1210                           ;	Chosen strategy is simple_byte
  1211  00083E  0A0B               	xorlw	11	; case 11
  1212  000840  B4D8               	btfsc	status,2,c
  1213  000842  D7B7               	goto	l3447
  1214  000844  0A15               	xorlw	21	; case 30
  1215  000846  B4D8               	btfsc	status,2,c
  1216  000848  D7D6               	goto	l3449
  1217  00084A  0A01               	xorlw	1	; case 31
  1218  00084C  B4D8               	btfsc	status,2,c
  1219  00084E  D7D3               	goto	l3449
  1220  000850  D71B               	goto	l3415
  1221  000852                     __end_of_main:
  1222                           	opt stack 0
  1223                           tblptru	equ	0xFF8
  1224                           postinc0	equ	0xFEE
  1225                           wreg	equ	0xFE8
  1226                           status	equ	0xFD8
  1227                           
  1228 ;; *************** function _uart_lthread *****************
  1229 ;; Defined at:
  1230 ;;		line 9 in file "../src/uart_thread.c"
  1231 ;; Parameters:    Size  Location     Type
  1232 ;;  uptr            2   23[BANK0 ] PTR struct __uart_thread
  1233 ;;		 -> main@uthread_data(2), 
  1234 ;;  msgtype         2   25[BANK0 ] int 
  1235 ;;  length          2   27[BANK0 ] int 
  1236 ;;  msgbuffer       2   29[BANK0 ] PTR unsigned char 
  1237 ;;		 -> main@msgbuffer(11), 
  1238 ;; Auto vars:     Size  Location     Type
  1239 ;;		None
  1240 ;; Return value:  Size  Location     Type
  1241 ;;                  2   23[BANK0 ] int 
  1242 ;; Registers used:
  1243 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1244 ;; Tracked objects:
  1245 ;;		On entry : 0/0
  1246 ;;		On exit  : 0/0
  1247 ;;		Unchanged: 0/0
  1248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1249 ;;      Params:         0       8       0       0       0
  1250 ;;      Locals:         0       0       0       0       0
  1251 ;;      Temps:          0       0       0       0       0
  1252 ;;      Totals:         0       8       0       0       0
  1253 ;;Total ram usage:        8 bytes
  1254 ;; Hardware stack levels used:    1
  1255 ;; Hardware stack levels required when called:   10
  1256 ;; This function calls:
  1257 ;;		Nothing
  1258 ;; This function is called by:
  1259 ;;		_main
  1260 ;; This function uses a non-reentrant model
  1261 ;;
  1262                           
  1263                           	psect	text1
  1264  00147A                     __ptext1:
  1265                           	opt stack 0
  1266  00147A                     _uart_lthread:
  1267                           	opt stack 20
  1268                           
  1269                           ;uart_thread.c: 10: if (msgtype == 30) {
  1270                           
  1271                           ; BSR set to: 2
  1272                           ;incstack = 0
  1273  00147A  0100               	movlb	0	; () banked
  1274  00147C  5199               	movf	uart_lthread@msgtype& (0+255),w,b
  1275  00147E  0A1E               	xorlw	30
  1276  001480  119A               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1277  001482  B4D8               	btfsc	status,2,c
  1278  001484  0012               	return	
  1279                           
  1280                           ; BSR set to: 0
  1281                           ;uart_thread.c: 12: else if (msgtype == 31) {
  1282                           
  1283                           ; BSR set to: 0
  1284                           
  1285                           ; BSR set to: 0
  1286                           ;uart_thread.c: 11: }
  1287  001486  0100               	movlb	0	; () banked
  1288  001488  5199               	movf	uart_lthread@msgtype& (0+255),w,b
  1289  00148A  0A1F               	xorlw	31
  1290  00148C  119A               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1291  00148E  A4D8               	btfss	status,2,c
  1292  001490  0012               	return	
  1293                           
  1294                           ; BSR set to: 0
  1295                           ;uart_thread.c: 15: msgbuffer[length] = '\0';
  1296  001492  0100               	movlb	0	; () banked
  1297  001494  519B               	movf	uart_lthread@length& (0+255),w,b
  1298  001496  0100               	movlb	0	; () banked
  1299  001498  259D               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1300  00149A  6ED9               	movwf	fsr2l,c
  1301  00149C  0100               	movlb	0	; () banked
  1302  00149E  519C               	movf	(uart_lthread@length+1)& (0+255),w,b
  1303  0014A0  0100               	movlb	0	; () banked
  1304  0014A2  219E               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1305  0014A4  6EDA               	movwf	fsr2h,c
  1306  0014A6  0E00               	movlw	0
  1307  0014A8  6EDF               	movwf	indf2,c
  1308  0014AA  0012               	return	
  1309  0014AC                     __end_of_uart_lthread:
  1310                           	opt stack 0
  1311                           tblptru	equ	0xFF8
  1312                           postinc0	equ	0xFEE
  1313                           wreg	equ	0xFE8
  1314                           indf2	equ	0xFDF
  1315                           fsr2h	equ	0xFDA
  1316                           fsr2l	equ	0xFD9
  1317                           status	equ	0xFD8
  1318                           
  1319 ;; *************** function _timer1_lthread *****************
  1320 ;; Defined at:
  1321 ;;		line 14 in file "../src/timer1_thread.c"
  1322 ;; Parameters:    Size  Location     Type
  1323 ;;  tptr            2   49[BANK0 ] PTR struct __timer1_thre
  1324 ;;		 -> main@t1thread_data(2), 
  1325 ;;  msgtype         2   51[BANK0 ] int 
  1326 ;;  length          2   53[BANK0 ] int 
  1327 ;;  msgbuffer       2   55[BANK0 ] PTR unsigned char 
  1328 ;;		 -> main@msgbuffer(11), 
  1329 ;; Auto vars:     Size  Location     Type
  1330 ;;  retval          1   57[BANK0 ] char 
  1331 ;; Return value:  Size  Location     Type
  1332 ;;                  2   49[BANK0 ] int 
  1333 ;; Registers used:
  1334 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1335 ;; Tracked objects:
  1336 ;;		On entry : 0/0
  1337 ;;		On exit  : 0/0
  1338 ;;		Unchanged: 0/0
  1339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1340 ;;      Params:         0       8       0       0       0
  1341 ;;      Locals:         0       1       0       0       0
  1342 ;;      Temps:          0       0       0       0       0
  1343 ;;      Totals:         0       9       0       0       0
  1344 ;;Total ram usage:        9 bytes
  1345 ;; Hardware stack levels used:    1
  1346 ;; Hardware stack levels required when called:   13
  1347 ;; This function calls:
  1348 ;;		_FromMainHigh_sendmsg
  1349 ;;		___lwmod
  1350 ;; This function is called by:
  1351 ;;		_main
  1352 ;; This function uses a non-reentrant model
  1353 ;;
  1354                           
  1355                           	psect	text2
  1356  00110A                     __ptext2:
  1357                           	opt stack 0
  1358  00110A                     _timer1_lthread:
  1359                           	opt stack 17
  1360                           
  1361                           ;timer1_thread.c: 15: signed char retval;
  1362                           ;timer1_thread.c: 17: tptr->msgcount++;
  1363                           
  1364                           ; BSR set to: 0
  1365                           ;incstack = 0
  1366  00110A  C0B1  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1367  00110E  C0B2  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1368  001112  2ADE               	incf	postinc2,f,c
  1369  001114  0E00               	movlw	0
  1370  001116  22DD               	addwfc	postdec2,f,c
  1371                           
  1372                           ;timer1_thread.c: 20: if ((tptr->msgcount % 10) == 9) {
  1373  001118  C0B1  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1374  00111C  C0B2  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1375  001120  0100               	movlb	0	; () banked
  1376  001122  CFDE F097          	movff	postinc2,___lwmod@dividend
  1377  001126  0100               	movlb	0	; () banked
  1378  001128  CFDD F098          	movff	postdec2,___lwmod@dividend+1
  1379  00112C  0E00               	movlw	0
  1380  00112E  0100               	movlb	0	; () banked
  1381  001130  6F9A               	movwf	(___lwmod@divisor+1)& (0+255),b
  1382  001132  0E0A               	movlw	10
  1383  001134  0100               	movlb	0	; () banked
  1384  001136  6F99               	movwf	___lwmod@divisor& (0+255),b
  1385  001138  EC55  F008         	call	___lwmod	;wreg free
  1386  00113C  0100               	movlb	0	; () banked
  1387  00113E  5197               	movf	?___lwmod& (0+255),w,b
  1388  001140  0A09               	xorlw	9
  1389  001142  0100               	movlb	0	; () banked
  1390  001144  1198               	iorwf	(?___lwmod+1)& (0+255),w,b
  1391  001146  A4D8               	btfss	status,2,c
  1392  001148  0012               	return	
  1393                           
  1394                           ; BSR set to: 0
  1395                           ;timer1_thread.c: 21: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1396  00114A  0E14               	movlw	20
  1397  00114C  0100               	movlb	0	; () banked
  1398  00114E  6FAD               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1399  001150  0100               	movlb	0	; () banked
  1400  001152  C0B2  F0AF         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1401  001156  0100               	movlb	0	; () banked
  1402  001158  C0B1  F0AE         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  1403  00115C  0E02               	movlw	2
  1404  00115E  EC88  F00A         	call	_FromMainHigh_sendmsg
  1405  001162  0100               	movlb	0	; () banked
  1406  001164  6FB9               	movwf	timer1_lthread@retval& (0+255),b
  1407  001166  0012               	return	
  1408  001168                     __end_of_timer1_lthread:
  1409                           	opt stack 0
  1410                           tblptru	equ	0xFF8
  1411                           postinc0	equ	0xFEE
  1412                           wreg	equ	0xFE8
  1413                           indf2	equ	0xFDF
  1414                           postinc2	equ	0xFDE
  1415                           postdec2	equ	0xFDD
  1416                           fsr2h	equ	0xFDA
  1417                           fsr2l	equ	0xFD9
  1418                           status	equ	0xFD8
  1419                           
  1420 ;; *************** function ___lwmod *****************
  1421 ;; Defined at:
  1422 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwmod.c"
  1423 ;; Parameters:    Size  Location     Type
  1424 ;;  dividend        2   23[BANK0 ] unsigned int 
  1425 ;;  divisor         2   25[BANK0 ] unsigned int 
  1426 ;; Auto vars:     Size  Location     Type
  1427 ;;  counter         1   27[BANK0 ] unsigned char 
  1428 ;; Return value:  Size  Location     Type
  1429 ;;                  2   23[BANK0 ] unsigned int 
  1430 ;; Registers used:
  1431 ;;		wreg, status,2, status,0
  1432 ;; Tracked objects:
  1433 ;;		On entry : 0/0
  1434 ;;		On exit  : 0/0
  1435 ;;		Unchanged: 0/0
  1436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1437 ;;      Params:         0       4       0       0       0
  1438 ;;      Locals:         0       1       0       0       0
  1439 ;;      Temps:          0       0       0       0       0
  1440 ;;      Totals:         0       5       0       0       0
  1441 ;;Total ram usage:        5 bytes
  1442 ;; Hardware stack levels used:    1
  1443 ;; Hardware stack levels required when called:   10
  1444 ;; This function calls:
  1445 ;;		Nothing
  1446 ;; This function is called by:
  1447 ;;		_timer1_lthread
  1448 ;; This function uses a non-reentrant model
  1449 ;;
  1450                           
  1451                           	psect	text3
  1452  0010AA                     __ptext3:
  1453                           	opt stack 0
  1454  0010AA                     ___lwmod:
  1455                           	opt stack 19
  1456                           
  1457                           ; BSR set to: 0
  1458                           ;incstack = 0
  1459  0010AA  0100               	movlb	0	; () banked
  1460  0010AC  519A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1461  0010AE  1199               	iorwf	___lwmod@divisor& (0+255),w,b
  1462  0010B0  B4D8               	btfsc	status,2,c
  1463  0010B2  D026               	goto	l1004
  1464                           
  1465                           ; BSR set to: 0
  1466  0010B4  0E01               	movlw	1
  1467  0010B6  0100               	movlb	0	; () banked
  1468  0010B8  6F9B               	movwf	___lwmod@counter& (0+255),b
  1469  0010BA  D006               	goto	l2983
  1470  0010BC                     l2981:
  1471                           
  1472                           ; BSR set to: 0
  1473  0010BC  0100               	movlb	0	; () banked
  1474  0010BE  90D8               	bcf	status,0,c
  1475  0010C0  3799               	rlcf	___lwmod@divisor& (0+255),f,b
  1476  0010C2  379A               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1477  0010C4  0100               	movlb	0	; () banked
  1478  0010C6  2B9B               	incf	___lwmod@counter& (0+255),f,b
  1479  0010C8                     l2983:
  1480                           
  1481                           ; BSR set to: 0
  1482  0010C8  0100               	movlb	0	; () banked
  1483  0010CA  AF9A               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1484  0010CC  D7F7               	goto	l2981
  1485  0010CE                     l2985:
  1486                           
  1487                           ; BSR set to: 0
  1488  0010CE  0100               	movlb	0	; () banked
  1489  0010D0  5199               	movf	___lwmod@divisor& (0+255),w,b
  1490  0010D2  0100               	movlb	0	; () banked
  1491  0010D4  5D97               	subwf	___lwmod@dividend& (0+255),w,b
  1492  0010D6  0100               	movlb	0	; () banked
  1493  0010D8  519A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1494  0010DA  0100               	movlb	0	; () banked
  1495  0010DC  5998               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1496  0010DE  A0D8               	btfss	status,0,c
  1497  0010E0  D008               	goto	l2989
  1498                           
  1499                           ; BSR set to: 0
  1500  0010E2  0100               	movlb	0	; () banked
  1501  0010E4  5199               	movf	___lwmod@divisor& (0+255),w,b
  1502  0010E6  0100               	movlb	0	; () banked
  1503  0010E8  5F97               	subwf	___lwmod@dividend& (0+255),f,b
  1504  0010EA  0100               	movlb	0	; () banked
  1505  0010EC  519A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1506  0010EE  0100               	movlb	0	; () banked
  1507  0010F0  5B98               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1508  0010F2                     l2989:
  1509                           
  1510                           ; BSR set to: 0
  1511  0010F2  0100               	movlb	0	; () banked
  1512  0010F4  90D8               	bcf	status,0,c
  1513  0010F6  339A               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1514  0010F8  3399               	rrcf	___lwmod@divisor& (0+255),f,b
  1515                           
  1516                           ; BSR set to: 0
  1517  0010FA  0100               	movlb	0	; () banked
  1518  0010FC  2F9B               	decfsz	___lwmod@counter& (0+255),f,b
  1519  0010FE  D7E7               	goto	l2985
  1520  001100                     l1004:
  1521                           
  1522                           ; BSR set to: 0
  1523  001100  C097  F097         	movff	___lwmod@dividend,?___lwmod
  1524  001104  C098  F098         	movff	___lwmod@dividend+1,?___lwmod+1
  1525                           
  1526                           ; BSR set to: 0
  1527  001108  0012               	return	
  1528  00110A                     __end_of___lwmod:
  1529                           	opt stack 0
  1530                           tblptru	equ	0xFF8
  1531                           postinc0	equ	0xFEE
  1532                           wreg	equ	0xFE8
  1533                           indf2	equ	0xFDF
  1534                           postinc2	equ	0xFDE
  1535                           postdec2	equ	0xFDD
  1536                           fsr2h	equ	0xFDA
  1537                           fsr2l	equ	0xFD9
  1538                           status	equ	0xFD8
  1539                           
  1540 ;; *************** function _FromMainHigh_sendmsg *****************
  1541 ;; Defined at:
  1542 ;;		line 174 in file "../src/messages.c"
  1543 ;; Parameters:    Size  Location     Type
  1544 ;;  length          1    wreg     unsigned char 
  1545 ;;  msgtype         1   45[BANK0 ] unsigned char 
  1546 ;;  data            2   46[BANK0 ] PTR void 
  1547 ;;		 -> main@t1thread_data(2), 
  1548 ;; Auto vars:     Size  Location     Type
  1549 ;;  length          1   48[BANK0 ] unsigned char 
  1550 ;; Return value:  Size  Location     Type
  1551 ;;                  1    wreg      char 
  1552 ;; Registers used:
  1553 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1554 ;; Tracked objects:
  1555 ;;		On entry : 0/0
  1556 ;;		On exit  : 0/0
  1557 ;;		Unchanged: 0/0
  1558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1559 ;;      Params:         0       3       0       0       0
  1560 ;;      Locals:         0       1       0       0       0
  1561 ;;      Temps:          0       0       0       0       0
  1562 ;;      Totals:         0       4       0       0       0
  1563 ;;Total ram usage:        4 bytes
  1564 ;; Hardware stack levels used:    1
  1565 ;; Hardware stack levels required when called:   12
  1566 ;; This function calls:
  1567 ;;		_send_msg
  1568 ;; This function is called by:
  1569 ;;		_timer1_lthread
  1570 ;; This function uses a non-reentrant model
  1571 ;;
  1572                           
  1573                           	psect	text4
  1574  001510                     __ptext4:
  1575                           	opt stack 0
  1576  001510                     _FromMainHigh_sendmsg:
  1577                           	opt stack 17
  1578                           
  1579                           ; BSR set to: 0
  1580                           ;incstack = 0
  1581                           ;FromMainHigh_sendmsg@length stored from wreg
  1582  001510  0100               	movlb	0	; () banked
  1583  001512  6FB0               	movwf	FromMainHigh_sendmsg@length& (0+255),b
  1584                           
  1585                           ; BSR set to: 0
  1586                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  1587  001514  0101               	movlb	1	; () banked
  1588  001516  0E01               	movlw	high _FromMainHigh_MQ
  1589  001518  0100               	movlb	0	; () banked
  1590  00151A  6FA2               	movwf	(send_msg@qptr+1)& (0+255),b
  1591  00151C  0101               	movlb	1	; () banked
  1592  00151E  0E00               	movlw	low _FromMainHigh_MQ
  1593  001520  0100               	movlb	0	; () banked
  1594  001522  6FA1               	movwf	send_msg@qptr& (0+255),b
  1595  001524  C0B0  F0A3         	movff	FromMainHigh_sendmsg@length,send_msg@length
  1596  001528  C0AD  F0A4         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  1597  00152C  0100               	movlb	0	; () banked
  1598  00152E  C0AF  F0A6         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  1599  001532  0100               	movlb	0	; () banked
  1600  001534  C0AE  F0A5         	movff	FromMainHigh_sendmsg@data,send_msg@data
  1601  001538  EC3A  F005         	call	_send_msg	;wreg free
  1602  00153C  0012               	return	
  1603  00153E                     __end_of_FromMainHigh_sendmsg:
  1604                           	opt stack 0
  1605                           tblptru	equ	0xFF8
  1606                           postinc0	equ	0xFEE
  1607                           wreg	equ	0xFE8
  1608                           indf2	equ	0xFDF
  1609                           postinc2	equ	0xFDE
  1610                           postdec2	equ	0xFDD
  1611                           fsr2h	equ	0xFDA
  1612                           fsr2l	equ	0xFD9
  1613                           status	equ	0xFD8
  1614                           
  1615 ;; *************** function _send_msg *****************
  1616 ;; Defined at:
  1617 ;;		line 24 in file "../src/messages.c"
  1618 ;; Parameters:    Size  Location     Type
  1619 ;;  qptr            2   33[BANK0 ] PTR struct __msg_queue
  1620 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  1621 ;;  length          1   35[BANK0 ] unsigned char 
  1622 ;;  msgtype         1   36[BANK0 ] unsigned char 
  1623 ;;  data            2   37[BANK0 ] PTR void 
  1624 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@t1thread_data(2), 
  1625 ;;		 -> main@ic(28), main@uc(5), 
  1626 ;; Auto vars:     Size  Location     Type
  1627 ;;  qmsg            2   43[BANK0 ] PTR struct __msg
  1628 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  1629 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  1630 ;;  tlength         2   40[BANK0 ] unsigned int 
  1631 ;;  slot            1   42[BANK0 ] unsigned char 
  1632 ;; Return value:  Size  Location     Type
  1633 ;;                  1    wreg      char 
  1634 ;; Registers used:
  1635 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1636 ;; Tracked objects:
  1637 ;;		On entry : 0/0
  1638 ;;		On exit  : 0/0
  1639 ;;		Unchanged: 0/0
  1640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1641 ;;      Params:         0       6       0       0       0
  1642 ;;      Locals:         0       5       0       0       0
  1643 ;;      Temps:          0       1       0       0       0
  1644 ;;      Totals:         0      12       0       0       0
  1645 ;;Total ram usage:       12 bytes
  1646 ;; Hardware stack levels used:    1
  1647 ;; Hardware stack levels required when called:   11
  1648 ;; This function calls:
  1649 ;;		_memcpy
  1650 ;; This function is called by:
  1651 ;;		_FromMainHigh_sendmsg
  1652 ;;		_FromMainLow_sendmsg
  1653 ;; This function uses a non-reentrant model
  1654 ;;
  1655                           
  1656                           	psect	text5
  1657  000A74                     __ptext5:
  1658                           	opt stack 0
  1659  000A74                     _send_msg:
  1660                           	opt stack 17
  1661                           
  1662                           ;messages.c: 25: unsigned char slot;
  1663                           ;messages.c: 27: msg *qmsg;
  1664                           ;messages.c: 28: size_t tlength = length;
  1665                           
  1666                           ;incstack = 0
  1667  000A74  0100               	movlb	0	; () banked
  1668  000A76  C0A3  F0A8         	movff	send_msg@length,send_msg@tlength
  1669  000A7A  0100               	movlb	0	; () banked
  1670  000A7C  6BA9               	clrf	(send_msg@tlength+1)& (0+255),b
  1671                           
  1672                           ; BSR set to: 0
  1673                           ;messages.c: 38: slot = qptr->cur_write_ind;
  1674  000A7E  0100               	movlb	0	; () banked
  1675  000A80  EE20 F034          	lfsr	2,52
  1676  000A84  0100               	movlb	0	; () banked
  1677  000A86  51A1               	movf	send_msg@qptr& (0+255),w,b
  1678  000A88  26D9               	addwf	fsr2l,f,c
  1679  000A8A  0100               	movlb	0	; () banked
  1680  000A8C  51A2               	movf	(send_msg@qptr+1)& (0+255),w,b
  1681  000A8E  22DA               	addwfc	fsr2h,f,c
  1682  000A90  50DF               	movf	indf2,w,c
  1683  000A92  0100               	movlb	0	; () banked
  1684  000A94  6FAA               	movwf	send_msg@slot& (0+255),b
  1685                           
  1686                           ; BSR set to: 0
  1687                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  1688  000A96  0100               	movlb	0	; () banked
  1689  000A98  51AA               	movf	send_msg@slot& (0+255),w,b
  1690  000A9A  0D0D               	mullw	13
  1691  000A9C  50F3               	movf	prodl,w,c
  1692  000A9E  0100               	movlb	0	; () banked
  1693  000AA0  25A1               	addwf	send_msg@qptr& (0+255),w,b
  1694  000AA2  0100               	movlb	0	; () banked
  1695  000AA4  6FAB               	movwf	send_msg@qmsg& (0+255),b
  1696  000AA6  50F4               	movf	prodh,w,c
  1697  000AA8  0100               	movlb	0	; () banked
  1698  000AAA  21A2               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  1699  000AAC  0100               	movlb	0	; () banked
  1700  000AAE  6FAC               	movwf	(send_msg@qmsg+1)& (0+255),b
  1701                           
  1702                           ; BSR set to: 0
  1703                           ;messages.c: 41: if (qmsg->full != 0) {
  1704  000AB0  C0AB  FFD9         	movff	send_msg@qmsg,fsr2l
  1705  000AB4  C0AC  FFDA         	movff	send_msg@qmsg+1,fsr2h
  1706  000AB8  50DF               	movf	indf2,w,c
  1707  000ABA  B4D8               	btfsc	status,2,c
  1708  000ABC  D002               	goto	l2769
  1709                           
  1710                           ; BSR set to: 0
  1711                           ;messages.c: 42: return (-1);
  1712  000ABE  0EFF               	movlw	255
  1713  000AC0  0012               	return	
  1714  000AC2                     l2769:
  1715                           
  1716                           ; BSR set to: 0
  1717                           ;messages.c: 43: }
  1718                           ;messages.c: 46: qmsg->length = length;
  1719  000AC2  0100               	movlb	0	; () banked
  1720  000AC4  EE20 F001          	lfsr	2,1
  1721  000AC8  0100               	movlb	0	; () banked
  1722  000ACA  51AB               	movf	send_msg@qmsg& (0+255),w,b
  1723  000ACC  26D9               	addwf	fsr2l,f,c
  1724  000ACE  0100               	movlb	0	; () banked
  1725  000AD0  51AC               	movf	(send_msg@qmsg+1)& (0+255),w,b
  1726  000AD2  22DA               	addwfc	fsr2h,f,c
  1727  000AD4  0100               	movlb	0	; () banked
  1728  000AD6  C0A3  FFDF         	movff	send_msg@length,indf2
  1729                           
  1730                           ;messages.c: 47: qmsg->msgtype = msgtype;
  1731  000ADA  0100               	movlb	0	; () banked
  1732  000ADC  EE20 F002          	lfsr	2,2
  1733  000AE0  0100               	movlb	0	; () banked
  1734  000AE2  51AB               	movf	send_msg@qmsg& (0+255),w,b
  1735  000AE4  26D9               	addwf	fsr2l,f,c
  1736  000AE6  0100               	movlb	0	; () banked
  1737  000AE8  51AC               	movf	(send_msg@qmsg+1)& (0+255),w,b
  1738  000AEA  22DA               	addwfc	fsr2h,f,c
  1739  000AEC  0100               	movlb	0	; () banked
  1740  000AEE  C0A4  FFDF         	movff	send_msg@msgtype,indf2
  1741                           
  1742                           ; BSR set to: 0
  1743                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  1744  000AF2  0E03               	movlw	3
  1745  000AF4  0100               	movlb	0	; () banked
  1746  000AF6  25AB               	addwf	send_msg@qmsg& (0+255),w,b
  1747  000AF8  0100               	movlb	0	; () banked
  1748  000AFA  6F97               	movwf	memcpy@d1& (0+255),b
  1749  000AFC  0E00               	movlw	0
  1750  000AFE  0100               	movlb	0	; () banked
  1751  000B00  21AC               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  1752  000B02  0100               	movlb	0	; () banked
  1753  000B04  6F98               	movwf	(memcpy@d1+1)& (0+255),b
  1754  000B06  0100               	movlb	0	; () banked
  1755  000B08  C0A6  F09A         	movff	send_msg@data+1,memcpy@s1+1
  1756  000B0C  0100               	movlb	0	; () banked
  1757  000B0E  C0A5  F099         	movff	send_msg@data,memcpy@s1
  1758  000B12  C0A8  F09B         	movff	send_msg@tlength,memcpy@n
  1759  000B16  C0A9  F09C         	movff	send_msg@tlength+1,memcpy@n+1
  1760  000B1A  EC3B  F009         	call	_memcpy	;wreg free
  1761                           
  1762                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  1763  000B1E  0100               	movlb	0	; () banked
  1764  000B20  EE20 F034          	lfsr	2,52
  1765  000B24  0100               	movlb	0	; () banked
  1766  000B26  51A1               	movf	send_msg@qptr& (0+255),w,b
  1767  000B28  26D9               	addwf	fsr2l,f,c
  1768  000B2A  0100               	movlb	0	; () banked
  1769  000B2C  51A2               	movf	(send_msg@qptr+1)& (0+255),w,b
  1770  000B2E  22DA               	addwfc	fsr2h,f,c
  1771  000B30  0100               	movlb	0	; () banked
  1772  000B32  EE10 F034          	lfsr	1,52
  1773  000B36  0100               	movlb	0	; () banked
  1774  000B38  51A1               	movf	send_msg@qptr& (0+255),w,b
  1775  000B3A  26E1               	addwf	fsr1l,f,c
  1776  000B3C  0100               	movlb	0	; () banked
  1777  000B3E  51A2               	movf	(send_msg@qptr+1)& (0+255),w,b
  1778  000B40  22E2               	addwfc	fsr1h,f,c
  1779  000B42  50E7               	movf	indf1,w,c
  1780  000B44  0100               	movlb	0	; () banked
  1781  000B46  6FA7               	movwf	??_send_msg& (0+255),b
  1782  000B48  0100               	movlb	0	; () banked
  1783  000B4A  29A7               	incf	??_send_msg& (0+255),w,b
  1784  000B4C  0B03               	andlw	3
  1785  000B4E  6EDF               	movwf	indf2,c
  1786                           
  1787                           ; BSR set to: 0
  1788                           ;messages.c: 59: qmsg->full = 1;
  1789  000B50  C0AB  FFD9         	movff	send_msg@qmsg,fsr2l
  1790  000B54  C0AC  FFDA         	movff	send_msg@qmsg+1,fsr2h
  1791  000B58  0E01               	movlw	1
  1792  000B5A  6EDF               	movwf	indf2,c
  1793                           
  1794                           ; BSR set to: 0
  1795                           ;messages.c: 60: return (1);
  1796  000B5C  0E01               	movlw	1
  1797  000B5E  0012               	return	
  1798  000B60                     __end_of_send_msg:
  1799                           	opt stack 0
  1800                           tblptru	equ	0xFF8
  1801                           prodh	equ	0xFF4
  1802                           prodl	equ	0xFF3
  1803                           postinc0	equ	0xFEE
  1804                           wreg	equ	0xFE8
  1805                           indf1	equ	0xFE7
  1806                           fsr1h	equ	0xFE2
  1807                           fsr1l	equ	0xFE1
  1808                           indf2	equ	0xFDF
  1809                           postinc2	equ	0xFDE
  1810                           postdec2	equ	0xFDD
  1811                           fsr2h	equ	0xFDA
  1812                           fsr2l	equ	0xFD9
  1813                           status	equ	0xFD8
  1814                           
  1815 ;; *************** function _timer0_lthread *****************
  1816 ;; Defined at:
  1817 ;;		line 9 in file "../src/timer0_thread.c"
  1818 ;; Parameters:    Size  Location     Type
  1819 ;;  tptr            2   23[BANK0 ] PTR struct __timer0_thre
  1820 ;;		 -> main@t0thread_data(2), 
  1821 ;;  msgtype         2   25[BANK0 ] int 
  1822 ;;  length          2   27[BANK0 ] int 
  1823 ;;  msgbuffer       2   29[BANK0 ] PTR unsigned char 
  1824 ;;		 -> main@msgbuffer(11), 
  1825 ;; Auto vars:     Size  Location     Type
  1826 ;;  msgval          2   31[BANK0 ] PTR unsigned int 
  1827 ;;		 -> main@msgbuffer(11), 
  1828 ;; Return value:  Size  Location     Type
  1829 ;;                  2   23[BANK0 ] int 
  1830 ;; Registers used:
  1831 ;;		wreg, status,2, status,0
  1832 ;; Tracked objects:
  1833 ;;		On entry : 0/0
  1834 ;;		On exit  : 0/0
  1835 ;;		Unchanged: 0/0
  1836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1837 ;;      Params:         0       8       0       0       0
  1838 ;;      Locals:         0       2       0       0       0
  1839 ;;      Temps:          0       0       0       0       0
  1840 ;;      Totals:         0      10       0       0       0
  1841 ;;Total ram usage:       10 bytes
  1842 ;; Hardware stack levels used:    1
  1843 ;; Hardware stack levels required when called:   10
  1844 ;; This function calls:
  1845 ;;		Nothing
  1846 ;; This function is called by:
  1847 ;;		_main
  1848 ;; This function uses a non-reentrant model
  1849 ;;
  1850                           
  1851                           	psect	text6
  1852  00173C                     __ptext6:
  1853                           	opt stack 0
  1854  00173C                     _timer0_lthread:
  1855                           	opt stack 20
  1856                           
  1857                           ;timer0_thread.c: 10: unsigned int *msgval;
  1858                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  1859                           
  1860                           ; BSR set to: 0
  1861                           ;incstack = 0
  1862  00173C  0100               	movlb	0	; () banked
  1863  00173E  C09E  F0A0         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  1864  001742  0100               	movlb	0	; () banked
  1865  001744  C09D  F09F         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  1866                           
  1867                           ; BSR set to: 0
  1868  001748  0012               	return	
  1869  00174A                     __end_of_timer0_lthread:
  1870                           	opt stack 0
  1871                           tblptru	equ	0xFF8
  1872                           prodh	equ	0xFF4
  1873                           prodl	equ	0xFF3
  1874                           postinc0	equ	0xFEE
  1875                           wreg	equ	0xFE8
  1876                           indf1	equ	0xFE7
  1877                           fsr1h	equ	0xFE2
  1878                           fsr1l	equ	0xFE1
  1879                           indf2	equ	0xFDF
  1880                           postinc2	equ	0xFDE
  1881                           postdec2	equ	0xFDD
  1882                           fsr2h	equ	0xFDA
  1883                           fsr2l	equ	0xFD9
  1884                           status	equ	0xFD8
  1885                           
  1886 ;; *************** function _start_i2c_slave_reply *****************
  1887 ;; Defined at:
  1888 ;;		line 53 in file "../src/my_i2c.c"
  1889 ;; Parameters:    Size  Location     Type
  1890 ;;  length          1    wreg     unsigned char 
  1891 ;;  msg             2   23[BANK0 ] PTR unsigned char 
  1892 ;;		 -> main@msgbuffer(11), 
  1893 ;; Auto vars:     Size  Location     Type
  1894 ;;  length          1   27[BANK0 ] unsigned char 
  1895 ;; Return value:  Size  Location     Type
  1896 ;;		None               void
  1897 ;; Registers used:
  1898 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1899 ;; Tracked objects:
  1900 ;;		On entry : 0/0
  1901 ;;		On exit  : 0/0
  1902 ;;		Unchanged: 0/0
  1903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1904 ;;      Params:         0       2       0       0       0
  1905 ;;      Locals:         0       1       0       0       0
  1906 ;;      Temps:          0       2       0       0       0
  1907 ;;      Totals:         0       5       0       0       0
  1908 ;;Total ram usage:        5 bytes
  1909 ;; Hardware stack levels used:    1
  1910 ;; Hardware stack levels required when called:   10
  1911 ;; This function calls:
  1912 ;;		Nothing
  1913 ;; This function is called by:
  1914 ;;		_main
  1915 ;; This function uses a non-reentrant model
  1916 ;;
  1917                           
  1918                           	psect	text7
  1919  000970                     __ptext7:
  1920                           	opt stack 0
  1921  000970                     _start_i2c_slave_reply:
  1922                           	opt stack 20
  1923                           
  1924                           ; BSR set to: 0
  1925                           ;incstack = 0
  1926                           ;start_i2c_slave_reply@length stored from wreg
  1927  000970  0100               	movlb	0	; () banked
  1928  000972  6F9B               	movwf	start_i2c_slave_reply@length& (0+255),b
  1929                           
  1930                           ; BSR set to: 0
  1931                           ;my_i2c.c: 55: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  1932  000974  0100               	movlb	0	; () banked
  1933  000976  EE20 F019          	lfsr	2,25
  1934  00097A  0100               	movlb	0	; () banked
  1935  00097C  51BA               	movf	_ic_ptr& (0+255),w,b
  1936  00097E  26D9               	addwf	fsr2l,f,c
  1937  000980  0100               	movlb	0	; () banked
  1938  000982  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  1939  000984  22DA               	addwfc	fsr2h,f,c
  1940  000986  0E00               	movlw	0
  1941  000988  6EDF               	movwf	indf2,c
  1942  00098A  D03E               	goto	l3325
  1943  00098C                     l3321:
  1944                           
  1945                           ; BSR set to: 0
  1946                           ;my_i2c.c: 56: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  1947  00098C  0100               	movlb	0	; () banked
  1948  00098E  EE20 F019          	lfsr	2,25
  1949  000992  0100               	movlb	0	; () banked
  1950  000994  51BA               	movf	_ic_ptr& (0+255),w,b
  1951  000996  26D9               	addwf	fsr2l,f,c
  1952  000998  0100               	movlb	0	; () banked
  1953  00099A  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  1954  00099C  22DA               	addwfc	fsr2h,f,c
  1955  00099E  50DF               	movf	indf2,w,c
  1956  0009A0  0100               	movlb	0	; () banked
  1957  0009A2  6F99               	movwf	??_start_i2c_slave_reply& (0+255),b
  1958  0009A4  0100               	movlb	0	; () banked
  1959  0009A6  5199               	movf	??_start_i2c_slave_reply& (0+255),w,b
  1960  0009A8  0D01               	mullw	1
  1961  0009AA  50F3               	movf	prodl,w,c
  1962  0009AC  0100               	movlb	0	; () banked
  1963  0009AE  2597               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  1964  0009B0  6ED9               	movwf	fsr2l,c
  1965  0009B2  50F4               	movf	prodh,w,c
  1966  0009B4  0100               	movlb	0	; () banked
  1967  0009B6  2198               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  1968  0009B8  6EDA               	movwf	fsr2h,c
  1969  0009BA  0100               	movlb	0	; () banked
  1970  0009BC  EE10 F019          	lfsr	1,25
  1971  0009C0  0100               	movlb	0	; () banked
  1972  0009C2  51BA               	movf	_ic_ptr& (0+255),w,b
  1973  0009C4  26E1               	addwf	fsr1l,f,c
  1974  0009C6  0100               	movlb	0	; () banked
  1975  0009C8  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  1976  0009CA  22E2               	addwfc	fsr1h,f,c
  1977  0009CC  50E7               	movf	indf1,w,c
  1978  0009CE  0100               	movlb	0	; () banked
  1979  0009D0  6F9A               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  1980  0009D2  0100               	movlb	0	; () banked
  1981  0009D4  519A               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  1982  0009D6  0D01               	mullw	1
  1983  0009D8  0E0F               	movlw	15
  1984  0009DA  26F3               	addwf	prodl,f,c
  1985  0009DC  0E00               	movlw	0
  1986  0009DE  22F4               	addwfc	prodh,f,c
  1987  0009E0  50F3               	movf	prodl,w,c
  1988  0009E2  0100               	movlb	0	; () banked
  1989  0009E4  25BA               	addwf	_ic_ptr& (0+255),w,b
  1990  0009E6  6EE1               	movwf	fsr1l,c
  1991  0009E8  50F4               	movf	prodh,w,c
  1992  0009EA  0100               	movlb	0	; () banked
  1993  0009EC  21BB               	addwfc	(_ic_ptr+1)& (0+255),w,b
  1994  0009EE  6EE2               	movwf	fsr1h,c
  1995  0009F0  CFDF FFE7          	movff	indf2,indf1
  1996                           
  1997                           ; BSR set to: 0
  1998  0009F4  0100               	movlb	0	; () banked
  1999  0009F6  EE20 F019          	lfsr	2,25
  2000  0009FA  0100               	movlb	0	; () banked
  2001  0009FC  51BA               	movf	_ic_ptr& (0+255),w,b
  2002  0009FE  26D9               	addwf	fsr2l,f,c
  2003  000A00  0100               	movlb	0	; () banked
  2004  000A02  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  2005  000A04  22DA               	addwfc	fsr2h,f,c
  2006  000A06  2ADF               	incf	indf2,f,c
  2007  000A08                     l3325:
  2008                           
  2009                           ; BSR set to: 0
  2010  000A08  0100               	movlb	0	; () banked
  2011  000A0A  EE20 F019          	lfsr	2,25
  2012  000A0E  0100               	movlb	0	; () banked
  2013  000A10  51BA               	movf	_ic_ptr& (0+255),w,b
  2014  000A12  26D9               	addwf	fsr2l,f,c
  2015  000A14  0100               	movlb	0	; () banked
  2016  000A16  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  2017  000A18  22DA               	addwfc	fsr2h,f,c
  2018  000A1A  50DF               	movf	indf2,w,c
  2019  000A1C  0100               	movlb	0	; () banked
  2020  000A1E  6F99               	movwf	??_start_i2c_slave_reply& (0+255),b
  2021  000A20  0100               	movlb	0	; () banked
  2022  000A22  519B               	movf	start_i2c_slave_reply@length& (0+255),w,b
  2023  000A24  0100               	movlb	0	; () banked
  2024  000A26  5D99               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  2025  000A28  A0D8               	btfss	status,0,c
  2026  000A2A  D7B0               	goto	l3321
  2027                           
  2028                           ; BSR set to: 0
  2029                           ;my_i2c.c: 57: }
  2030                           ;my_i2c.c: 58: ic_ptr->outbuflen = length;
  2031                           
  2032                           ; BSR set to: 0
  2033  000A2C  0100               	movlb	0	; () banked
  2034  000A2E  EE20 F019          	lfsr	2,25
  2035  000A32  0100               	movlb	0	; () banked
  2036  000A34  51BA               	movf	_ic_ptr& (0+255),w,b
  2037  000A36  26D9               	addwf	fsr2l,f,c
  2038  000A38  0100               	movlb	0	; () banked
  2039  000A3A  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  2040  000A3C  22DA               	addwfc	fsr2h,f,c
  2041  000A3E  0100               	movlb	0	; () banked
  2042  000A40  C09B  FFDF         	movff	start_i2c_slave_reply@length,indf2
  2043                           
  2044                           ;my_i2c.c: 59: ic_ptr->outbufind = 1;
  2045  000A44  0100               	movlb	0	; () banked
  2046  000A46  EE20 F01A          	lfsr	2,26
  2047  000A4A  0100               	movlb	0	; () banked
  2048  000A4C  51BA               	movf	_ic_ptr& (0+255),w,b
  2049  000A4E  26D9               	addwf	fsr2l,f,c
  2050  000A50  0100               	movlb	0	; () banked
  2051  000A52  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  2052  000A54  22DA               	addwfc	fsr2h,f,c
  2053  000A56  0E01               	movlw	1
  2054  000A58  6EDF               	movwf	indf2,c
  2055                           
  2056                           ;my_i2c.c: 62: SSPBUF = ic_ptr->outbuffer[0];
  2057  000A5A  0100               	movlb	0	; () banked
  2058  000A5C  EE20 F00F          	lfsr	2,15
  2059  000A60  0100               	movlb	0	; () banked
  2060  000A62  51BA               	movf	_ic_ptr& (0+255),w,b
  2061  000A64  26D9               	addwf	fsr2l,f,c
  2062  000A66  0100               	movlb	0	; () banked
  2063  000A68  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  2064  000A6A  22DA               	addwfc	fsr2h,f,c
  2065  000A6C  50DF               	movf	indf2,w,c
  2066  000A6E  6EC9               	movwf	4041,c	;volatile
  2067                           
  2068                           ; BSR set to: 0
  2069                           ;my_i2c.c: 65: SSPCON1bits.CKP = 1;
  2070  000A70  88C6               	bsf	4038,4,c	;volatile
  2071                           
  2072                           ; BSR set to: 0
  2073  000A72  0012               	return	
  2074  000A74                     __end_of_start_i2c_slave_reply:
  2075                           	opt stack 0
  2076                           tblptru	equ	0xFF8
  2077                           prodh	equ	0xFF4
  2078                           prodl	equ	0xFF3
  2079                           postinc0	equ	0xFEE
  2080                           wreg	equ	0xFE8
  2081                           indf1	equ	0xFE7
  2082                           fsr1h	equ	0xFE2
  2083                           fsr1l	equ	0xFE1
  2084                           indf2	equ	0xFDF
  2085                           postinc2	equ	0xFDE
  2086                           postdec2	equ	0xFDD
  2087                           fsr2h	equ	0xFDA
  2088                           fsr2l	equ	0xFD9
  2089                           status	equ	0xFD8
  2090                           
  2091 ;; *************** function _init_uart_recv *****************
  2092 ;; Defined at:
  2093 ;;		line 49 in file "../src/my_uart.c"
  2094 ;; Parameters:    Size  Location     Type
  2095 ;;  uc              2   23[BANK0 ] PTR struct __uart_comm
  2096 ;;		 -> main@uc(5), 
  2097 ;; Auto vars:     Size  Location     Type
  2098 ;;		None
  2099 ;; Return value:  Size  Location     Type
  2100 ;;		None               void
  2101 ;; Registers used:
  2102 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2103 ;; Tracked objects:
  2104 ;;		On entry : 0/0
  2105 ;;		On exit  : 0/0
  2106 ;;		Unchanged: 0/0
  2107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2108 ;;      Params:         0       2       0       0       0
  2109 ;;      Locals:         0       0       0       0       0
  2110 ;;      Temps:          0       0       0       0       0
  2111 ;;      Totals:         0       2       0       0       0
  2112 ;;Total ram usage:        2 bytes
  2113 ;; Hardware stack levels used:    1
  2114 ;; Hardware stack levels required when called:   10
  2115 ;; This function calls:
  2116 ;;		Nothing
  2117 ;; This function is called by:
  2118 ;;		_main
  2119 ;; This function uses a non-reentrant model
  2120 ;;
  2121                           
  2122                           	psect	text8
  2123  00167A                     __ptext8:
  2124                           	opt stack 0
  2125  00167A                     _init_uart_recv:
  2126                           	opt stack 20
  2127                           
  2128                           ;my_uart.c: 50: uc_ptr = uc;
  2129                           
  2130                           ; BSR set to: 0
  2131                           ;incstack = 0
  2132  00167A  0100               	movlb	0	; () banked
  2133  00167C  C098  F04C         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2134  001680  0100               	movlb	0	; () banked
  2135  001682  C097  F04B         	movff	init_uart_recv@uc,_uc_ptr
  2136                           
  2137                           ; BSR set to: 0
  2138                           ;my_uart.c: 51: uc_ptr->buflen = 0;
  2139  001686  EE20 F004          	lfsr	2,4
  2140  00168A  504B               	movf	_uc_ptr,w,c
  2141  00168C  26D9               	addwf	fsr2l,f,c
  2142  00168E  504C               	movf	_uc_ptr+1,w,c
  2143  001690  22DA               	addwfc	fsr2h,f,c
  2144  001692  0E00               	movlw	0
  2145  001694  6EDF               	movwf	indf2,c
  2146                           
  2147                           ; BSR set to: 0
  2148  001696  0012               	return	
  2149  001698                     __end_of_init_uart_recv:
  2150                           	opt stack 0
  2151                           tblptru	equ	0xFF8
  2152                           prodh	equ	0xFF4
  2153                           prodl	equ	0xFF3
  2154                           postinc0	equ	0xFEE
  2155                           wreg	equ	0xFE8
  2156                           indf1	equ	0xFE7
  2157                           fsr1h	equ	0xFE2
  2158                           fsr1l	equ	0xFE1
  2159                           indf2	equ	0xFDF
  2160                           postinc2	equ	0xFDE
  2161                           postdec2	equ	0xFDD
  2162                           fsr2h	equ	0xFDA
  2163                           fsr2l	equ	0xFD9
  2164                           status	equ	0xFD8
  2165                           
  2166 ;; *************** function _init_timer1_lthread *****************
  2167 ;; Defined at:
  2168 ;;		line 6 in file "../src/timer1_thread.c"
  2169 ;; Parameters:    Size  Location     Type
  2170 ;;  tptr            2   23[BANK0 ] PTR struct __timer1_thre
  2171 ;;		 -> main@t1thread_data(2), 
  2172 ;; Auto vars:     Size  Location     Type
  2173 ;;		None
  2174 ;; Return value:  Size  Location     Type
  2175 ;;		None               void
  2176 ;; Registers used:
  2177 ;;		wreg, fsr2l, fsr2h
  2178 ;; Tracked objects:
  2179 ;;		On entry : 0/0
  2180 ;;		On exit  : 0/0
  2181 ;;		Unchanged: 0/0
  2182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2183 ;;      Params:         0       2       0       0       0
  2184 ;;      Locals:         0       0       0       0       0
  2185 ;;      Temps:          0       0       0       0       0
  2186 ;;      Totals:         0       2       0       0       0
  2187 ;;Total ram usage:        2 bytes
  2188 ;; Hardware stack levels used:    1
  2189 ;; Hardware stack levels required when called:   10
  2190 ;; This function calls:
  2191 ;;		Nothing
  2192 ;; This function is called by:
  2193 ;;		_main
  2194 ;; This function uses a non-reentrant model
  2195 ;;
  2196                           
  2197                           	psect	text9
  2198  0016E4                     __ptext9:
  2199                           	opt stack 0
  2200  0016E4                     _init_timer1_lthread:
  2201                           	opt stack 20
  2202                           
  2203                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2204                           
  2205                           ; BSR set to: 0
  2206                           ;incstack = 0
  2207  0016E4  C097  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2208  0016E8  C098  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2209  0016EC  0E00               	movlw	0
  2210  0016EE  6EDE               	movwf	postinc2,c
  2211  0016F0  0E00               	movlw	0
  2212  0016F2  6EDD               	movwf	postdec2,c
  2213  0016F4  0012               	return	
  2214  0016F6                     __end_of_init_timer1_lthread:
  2215                           	opt stack 0
  2216                           tblptru	equ	0xFF8
  2217                           prodh	equ	0xFF4
  2218                           prodl	equ	0xFF3
  2219                           postinc0	equ	0xFEE
  2220                           wreg	equ	0xFE8
  2221                           indf1	equ	0xFE7
  2222                           fsr1h	equ	0xFE2
  2223                           fsr1l	equ	0xFE1
  2224                           indf2	equ	0xFDF
  2225                           postinc2	equ	0xFDE
  2226                           postdec2	equ	0xFDD
  2227                           fsr2h	equ	0xFDA
  2228                           fsr2l	equ	0xFD9
  2229                           status	equ	0xFD8
  2230                           
  2231 ;; *************** function _init_queues *****************
  2232 ;; Defined at:
  2233 ;;		line 194 in file "../src/messages.c"
  2234 ;; Parameters:    Size  Location     Type
  2235 ;;		None
  2236 ;; Auto vars:     Size  Location     Type
  2237 ;;		None
  2238 ;; Return value:  Size  Location     Type
  2239 ;;		None               void
  2240 ;; Registers used:
  2241 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2242 ;; Tracked objects:
  2243 ;;		On entry : 0/0
  2244 ;;		On exit  : 0/0
  2245 ;;		Unchanged: 0/0
  2246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2247 ;;      Params:         0       0       0       0       0
  2248 ;;      Locals:         0       0       0       0       0
  2249 ;;      Temps:          0       0       0       0       0
  2250 ;;      Totals:         0       0       0       0       0
  2251 ;;Total ram usage:        0 bytes
  2252 ;; Hardware stack levels used:    1
  2253 ;; Hardware stack levels required when called:   11
  2254 ;; This function calls:
  2255 ;;		_init_queue
  2256 ;; This function is called by:
  2257 ;;		_main
  2258 ;; This function uses a non-reentrant model
  2259 ;;
  2260                           
  2261                           	psect	text10
  2262  001220                     __ptext10:
  2263                           	opt stack 0
  2264  001220                     _init_queues:
  2265                           	opt stack 19
  2266                           
  2267                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2268                           
  2269                           ;incstack = 0
  2270  001220  0E00               	movlw	0
  2271  001222  6E4D               	movwf	_MQ_Main_Willing_to_block,c
  2272                           
  2273                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2274  001224  0101               	movlb	1	; () banked
  2275  001226  0E01               	movlw	high _ToMainLow_MQ
  2276  001228  0100               	movlb	0	; () banked
  2277  00122A  6F98               	movwf	(init_queue@qptr+1)& (0+255),b
  2278  00122C  0101               	movlb	1	; () banked
  2279  00122E  0EA2               	movlw	low _ToMainLow_MQ
  2280  001230  0100               	movlb	0	; () banked
  2281  001232  6F97               	movwf	init_queue@qptr& (0+255),b
  2282  001234  EC23  F008         	call	_init_queue	;wreg free
  2283                           
  2284                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2285  001238  0101               	movlb	1	; () banked
  2286  00123A  0E01               	movlw	high _ToMainHigh_MQ
  2287  00123C  0100               	movlb	0	; () banked
  2288  00123E  6F98               	movwf	(init_queue@qptr+1)& (0+255),b
  2289  001240  0101               	movlb	1	; () banked
  2290  001242  0E6C               	movlw	low _ToMainHigh_MQ
  2291  001244  0100               	movlb	0	; () banked
  2292  001246  6F97               	movwf	init_queue@qptr& (0+255),b
  2293  001248  EC23  F008         	call	_init_queue	;wreg free
  2294                           
  2295                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2296  00124C  0101               	movlb	1	; () banked
  2297  00124E  0E01               	movlw	high _FromMainLow_MQ
  2298  001250  0100               	movlb	0	; () banked
  2299  001252  6F98               	movwf	(init_queue@qptr+1)& (0+255),b
  2300  001254  0101               	movlb	1	; () banked
  2301  001256  0E36               	movlw	low _FromMainLow_MQ
  2302  001258  0100               	movlb	0	; () banked
  2303  00125A  6F97               	movwf	init_queue@qptr& (0+255),b
  2304  00125C  EC23  F008         	call	_init_queue	;wreg free
  2305                           
  2306                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2307  001260  0101               	movlb	1	; () banked
  2308  001262  0E01               	movlw	high _FromMainHigh_MQ
  2309  001264  0100               	movlb	0	; () banked
  2310  001266  6F98               	movwf	(init_queue@qptr+1)& (0+255),b
  2311  001268  0101               	movlb	1	; () banked
  2312  00126A  0E00               	movlw	low _FromMainHigh_MQ
  2313  00126C  0100               	movlb	0	; () banked
  2314  00126E  6F97               	movwf	init_queue@qptr& (0+255),b
  2315  001270  EC23  F008         	call	_init_queue	;wreg free
  2316  001274  0012               	return	
  2317  001276                     __end_of_init_queues:
  2318                           	opt stack 0
  2319                           tblptru	equ	0xFF8
  2320                           prodh	equ	0xFF4
  2321                           prodl	equ	0xFF3
  2322                           postinc0	equ	0xFEE
  2323                           wreg	equ	0xFE8
  2324                           indf1	equ	0xFE7
  2325                           fsr1h	equ	0xFE2
  2326                           fsr1l	equ	0xFE1
  2327                           indf2	equ	0xFDF
  2328                           postinc2	equ	0xFDE
  2329                           postdec2	equ	0xFDD
  2330                           fsr2h	equ	0xFDA
  2331                           fsr2l	equ	0xFD9
  2332                           status	equ	0xFD8
  2333                           
  2334 ;; *************** function _init_queue *****************
  2335 ;; Defined at:
  2336 ;;		line 14 in file "../src/messages.c"
  2337 ;; Parameters:    Size  Location     Type
  2338 ;;  qptr            2   23[BANK0 ] PTR struct __msg_queue
  2339 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2340 ;; Auto vars:     Size  Location     Type
  2341 ;;  i               1   25[BANK0 ] unsigned char 
  2342 ;; Return value:  Size  Location     Type
  2343 ;;		None               void
  2344 ;; Registers used:
  2345 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2346 ;; Tracked objects:
  2347 ;;		On entry : 0/0
  2348 ;;		On exit  : 0/0
  2349 ;;		Unchanged: 0/0
  2350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2351 ;;      Params:         0       2       0       0       0
  2352 ;;      Locals:         0       1       0       0       0
  2353 ;;      Temps:          0       0       0       0       0
  2354 ;;      Totals:         0       3       0       0       0
  2355 ;;Total ram usage:        3 bytes
  2356 ;; Hardware stack levels used:    1
  2357 ;; Hardware stack levels required when called:   10
  2358 ;; This function calls:
  2359 ;;		Nothing
  2360 ;; This function is called by:
  2361 ;;		_init_queues
  2362 ;; This function uses a non-reentrant model
  2363 ;;
  2364                           
  2365                           	psect	text11
  2366  001046                     __ptext11:
  2367                           	opt stack 0
  2368  001046                     _init_queue:
  2369                           	opt stack 19
  2370                           
  2371                           ;messages.c: 15: unsigned char i;
  2372                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2373                           
  2374                           ;incstack = 0
  2375  001046  0100               	movlb	0	; () banked
  2376  001048  EE20 F034          	lfsr	2,52
  2377  00104C  0100               	movlb	0	; () banked
  2378  00104E  5197               	movf	init_queue@qptr& (0+255),w,b
  2379  001050  26D9               	addwf	fsr2l,f,c
  2380  001052  0100               	movlb	0	; () banked
  2381  001054  5198               	movf	(init_queue@qptr+1)& (0+255),w,b
  2382  001056  22DA               	addwfc	fsr2h,f,c
  2383  001058  0E00               	movlw	0
  2384  00105A  6EDF               	movwf	indf2,c
  2385                           
  2386                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2387  00105C  0100               	movlb	0	; () banked
  2388  00105E  EE20 F035          	lfsr	2,53
  2389  001062  0100               	movlb	0	; () banked
  2390  001064  5197               	movf	init_queue@qptr& (0+255),w,b
  2391  001066  26D9               	addwf	fsr2l,f,c
  2392  001068  0100               	movlb	0	; () banked
  2393  00106A  5198               	movf	(init_queue@qptr+1)& (0+255),w,b
  2394  00106C  22DA               	addwfc	fsr2h,f,c
  2395  00106E  0E00               	movlw	0
  2396  001070  6EDF               	movwf	indf2,c
  2397                           
  2398                           ; BSR set to: 0
  2399                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  2400  001072  0E00               	movlw	0
  2401  001074  0100               	movlb	0	; () banked
  2402  001076  6F99               	movwf	init_queue@i& (0+255),b
  2403                           
  2404                           ; BSR set to: 0
  2405  001078  0E03               	movlw	3
  2406  00107A  0100               	movlb	0	; () banked
  2407  00107C  6599               	cpfsgt	init_queue@i& (0+255),b
  2408  00107E  D001               	goto	l2883
  2409  001080  0012               	return	
  2410  001082                     l2883:
  2411                           
  2412                           ; BSR set to: 0
  2413                           ;messages.c: 20: qptr->queue[i].full = 0;
  2414  001082  0100               	movlb	0	; () banked
  2415  001084  5199               	movf	init_queue@i& (0+255),w,b
  2416  001086  0D0D               	mullw	13
  2417  001088  50F3               	movf	prodl,w,c
  2418  00108A  0100               	movlb	0	; () banked
  2419  00108C  2597               	addwf	init_queue@qptr& (0+255),w,b
  2420  00108E  6ED9               	movwf	fsr2l,c
  2421  001090  50F4               	movf	prodh,w,c
  2422  001092  0100               	movlb	0	; () banked
  2423  001094  2198               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2424  001096  6EDA               	movwf	fsr2h,c
  2425  001098  0E00               	movlw	0
  2426  00109A  6EDF               	movwf	indf2,c
  2427                           
  2428                           ; BSR set to: 0
  2429  00109C  0100               	movlb	0	; () banked
  2430  00109E  2B99               	incf	init_queue@i& (0+255),f,b
  2431                           
  2432                           ; BSR set to: 0
  2433  0010A0  0E03               	movlw	3
  2434  0010A2  0100               	movlb	0	; () banked
  2435  0010A4  6599               	cpfsgt	init_queue@i& (0+255),b
  2436  0010A6  D7ED               	goto	l2883
  2437  0010A8  0012               	return	
  2438  0010AA                     __end_of_init_queue:
  2439                           	opt stack 0
  2440                           tblptru	equ	0xFF8
  2441                           prodh	equ	0xFF4
  2442                           prodl	equ	0xFF3
  2443                           postinc0	equ	0xFEE
  2444                           wreg	equ	0xFE8
  2445                           indf1	equ	0xFE7
  2446                           fsr1h	equ	0xFE2
  2447                           fsr1l	equ	0xFE1
  2448                           indf2	equ	0xFDF
  2449                           postinc2	equ	0xFDE
  2450                           postdec2	equ	0xFDD
  2451                           fsr2h	equ	0xFDA
  2452                           fsr2l	equ	0xFD9
  2453                           status	equ	0xFD8
  2454                           
  2455 ;; *************** function _init_i2c *****************
  2456 ;; Defined at:
  2457 ;;		line 268 in file "../src/my_i2c.c"
  2458 ;; Parameters:    Size  Location     Type
  2459 ;;  ic              2   23[BANK0 ] PTR struct __i2c_comm
  2460 ;;		 -> main@ic(28), 
  2461 ;; Auto vars:     Size  Location     Type
  2462 ;;		None
  2463 ;; Return value:  Size  Location     Type
  2464 ;;		None               void
  2465 ;; Registers used:
  2466 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2467 ;; Tracked objects:
  2468 ;;		On entry : 0/0
  2469 ;;		On exit  : 0/0
  2470 ;;		Unchanged: 0/0
  2471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2472 ;;      Params:         0       2       0       0       0
  2473 ;;      Locals:         0       0       0       0       0
  2474 ;;      Temps:          0       0       0       0       0
  2475 ;;      Totals:         0       2       0       0       0
  2476 ;;Total ram usage:        2 bytes
  2477 ;; Hardware stack levels used:    1
  2478 ;; Hardware stack levels required when called:   10
  2479 ;; This function calls:
  2480 ;;		Nothing
  2481 ;; This function is called by:
  2482 ;;		_main
  2483 ;; This function uses a non-reentrant model
  2484 ;;
  2485                           
  2486                           	psect	text12
  2487  000FE0                     __ptext12:
  2488                           	opt stack 0
  2489  000FE0                     _init_i2c:
  2490                           	opt stack 20
  2491                           
  2492                           ;my_i2c.c: 269: ic_ptr = ic;
  2493                           
  2494                           ; BSR set to: 0
  2495                           ;incstack = 0
  2496  000FE0  0100               	movlb	0	; () banked
  2497  000FE2  C098  F0BB         	movff	init_i2c@ic+1,_ic_ptr+1
  2498  000FE6  0100               	movlb	0	; () banked
  2499  000FE8  C097  F0BA         	movff	init_i2c@ic,_ic_ptr
  2500                           
  2501                           ; BSR set to: 0
  2502                           ;my_i2c.c: 270: ic_ptr->buflen = 0;
  2503  000FEC  0100               	movlb	0	; () banked
  2504  000FEE  EE20 F00A          	lfsr	2,10
  2505  000FF2  0100               	movlb	0	; () banked
  2506  000FF4  51BA               	movf	_ic_ptr& (0+255),w,b
  2507  000FF6  26D9               	addwf	fsr2l,f,c
  2508  000FF8  0100               	movlb	0	; () banked
  2509  000FFA  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  2510  000FFC  22DA               	addwfc	fsr2h,f,c
  2511  000FFE  0E00               	movlw	0
  2512  001000  6EDF               	movwf	indf2,c
  2513                           
  2514                           ; BSR set to: 0
  2515                           ;my_i2c.c: 271: ic_ptr->event_count = 0;
  2516  001002  0100               	movlb	0	; () banked
  2517  001004  EE20 F00B          	lfsr	2,11
  2518  001008  0100               	movlb	0	; () banked
  2519  00100A  51BA               	movf	_ic_ptr& (0+255),w,b
  2520  00100C  26D9               	addwf	fsr2l,f,c
  2521  00100E  0100               	movlb	0	; () banked
  2522  001010  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  2523  001012  22DA               	addwfc	fsr2h,f,c
  2524  001014  0E00               	movlw	0
  2525  001016  6EDF               	movwf	indf2,c
  2526                           
  2527                           ; BSR set to: 0
  2528                           ;my_i2c.c: 272: ic_ptr->status = 0x5;
  2529  001018  0100               	movlb	0	; () banked
  2530  00101A  EE20 F00C          	lfsr	2,12
  2531  00101E  0100               	movlb	0	; () banked
  2532  001020  51BA               	movf	_ic_ptr& (0+255),w,b
  2533  001022  26D9               	addwf	fsr2l,f,c
  2534  001024  0100               	movlb	0	; () banked
  2535  001026  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  2536  001028  22DA               	addwfc	fsr2h,f,c
  2537  00102A  0E05               	movlw	5
  2538  00102C  6EDF               	movwf	indf2,c
  2539                           
  2540                           ; BSR set to: 0
  2541                           ;my_i2c.c: 273: ic_ptr->error_count = 0;
  2542  00102E  0100               	movlb	0	; () banked
  2543  001030  EE20 F00E          	lfsr	2,14
  2544  001034  0100               	movlb	0	; () banked
  2545  001036  51BA               	movf	_ic_ptr& (0+255),w,b
  2546  001038  26D9               	addwf	fsr2l,f,c
  2547  00103A  0100               	movlb	0	; () banked
  2548  00103C  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  2549  00103E  22DA               	addwfc	fsr2h,f,c
  2550  001040  0E00               	movlw	0
  2551  001042  6EDF               	movwf	indf2,c
  2552                           
  2553                           ; BSR set to: 0
  2554  001044  0012               	return	
  2555  001046                     __end_of_init_i2c:
  2556                           	opt stack 0
  2557                           tblptru	equ	0xFF8
  2558                           prodh	equ	0xFF4
  2559                           prodl	equ	0xFF3
  2560                           postinc0	equ	0xFEE
  2561                           wreg	equ	0xFE8
  2562                           indf1	equ	0xFE7
  2563                           fsr1h	equ	0xFE2
  2564                           fsr1l	equ	0xFE1
  2565                           indf2	equ	0xFDF
  2566                           postinc2	equ	0xFDE
  2567                           postdec2	equ	0xFDD
  2568                           fsr2h	equ	0xFDA
  2569                           fsr2l	equ	0xFD9
  2570                           status	equ	0xFD8
  2571                           
  2572 ;; *************** function _i2c_configure_slave *****************
  2573 ;; Defined at:
  2574 ;;		line 279 in file "../src/my_i2c.c"
  2575 ;; Parameters:    Size  Location     Type
  2576 ;;  addr            1    wreg     unsigned char 
  2577 ;; Auto vars:     Size  Location     Type
  2578 ;;  addr            1   23[BANK0 ] unsigned char 
  2579 ;; Return value:  Size  Location     Type
  2580 ;;		None               void
  2581 ;; Registers used:
  2582 ;;		wreg, status,2, status,0
  2583 ;; Tracked objects:
  2584 ;;		On entry : 0/0
  2585 ;;		On exit  : 0/0
  2586 ;;		Unchanged: 0/0
  2587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2588 ;;      Params:         0       0       0       0       0
  2589 ;;      Locals:         0       1       0       0       0
  2590 ;;      Temps:          0       0       0       0       0
  2591 ;;      Totals:         0       1       0       0       0
  2592 ;;Total ram usage:        1 bytes
  2593 ;; Hardware stack levels used:    1
  2594 ;; Hardware stack levels required when called:   10
  2595 ;; This function calls:
  2596 ;;		Nothing
  2597 ;; This function is called by:
  2598 ;;		_main
  2599 ;; This function uses a non-reentrant model
  2600 ;;
  2601                           
  2602                           	psect	text13
  2603  001598                     __ptext13:
  2604                           	opt stack 0
  2605  001598                     _i2c_configure_slave:
  2606                           	opt stack 20
  2607                           
  2608                           ; BSR set to: 0
  2609                           ;incstack = 0
  2610                           ;i2c_configure_slave@addr stored from wreg
  2611  001598  0100               	movlb	0	; () banked
  2612  00159A  6F97               	movwf	i2c_configure_slave@addr& (0+255),b
  2613                           
  2614                           ; BSR set to: 0
  2615                           ;my_i2c.c: 291: TRISCbits.TRISC3 = 1;
  2616  00159C  8694               	bsf	3988,3,c	;volatile
  2617                           
  2618                           ;my_i2c.c: 292: TRISCbits.TRISC4 = 1;
  2619  00159E  8894               	bsf	3988,4,c	;volatile
  2620                           
  2621                           ; BSR set to: 0
  2622                           ;my_i2c.c: 297: SSPADD = addr;
  2623  0015A0  C097  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  2624                           
  2625                           ; BSR set to: 0
  2626                           ;my_i2c.c: 299: SSPSTAT = 0x0;
  2627  0015A4  0E00               	movlw	0
  2628  0015A6  6EC7               	movwf	4039,c	;volatile
  2629                           
  2630                           ; BSR set to: 0
  2631                           ;my_i2c.c: 300: SSPCON1 = 0x0;
  2632  0015A8  0E00               	movlw	0
  2633  0015AA  6EC6               	movwf	4038,c	;volatile
  2634                           
  2635                           ; BSR set to: 0
  2636                           ;my_i2c.c: 301: SSPCON2 = 0x0;
  2637  0015AC  0E00               	movlw	0
  2638  0015AE  6EC5               	movwf	4037,c	;volatile
  2639                           
  2640                           ; BSR set to: 0
  2641                           ;my_i2c.c: 302: SSPCON1 |= 0x0E;
  2642  0015B0  0E0E               	movlw	14
  2643  0015B2  12C6               	iorwf	4038,f,c	;volatile
  2644                           
  2645                           ; BSR set to: 0
  2646                           ;my_i2c.c: 303: SSPSTAT |= 0b10000000;
  2647  0015B4  8EC7               	bsf	4039,7,c	;volatile
  2648                           
  2649                           ; BSR set to: 0
  2650                           ;my_i2c.c: 306: TRISCbits.TRISC3 = 1;
  2651  0015B6  8694               	bsf	3988,3,c	;volatile
  2652                           
  2653                           ; BSR set to: 0
  2654                           ;my_i2c.c: 307: TRISCbits.TRISC4 = 1;
  2655  0015B8  8894               	bsf	3988,4,c	;volatile
  2656                           
  2657                           ; BSR set to: 0
  2658                           ;my_i2c.c: 328: SSPCON2bits.SEN = 1;
  2659  0015BA  80C5               	bsf	4037,0,c	;volatile
  2660                           
  2661                           ; BSR set to: 0
  2662                           ;my_i2c.c: 329: SSPCON1 |= 0b00100000;
  2663  0015BC  8AC6               	bsf	4038,5,c	;volatile
  2664                           
  2665                           ; BSR set to: 0
  2666  0015BE  0012               	return	
  2667  0015C0                     __end_of_i2c_configure_slave:
  2668                           	opt stack 0
  2669                           tblptru	equ	0xFF8
  2670                           prodh	equ	0xFF4
  2671                           prodl	equ	0xFF3
  2672                           postinc0	equ	0xFEE
  2673                           wreg	equ	0xFE8
  2674                           indf1	equ	0xFE7
  2675                           fsr1h	equ	0xFE2
  2676                           fsr1l	equ	0xFE1
  2677                           indf2	equ	0xFDF
  2678                           postinc2	equ	0xFDE
  2679                           postdec2	equ	0xFDD
  2680                           fsr2h	equ	0xFDA
  2681                           fsr2l	equ	0xFD9
  2682                           status	equ	0xFD8
  2683                           
  2684 ;; *************** function _enable_interrupts *****************
  2685 ;; Defined at:
  2686 ;;		line 14 in file "../src/interrupts.c"
  2687 ;; Parameters:    Size  Location     Type
  2688 ;;		None
  2689 ;; Auto vars:     Size  Location     Type
  2690 ;;		None
  2691 ;; Return value:  Size  Location     Type
  2692 ;;		None               void
  2693 ;; Registers used:
  2694 ;;		None
  2695 ;; Tracked objects:
  2696 ;;		On entry : 0/0
  2697 ;;		On exit  : 0/0
  2698 ;;		Unchanged: 0/0
  2699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2700 ;;      Params:         0       0       0       0       0
  2701 ;;      Locals:         0       0       0       0       0
  2702 ;;      Temps:          0       0       0       0       0
  2703 ;;      Totals:         0       0       0       0       0
  2704 ;;Total ram usage:        0 bytes
  2705 ;; Hardware stack levels used:    1
  2706 ;; Hardware stack levels required when called:   10
  2707 ;; This function calls:
  2708 ;;		Nothing
  2709 ;; This function is called by:
  2710 ;;		_main
  2711 ;; This function uses a non-reentrant model
  2712 ;;
  2713                           
  2714                           	psect	text14
  2715  001756                     __ptext14:
  2716                           	opt stack 0
  2717  001756                     _enable_interrupts:
  2718                           	opt stack 20
  2719                           
  2720                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  2721                           
  2722                           ; BSR set to: 0
  2723                           ;incstack = 0
  2724  001756  8ED0               	bsf	4048,7,c	;volatile
  2725                           
  2726                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  2727  001758  8EF2               	bsf	intcon,7,c	;volatile
  2728                           
  2729                           ;interrupts.c: 19: INTCONbits.GIEL = 1;
  2730  00175A  8CF2               	bsf	intcon,6,c	;volatile
  2731  00175C  0012               	return	
  2732  00175E                     __end_of_enable_interrupts:
  2733                           	opt stack 0
  2734                           tblptru	equ	0xFF8
  2735                           prodh	equ	0xFF4
  2736                           prodl	equ	0xFF3
  2737                           intcon	equ	0xFF2
  2738                           postinc0	equ	0xFEE
  2739                           wreg	equ	0xFE8
  2740                           indf1	equ	0xFE7
  2741                           fsr1h	equ	0xFE2
  2742                           fsr1l	equ	0xFE1
  2743                           indf2	equ	0xFDF
  2744                           postinc2	equ	0xFDE
  2745                           postdec2	equ	0xFDD
  2746                           fsr2h	equ	0xFDA
  2747                           fsr2l	equ	0xFD9
  2748                           status	equ	0xFD8
  2749                           
  2750 ;; *************** function _block_on_To_msgqueues *****************
  2751 ;; Defined at:
  2752 ;;		line 256 in file "../src/messages.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;		None
  2755 ;; Auto vars:     Size  Location     Type
  2756 ;;		None
  2757 ;; Return value:  Size  Location     Type
  2758 ;;		None               void
  2759 ;; Registers used:
  2760 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2761 ;; Tracked objects:
  2762 ;;		On entry : 0/0
  2763 ;;		On exit  : 0/0
  2764 ;;		Unchanged: 0/0
  2765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2766 ;;      Params:         0       0       0       0       0
  2767 ;;      Locals:         0       0       0       0       0
  2768 ;;      Temps:          0       0       0       0       0
  2769 ;;      Totals:         0       0       0       0       0
  2770 ;;Total ram usage:        0 bytes
  2771 ;; Hardware stack levels used:    1
  2772 ;; Hardware stack levels required when called:   13
  2773 ;; This function calls:
  2774 ;;		_Delay1KTCYx
  2775 ;;		_check_msg
  2776 ;;		_in_main
  2777 ;; This function is called by:
  2778 ;;		_main
  2779 ;; This function uses a non-reentrant model
  2780 ;;
  2781                           
  2782                           	psect	text15
  2783  001168                     __ptext15:
  2784                           	opt stack 0
  2785  001168                     _block_on_To_msgqueues:
  2786                           	opt stack 17
  2787                           
  2788                           ;messages.c: 257: if (!in_main()) {
  2789                           
  2790                           ;incstack = 0
  2791  001168  ECE9  F009         	call	_in_main	;wreg free
  2792  00116C  0100               	movlb	0	; () banked
  2793  00116E  519C               	movf	(?_in_main+1)& (0+255),w,b
  2794  001170  0100               	movlb	0	; () banked
  2795  001172  119B               	iorwf	?_in_main& (0+255),w,b
  2796  001174  B4D8               	btfsc	status,2,c
  2797  001176  0012               	return	
  2798                           
  2799                           ; BSR set to: 0
  2800                           ;messages.c: 259: }
  2801                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  2802                           
  2803                           ; BSR set to: 0
  2804                           
  2805                           ; BSR set to: 0
  2806                           ;messages.c: 258: return;
  2807  001178  0E01               	movlw	1
  2808  00117A  6E4D               	movwf	_MQ_Main_Willing_to_block,c
  2809  00117C                     l3299:
  2810                           
  2811                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  2812  00117C  0101               	movlb	1	; () banked
  2813  00117E  0E01               	movlw	high _ToMainHigh_MQ
  2814  001180  0100               	movlb	0	; () banked
  2815  001182  6F98               	movwf	(check_msg@qptr+1)& (0+255),b
  2816  001184  0101               	movlb	1	; () banked
  2817  001186  0E6C               	movlw	low _ToMainHigh_MQ
  2818  001188  0100               	movlb	0	; () banked
  2819  00118A  6F97               	movwf	check_msg@qptr& (0+255),b
  2820  00118C  EC56  F00A         	call	_check_msg	;wreg free
  2821  001190  0900               	iorlw	0
  2822  001192  B4D8               	btfsc	status,2,c
  2823  001194  D003               	goto	l3305
  2824                           
  2825                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  2826  001196  0E00               	movlw	0
  2827  001198  6E4D               	movwf	_MQ_Main_Willing_to_block,c
  2828  00119A  0012               	return	
  2829  00119C                     l3305:
  2830                           
  2831                           ;messages.c: 271: }
  2832                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  2833  00119C  0101               	movlb	1	; () banked
  2834  00119E  0E01               	movlw	high _ToMainLow_MQ
  2835  0011A0  0100               	movlb	0	; () banked
  2836  0011A2  6F98               	movwf	(check_msg@qptr+1)& (0+255),b
  2837  0011A4  0101               	movlb	1	; () banked
  2838  0011A6  0EA2               	movlw	low _ToMainLow_MQ
  2839  0011A8  0100               	movlb	0	; () banked
  2840  0011AA  6F97               	movwf	check_msg@qptr& (0+255),b
  2841  0011AC  EC56  F00A         	call	_check_msg	;wreg free
  2842  0011B0  0900               	iorlw	0
  2843  0011B2  B4D8               	btfsc	status,2,c
  2844  0011B4  D003               	goto	l3311
  2845                           
  2846                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  2847  0011B6  0E00               	movlw	0
  2848  0011B8  6E4D               	movwf	_MQ_Main_Willing_to_block,c
  2849  0011BA  0012               	return	
  2850  0011BC                     l3311:
  2851                           
  2852                           ;messages.c: 278: }
  2853                           ;messages.c: 279: Delay1KTCYx(10);
  2854  0011BC  0E0A               	movlw	10
  2855  0011BE  EC68  F00B         	call	_Delay1KTCYx
  2856  0011C2  D7DC               	goto	l3299
  2857  0011C4                     __end_of_block_on_To_msgqueues:
  2858                           	opt stack 0
  2859                           tblptru	equ	0xFF8
  2860                           prodh	equ	0xFF4
  2861                           prodl	equ	0xFF3
  2862                           intcon	equ	0xFF2
  2863                           postinc0	equ	0xFEE
  2864                           wreg	equ	0xFE8
  2865                           indf1	equ	0xFE7
  2866                           fsr1h	equ	0xFE2
  2867                           fsr1l	equ	0xFE1
  2868                           indf2	equ	0xFDF
  2869                           postinc2	equ	0xFDE
  2870                           postdec2	equ	0xFDD
  2871                           fsr2h	equ	0xFDA
  2872                           fsr2l	equ	0xFD9
  2873                           status	equ	0xFD8
  2874                           
  2875 ;; *************** function _in_main *****************
  2876 ;; Defined at:
  2877 ;;		line 40 in file "../src/interrupts.c"
  2878 ;; Parameters:    Size  Location     Type
  2879 ;;		None
  2880 ;; Auto vars:     Size  Location     Type
  2881 ;;		None
  2882 ;; Return value:  Size  Location     Type
  2883 ;;                  2   27[BANK0 ] int 
  2884 ;; Registers used:
  2885 ;;		wreg, status,2, status,0, cstack
  2886 ;; Tracked objects:
  2887 ;;		On entry : 0/0
  2888 ;;		On exit  : 0/0
  2889 ;;		Unchanged: 0/0
  2890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2891 ;;      Params:         0       2       0       0       0
  2892 ;;      Locals:         0       0       0       0       0
  2893 ;;      Temps:          0       0       0       0       0
  2894 ;;      Totals:         0       2       0       0       0
  2895 ;;Total ram usage:        2 bytes
  2896 ;; Hardware stack levels used:    1
  2897 ;; Hardware stack levels required when called:   12
  2898 ;; This function calls:
  2899 ;;		_in_high_int
  2900 ;;		_in_low_int
  2901 ;; This function is called by:
  2902 ;;		_block_on_To_msgqueues
  2903 ;; This function uses a non-reentrant model
  2904 ;;
  2905                           
  2906                           	psect	text16
  2907  0013D2                     __ptext16:
  2908                           	opt stack 0
  2909  0013D2                     _in_main:
  2910                           	opt stack 17
  2911                           
  2912                           ;interrupts.c: 41: if ((!in_low_int()) && (!in_high_int())) {
  2913                           
  2914                           ;incstack = 0
  2915  0013D2  ECCA  F009         	call	_in_low_int	;wreg free
  2916  0013D6  0100               	movlb	0	; () banked
  2917  0013D8  519A               	movf	(?_in_low_int+1)& (0+255),w,b
  2918  0013DA  0100               	movlb	0	; () banked
  2919  0013DC  1199               	iorwf	?_in_low_int& (0+255),w,b
  2920  0013DE  A4D8               	btfss	status,2,c
  2921  0013E0  D00F               	goto	l2871
  2922                           
  2923                           ; BSR set to: 0
  2924  0013E2  EC96  F00B         	call	_in_high_int	;wreg free
  2925  0013E6  0100               	movlb	0	; () banked
  2926  0013E8  5198               	movf	(?_in_high_int+1)& (0+255),w,b
  2927  0013EA  0100               	movlb	0	; () banked
  2928  0013EC  1197               	iorwf	?_in_high_int& (0+255),w,b
  2929  0013EE  A4D8               	btfss	status,2,c
  2930  0013F0  D007               	goto	l2871
  2931                           
  2932                           ; BSR set to: 0
  2933                           ;interrupts.c: 42: return (1);
  2934  0013F2  0E00               	movlw	0
  2935  0013F4  0100               	movlb	0	; () banked
  2936  0013F6  6F9C               	movwf	(?_in_main+1)& (0+255),b
  2937  0013F8  0E01               	movlw	1
  2938  0013FA  0100               	movlb	0	; () banked
  2939  0013FC  6F9B               	movwf	?_in_main& (0+255),b
  2940  0013FE  0012               	return	
  2941  001400                     l2871:
  2942                           
  2943                           ; BSR set to: 0
  2944                           ;interrupts.c: 44: return (0);
  2945  001400  0E00               	movlw	0
  2946  001402  0100               	movlb	0	; () banked
  2947  001404  6F9C               	movwf	(?_in_main+1)& (0+255),b
  2948  001406  0E00               	movlw	0
  2949  001408  0100               	movlb	0	; () banked
  2950  00140A  6F9B               	movwf	?_in_main& (0+255),b
  2951  00140C  0012               	return	
  2952  00140E                     __end_of_in_main:
  2953                           	opt stack 0
  2954                           tblptru	equ	0xFF8
  2955                           prodh	equ	0xFF4
  2956                           prodl	equ	0xFF3
  2957                           intcon	equ	0xFF2
  2958                           postinc0	equ	0xFEE
  2959                           wreg	equ	0xFE8
  2960                           indf1	equ	0xFE7
  2961                           fsr1h	equ	0xFE2
  2962                           fsr1l	equ	0xFE1
  2963                           indf2	equ	0xFDF
  2964                           postinc2	equ	0xFDE
  2965                           postdec2	equ	0xFDD
  2966                           fsr2h	equ	0xFDA
  2967                           fsr2l	equ	0xFD9
  2968                           status	equ	0xFD8
  2969                           
  2970 ;; *************** function _in_low_int *****************
  2971 ;; Defined at:
  2972 ;;		line 30 in file "../src/interrupts.c"
  2973 ;; Parameters:    Size  Location     Type
  2974 ;;		None
  2975 ;; Auto vars:     Size  Location     Type
  2976 ;;		None
  2977 ;; Return value:  Size  Location     Type
  2978 ;;                  2   25[BANK0 ] int 
  2979 ;; Registers used:
  2980 ;;		wreg, status,2, status,0, cstack
  2981 ;; Tracked objects:
  2982 ;;		On entry : 0/0
  2983 ;;		On exit  : 0/0
  2984 ;;		Unchanged: 0/0
  2985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2986 ;;      Params:         0       2       0       0       0
  2987 ;;      Locals:         0       0       0       0       0
  2988 ;;      Temps:          0       0       0       0       0
  2989 ;;      Totals:         0       2       0       0       0
  2990 ;;Total ram usage:        2 bytes
  2991 ;; Hardware stack levels used:    1
  2992 ;; Hardware stack levels required when called:   11
  2993 ;; This function calls:
  2994 ;;		_in_high_int
  2995 ;; This function is called by:
  2996 ;;		_in_main
  2997 ;; This function uses a non-reentrant model
  2998 ;;
  2999                           
  3000                           	psect	text17
  3001  001394                     __ptext17:
  3002                           	opt stack 0
  3003  001394                     _in_low_int:
  3004                           	opt stack 17
  3005                           
  3006                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  3007                           
  3008                           ; BSR set to: 0
  3009                           ;incstack = 0
  3010  001394  ACF2               	btfss	intcon,6,c	;volatile
  3011  001396  D007               	goto	l2745
  3012                           
  3013                           ;interrupts.c: 32: return (0);
  3014  001398  0E00               	movlw	0
  3015  00139A  0100               	movlb	0	; () banked
  3016  00139C  6F9A               	movwf	(?_in_low_int+1)& (0+255),b
  3017  00139E  0E00               	movlw	0
  3018  0013A0  0100               	movlb	0	; () banked
  3019  0013A2  6F99               	movwf	?_in_low_int& (0+255),b
  3020  0013A4  0012               	return	
  3021  0013A6                     l2745:
  3022  0013A6  EC96  F00B         	call	_in_high_int	;wreg free
  3023  0013AA  0100               	movlb	0	; () banked
  3024  0013AC  5198               	movf	(?_in_high_int+1)& (0+255),w,b
  3025  0013AE  0100               	movlb	0	; () banked
  3026  0013B0  1197               	iorwf	?_in_high_int& (0+255),w,b
  3027  0013B2  B4D8               	btfsc	status,2,c
  3028  0013B4  D007               	goto	l2753
  3029                           
  3030                           ; BSR set to: 0
  3031                           ;interrupts.c: 34: return (0);
  3032  0013B6  0E00               	movlw	0
  3033  0013B8  0100               	movlb	0	; () banked
  3034  0013BA  6F9A               	movwf	(?_in_low_int+1)& (0+255),b
  3035  0013BC  0E00               	movlw	0
  3036  0013BE  0100               	movlb	0	; () banked
  3037  0013C0  6F99               	movwf	?_in_low_int& (0+255),b
  3038  0013C2  0012               	return	
  3039  0013C4                     l2753:
  3040                           
  3041                           ; BSR set to: 0
  3042                           ;interrupts.c: 36: return (1);
  3043  0013C4  0E00               	movlw	0
  3044  0013C6  0100               	movlb	0	; () banked
  3045  0013C8  6F9A               	movwf	(?_in_low_int+1)& (0+255),b
  3046  0013CA  0E01               	movlw	1
  3047  0013CC  0100               	movlb	0	; () banked
  3048  0013CE  6F99               	movwf	?_in_low_int& (0+255),b
  3049  0013D0  0012               	return	
  3050  0013D2                     __end_of_in_low_int:
  3051                           	opt stack 0
  3052                           tblptru	equ	0xFF8
  3053                           prodh	equ	0xFF4
  3054                           prodl	equ	0xFF3
  3055                           intcon	equ	0xFF2
  3056                           postinc0	equ	0xFEE
  3057                           wreg	equ	0xFE8
  3058                           indf1	equ	0xFE7
  3059                           fsr1h	equ	0xFE2
  3060                           fsr1l	equ	0xFE1
  3061                           indf2	equ	0xFDF
  3062                           postinc2	equ	0xFDE
  3063                           postdec2	equ	0xFDD
  3064                           fsr2h	equ	0xFDA
  3065                           fsr2l	equ	0xFD9
  3066                           status	equ	0xFD8
  3067                           
  3068 ;; *************** function _in_high_int *****************
  3069 ;; Defined at:
  3070 ;;		line 22 in file "../src/interrupts.c"
  3071 ;; Parameters:    Size  Location     Type
  3072 ;;		None
  3073 ;; Auto vars:     Size  Location     Type
  3074 ;;		None
  3075 ;; Return value:  Size  Location     Type
  3076 ;;                  2   23[BANK0 ] int 
  3077 ;; Registers used:
  3078 ;;		wreg, status,2
  3079 ;; Tracked objects:
  3080 ;;		On entry : 0/0
  3081 ;;		On exit  : 0/0
  3082 ;;		Unchanged: 0/0
  3083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3084 ;;      Params:         0       2       0       0       0
  3085 ;;      Locals:         0       0       0       0       0
  3086 ;;      Temps:          0       0       0       0       0
  3087 ;;      Totals:         0       2       0       0       0
  3088 ;;Total ram usage:        2 bytes
  3089 ;; Hardware stack levels used:    1
  3090 ;; Hardware stack levels required when called:   10
  3091 ;; This function calls:
  3092 ;;		Nothing
  3093 ;; This function is called by:
  3094 ;;		_in_low_int
  3095 ;;		_in_main
  3096 ;; This function uses a non-reentrant model
  3097 ;;
  3098                           
  3099                           	psect	text18
  3100  00172C                     __ptext18:
  3101                           	opt stack 0
  3102  00172C                     _in_high_int:
  3103                           	opt stack 17
  3104                           
  3105                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  3106                           
  3107                           ; BSR set to: 0
  3108                           ;incstack = 0
  3109  00172C  0E00               	movlw	0
  3110  00172E  AEF2               	btfss	intcon,7,c	;volatile
  3111  001730  0E01               	movlw	1
  3112  001732  0100               	movlb	0	; () banked
  3113  001734  6F97               	movwf	?_in_high_int& (0+255),b
  3114  001736  0100               	movlb	0	; () banked
  3115  001738  6B98               	clrf	(?_in_high_int+1)& (0+255),b
  3116  00173A  0012               	return	
  3117  00173C                     __end_of_in_high_int:
  3118                           	opt stack 0
  3119                           tblptru	equ	0xFF8
  3120                           prodh	equ	0xFF4
  3121                           prodl	equ	0xFF3
  3122                           intcon	equ	0xFF2
  3123                           postinc0	equ	0xFEE
  3124                           wreg	equ	0xFE8
  3125                           indf1	equ	0xFE7
  3126                           fsr1h	equ	0xFE2
  3127                           fsr1l	equ	0xFE1
  3128                           indf2	equ	0xFDF
  3129                           postinc2	equ	0xFDE
  3130                           postdec2	equ	0xFDD
  3131                           fsr2h	equ	0xFDA
  3132                           fsr2l	equ	0xFD9
  3133                           status	equ	0xFD8
  3134                           
  3135 ;; *************** function _check_msg *****************
  3136 ;; Defined at:
  3137 ;;		line 220 in file "../src/messages.c"
  3138 ;; Parameters:    Size  Location     Type
  3139 ;;  qptr            2   23[BANK0 ] PTR struct __msg_queue
  3140 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3141 ;; Auto vars:     Size  Location     Type
  3142 ;;		None
  3143 ;; Return value:  Size  Location     Type
  3144 ;;                  1    wreg      unsigned char 
  3145 ;; Registers used:
  3146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3147 ;; Tracked objects:
  3148 ;;		On entry : 0/0
  3149 ;;		On exit  : 0/0
  3150 ;;		Unchanged: 0/0
  3151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3152 ;;      Params:         0       2       0       0       0
  3153 ;;      Locals:         0       0       0       0       0
  3154 ;;      Temps:          0       1       0       0       0
  3155 ;;      Totals:         0       3       0       0       0
  3156 ;;Total ram usage:        3 bytes
  3157 ;; Hardware stack levels used:    1
  3158 ;; Hardware stack levels required when called:   10
  3159 ;; This function calls:
  3160 ;;		Nothing
  3161 ;; This function is called by:
  3162 ;;		_block_on_To_msgqueues
  3163 ;; This function uses a non-reentrant model
  3164 ;;
  3165                           
  3166                           	psect	text19
  3167  0014AC                     __ptext19:
  3168                           	opt stack 0
  3169  0014AC                     _check_msg:
  3170                           	opt stack 19
  3171                           
  3172                           ;messages.c: 221: return (qptr->queue[qptr->cur_read_ind].full);
  3173                           
  3174                           ; BSR set to: 0
  3175                           ;incstack = 0
  3176  0014AC  0100               	movlb	0	; () banked
  3177  0014AE  EE20 F035          	lfsr	2,53
  3178  0014B2  0100               	movlb	0	; () banked
  3179  0014B4  5197               	movf	check_msg@qptr& (0+255),w,b
  3180  0014B6  26D9               	addwf	fsr2l,f,c
  3181  0014B8  0100               	movlb	0	; () banked
  3182  0014BA  5198               	movf	(check_msg@qptr+1)& (0+255),w,b
  3183  0014BC  22DA               	addwfc	fsr2h,f,c
  3184  0014BE  50DF               	movf	indf2,w,c
  3185  0014C0  0100               	movlb	0	; () banked
  3186  0014C2  6F99               	movwf	??_check_msg& (0+255),b
  3187  0014C4  0100               	movlb	0	; () banked
  3188  0014C6  5199               	movf	??_check_msg& (0+255),w,b
  3189  0014C8  0D0D               	mullw	13
  3190  0014CA  50F3               	movf	prodl,w,c
  3191  0014CC  0100               	movlb	0	; () banked
  3192  0014CE  2597               	addwf	check_msg@qptr& (0+255),w,b
  3193  0014D0  6ED9               	movwf	fsr2l,c
  3194  0014D2  50F4               	movf	prodh,w,c
  3195  0014D4  0100               	movlb	0	; () banked
  3196  0014D6  2198               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  3197  0014D8  6EDA               	movwf	fsr2h,c
  3198  0014DA  50DF               	movf	indf2,w,c
  3199  0014DC  0012               	return	
  3200  0014DE                     __end_of_check_msg:
  3201                           	opt stack 0
  3202                           tblptru	equ	0xFF8
  3203                           prodh	equ	0xFF4
  3204                           prodl	equ	0xFF3
  3205                           intcon	equ	0xFF2
  3206                           postinc0	equ	0xFEE
  3207                           wreg	equ	0xFE8
  3208                           indf1	equ	0xFE7
  3209                           fsr1h	equ	0xFE2
  3210                           fsr1l	equ	0xFE1
  3211                           indf2	equ	0xFDF
  3212                           postinc2	equ	0xFDE
  3213                           postdec2	equ	0xFDD
  3214                           fsr2h	equ	0xFDA
  3215                           fsr2l	equ	0xFD9
  3216                           status	equ	0xFD8
  3217                           
  3218 ;; *************** function _Delay1KTCYx *****************
  3219 ;; Defined at:
  3220 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\d1ktcyx.c"
  3221 ;; Parameters:    Size  Location     Type
  3222 ;;  unit            1    wreg     unsigned char 
  3223 ;; Auto vars:     Size  Location     Type
  3224 ;;  unit            1   23[BANK0 ] unsigned char 
  3225 ;; Return value:  Size  Location     Type
  3226 ;;		None               void
  3227 ;; Registers used:
  3228 ;;		wreg
  3229 ;; Tracked objects:
  3230 ;;		On entry : 0/0
  3231 ;;		On exit  : 0/0
  3232 ;;		Unchanged: 0/0
  3233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3234 ;;      Params:         0       0       0       0       0
  3235 ;;      Locals:         0       1       0       0       0
  3236 ;;      Temps:          0       0       0       0       0
  3237 ;;      Totals:         0       1       0       0       0
  3238 ;;Total ram usage:        1 bytes
  3239 ;; Hardware stack levels used:    1
  3240 ;; Hardware stack levels required when called:   10
  3241 ;; This function calls:
  3242 ;;		Nothing
  3243 ;; This function is called by:
  3244 ;;		_block_on_To_msgqueues
  3245 ;; This function uses a non-reentrant model
  3246 ;;
  3247                           
  3248                           	psect	text20
  3249  0016D0                     __ptext20:
  3250                           	opt stack 0
  3251  0016D0                     _Delay1KTCYx:
  3252                           	opt stack 19
  3253                           
  3254                           ; BSR set to: 0
  3255                           ;incstack = 0
  3256                           ;Delay1KTCYx@unit stored from wreg
  3257  0016D0  0100               	movlb	0	; () banked
  3258  0016D2  6F97               	movwf	Delay1KTCYx@unit& (0+255),b
  3259  0016D4                     l698:
  3260                           
  3261                           ; BSR set to: 0
  3262                           
  3263                           ; BSR set to: 0
  3264  0016D4  0EFA               	movlw	250
  3265  0016D6                     u2617:
  3266  0016D6  F000               	nop	
  3267  0016D8  2EE8               	decfsz	wreg,f,c
  3268  0016DA  D7FD               	goto	u2617
  3269  0016DC  0100               	movlb	0	; () banked
  3270  0016DE  2F97               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  3271  0016E0  D7F9               	goto	l698
  3272  0016E2  0012               	return	
  3273  0016E4                     __end_of_Delay1KTCYx:
  3274                           	opt stack 0
  3275                           tblptru	equ	0xFF8
  3276                           prodh	equ	0xFF4
  3277                           prodl	equ	0xFF3
  3278                           intcon	equ	0xFF2
  3279                           postinc0	equ	0xFEE
  3280                           wreg	equ	0xFE8
  3281                           indf1	equ	0xFE7
  3282                           fsr1h	equ	0xFE2
  3283                           fsr1l	equ	0xFE1
  3284                           indf2	equ	0xFDF
  3285                           postinc2	equ	0xFDE
  3286                           postdec2	equ	0xFDD
  3287                           fsr2h	equ	0xFDA
  3288                           fsr2l	equ	0xFD9
  3289                           status	equ	0xFD8
  3290                           
  3291 ;; *************** function _ToMainLow_recvmsg *****************
  3292 ;; Defined at:
  3293 ;;		line 112 in file "../src/messages.c"
  3294 ;; Parameters:    Size  Location     Type
  3295 ;;  maxlength       1    wreg     unsigned char 
  3296 ;;  msgtype         2   47[BANK0 ] PTR unsigned char 
  3297 ;;		 -> main@msgtype(1), 
  3298 ;;  data            2   49[BANK0 ] PTR void 
  3299 ;;		 -> main@msgbuffer(11), 
  3300 ;; Auto vars:     Size  Location     Type
  3301 ;;  maxlength       1   51[BANK0 ] unsigned char 
  3302 ;; Return value:  Size  Location     Type
  3303 ;;                  1    wreg      char 
  3304 ;; Registers used:
  3305 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3306 ;; Tracked objects:
  3307 ;;		On entry : 0/0
  3308 ;;		On exit  : 0/0
  3309 ;;		Unchanged: 0/0
  3310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3311 ;;      Params:         0       4       0       0       0
  3312 ;;      Locals:         0       1       0       0       0
  3313 ;;      Temps:          0       0       0       0       0
  3314 ;;      Totals:         0       5       0       0       0
  3315 ;;Total ram usage:        5 bytes
  3316 ;; Hardware stack levels used:    1
  3317 ;; Hardware stack levels required when called:   12
  3318 ;; This function calls:
  3319 ;;		_recv_msg
  3320 ;; This function is called by:
  3321 ;;		_main
  3322 ;; This function uses a non-reentrant model
  3323 ;;
  3324                           
  3325                           	psect	text21
  3326  00140E                     __ptext21:
  3327                           	opt stack 0
  3328  00140E                     _ToMainLow_recvmsg:
  3329                           	opt stack 18
  3330                           
  3331                           ; BSR set to: 0
  3332                           ;incstack = 0
  3333                           ;ToMainLow_recvmsg@maxlength stored from wreg
  3334  00140E  0100               	movlb	0	; () banked
  3335  001410  6FB3               	movwf	ToMainLow_recvmsg@maxlength& (0+255),b
  3336                           
  3337                           ; BSR set to: 0
  3338                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  3339  001412  0101               	movlb	1	; () banked
  3340  001414  0E01               	movlw	high _ToMainLow_MQ
  3341  001416  0100               	movlb	0	; () banked
  3342  001418  6FA2               	movwf	(recv_msg@qptr+1)& (0+255),b
  3343  00141A  0101               	movlb	1	; () banked
  3344  00141C  0EA2               	movlw	low _ToMainLow_MQ
  3345  00141E  0100               	movlb	0	; () banked
  3346  001420  6FA1               	movwf	recv_msg@qptr& (0+255),b
  3347  001422  C0B3  F0A3         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  3348  001426  0100               	movlb	0	; () banked
  3349  001428  C0B0  F0A5         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  3350  00142C  0100               	movlb	0	; () banked
  3351  00142E  C0AF  F0A4         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  3352  001432  0100               	movlb	0	; () banked
  3353  001434  C0B2  F0A7         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  3354  001438  0100               	movlb	0	; () banked
  3355  00143A  C0B1  F0A6         	movff	ToMainLow_recvmsg@data,recv_msg@data
  3356  00143E  EC29  F004         	call	_recv_msg	;wreg free
  3357  001442  0012               	return	
  3358  001444                     __end_of_ToMainLow_recvmsg:
  3359                           	opt stack 0
  3360                           tblptru	equ	0xFF8
  3361                           prodh	equ	0xFF4
  3362                           prodl	equ	0xFF3
  3363                           intcon	equ	0xFF2
  3364                           postinc0	equ	0xFEE
  3365                           wreg	equ	0xFE8
  3366                           indf1	equ	0xFE7
  3367                           fsr1h	equ	0xFE2
  3368                           fsr1l	equ	0xFE1
  3369                           indf2	equ	0xFDF
  3370                           postinc2	equ	0xFDE
  3371                           postdec2	equ	0xFDD
  3372                           fsr2h	equ	0xFDA
  3373                           fsr2l	equ	0xFD9
  3374                           status	equ	0xFD8
  3375                           
  3376 ;; *************** function _ToMainHigh_recvmsg *****************
  3377 ;; Defined at:
  3378 ;;		line 135 in file "../src/messages.c"
  3379 ;; Parameters:    Size  Location     Type
  3380 ;;  maxlength       1    wreg     unsigned char 
  3381 ;;  msgtype         2   47[BANK0 ] PTR unsigned char 
  3382 ;;		 -> main@msgtype(1), 
  3383 ;;  data            2   49[BANK0 ] PTR void 
  3384 ;;		 -> main@msgbuffer(11), 
  3385 ;; Auto vars:     Size  Location     Type
  3386 ;;  maxlength       1   51[BANK0 ] unsigned char 
  3387 ;; Return value:  Size  Location     Type
  3388 ;;                  1    wreg      char 
  3389 ;; Registers used:
  3390 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3391 ;; Tracked objects:
  3392 ;;		On entry : 0/0
  3393 ;;		On exit  : 0/0
  3394 ;;		Unchanged: 0/0
  3395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3396 ;;      Params:         0       4       0       0       0
  3397 ;;      Locals:         0       1       0       0       0
  3398 ;;      Temps:          0       0       0       0       0
  3399 ;;      Totals:         0       5       0       0       0
  3400 ;;Total ram usage:        5 bytes
  3401 ;; Hardware stack levels used:    1
  3402 ;; Hardware stack levels required when called:   12
  3403 ;; This function calls:
  3404 ;;		_recv_msg
  3405 ;; This function is called by:
  3406 ;;		_main
  3407 ;; This function uses a non-reentrant model
  3408 ;;
  3409                           
  3410                           	psect	text22
  3411  001444                     __ptext22:
  3412                           	opt stack 0
  3413  001444                     _ToMainHigh_recvmsg:
  3414                           	opt stack 18
  3415                           
  3416                           ;incstack = 0
  3417                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  3418  001444  0100               	movlb	0	; () banked
  3419  001446  6FB3               	movwf	ToMainHigh_recvmsg@maxlength& (0+255),b
  3420                           
  3421                           ; BSR set to: 0
  3422                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  3423  001448  0101               	movlb	1	; () banked
  3424  00144A  0E01               	movlw	high _ToMainHigh_MQ
  3425  00144C  0100               	movlb	0	; () banked
  3426  00144E  6FA2               	movwf	(recv_msg@qptr+1)& (0+255),b
  3427  001450  0101               	movlb	1	; () banked
  3428  001452  0E6C               	movlw	low _ToMainHigh_MQ
  3429  001454  0100               	movlb	0	; () banked
  3430  001456  6FA1               	movwf	recv_msg@qptr& (0+255),b
  3431  001458  C0B3  F0A3         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  3432  00145C  0100               	movlb	0	; () banked
  3433  00145E  C0B0  F0A5         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  3434  001462  0100               	movlb	0	; () banked
  3435  001464  C0AF  F0A4         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  3436  001468  0100               	movlb	0	; () banked
  3437  00146A  C0B2  F0A7         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  3438  00146E  0100               	movlb	0	; () banked
  3439  001470  C0B1  F0A6         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  3440  001474  EC29  F004         	call	_recv_msg	;wreg free
  3441  001478  0012               	return	
  3442  00147A                     __end_of_ToMainHigh_recvmsg:
  3443                           	opt stack 0
  3444                           tblptru	equ	0xFF8
  3445                           prodh	equ	0xFF4
  3446                           prodl	equ	0xFF3
  3447                           intcon	equ	0xFF2
  3448                           postinc0	equ	0xFEE
  3449                           wreg	equ	0xFE8
  3450                           indf1	equ	0xFE7
  3451                           fsr1h	equ	0xFE2
  3452                           fsr1l	equ	0xFE1
  3453                           indf2	equ	0xFDF
  3454                           postinc2	equ	0xFDE
  3455                           postdec2	equ	0xFDD
  3456                           fsr2h	equ	0xFDA
  3457                           fsr2l	equ	0xFD9
  3458                           status	equ	0xFD8
  3459                           
  3460 ;; *************** function _recv_msg *****************
  3461 ;; Defined at:
  3462 ;;		line 63 in file "../src/messages.c"
  3463 ;; Parameters:    Size  Location     Type
  3464 ;;  qptr            2   33[BANK0 ] PTR struct __msg_queue
  3465 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3466 ;;  maxlength       1   35[BANK0 ] unsigned char 
  3467 ;;  msgtype         2   36[BANK0 ] PTR unsigned char 
  3468 ;;		 -> timer0_int_handler@msgtype(2), main@msgtype(1), 
  3469 ;;  data            2   38[BANK0 ] PTR void 
  3470 ;;		 -> timer0_int_handler@val(2), main@msgbuffer(11), 
  3471 ;; Auto vars:     Size  Location     Type
  3472 ;;  qmsg            2   45[BANK0 ] PTR struct __msg
  3473 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3474 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3475 ;;  tlength         2   43[BANK0 ] unsigned int 
  3476 ;;  slot            1   42[BANK0 ] unsigned char 
  3477 ;; Return value:  Size  Location     Type
  3478 ;;                  1    wreg      char 
  3479 ;; Registers used:
  3480 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3481 ;; Tracked objects:
  3482 ;;		On entry : 0/0
  3483 ;;		On exit  : 0/0
  3484 ;;		Unchanged: 0/0
  3485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3486 ;;      Params:         0       7       0       0       0
  3487 ;;      Locals:         0       5       0       0       0
  3488 ;;      Temps:          0       2       0       0       0
  3489 ;;      Totals:         0      14       0       0       0
  3490 ;;Total ram usage:       14 bytes
  3491 ;; Hardware stack levels used:    1
  3492 ;; Hardware stack levels required when called:   11
  3493 ;; This function calls:
  3494 ;;		_memcpy
  3495 ;; This function is called by:
  3496 ;;		_ToMainLow_recvmsg
  3497 ;;		_ToMainHigh_recvmsg
  3498 ;;		_FromMainLow_recvmsg
  3499 ;; This function uses a non-reentrant model
  3500 ;;
  3501                           
  3502                           	psect	text23
  3503  000852                     __ptext23:
  3504                           	opt stack 0
  3505  000852                     _recv_msg:
  3506                           	opt stack 18
  3507                           
  3508                           ;messages.c: 64: unsigned char slot;
  3509                           ;messages.c: 68: msg *qmsg;
  3510                           ;messages.c: 69: size_t tlength;
  3511                           ;messages.c: 72: slot = qptr->cur_read_ind;
  3512                           
  3513                           ;incstack = 0
  3514  000852  0100               	movlb	0	; () banked
  3515  000854  EE20 F035          	lfsr	2,53
  3516  000858  0100               	movlb	0	; () banked
  3517  00085A  51A1               	movf	recv_msg@qptr& (0+255),w,b
  3518  00085C  26D9               	addwf	fsr2l,f,c
  3519  00085E  0100               	movlb	0	; () banked
  3520  000860  51A2               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3521  000862  22DA               	addwfc	fsr2h,f,c
  3522  000864  50DF               	movf	indf2,w,c
  3523  000866  0100               	movlb	0	; () banked
  3524  000868  6FAA               	movwf	recv_msg@slot& (0+255),b
  3525                           
  3526                           ; BSR set to: 0
  3527                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  3528  00086A  0100               	movlb	0	; () banked
  3529  00086C  51AA               	movf	recv_msg@slot& (0+255),w,b
  3530  00086E  0D0D               	mullw	13
  3531  000870  50F3               	movf	prodl,w,c
  3532  000872  0100               	movlb	0	; () banked
  3533  000874  25A1               	addwf	recv_msg@qptr& (0+255),w,b
  3534  000876  0100               	movlb	0	; () banked
  3535  000878  6FAD               	movwf	recv_msg@qmsg& (0+255),b
  3536  00087A  50F4               	movf	prodh,w,c
  3537  00087C  0100               	movlb	0	; () banked
  3538  00087E  21A2               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  3539  000880  0100               	movlb	0	; () banked
  3540  000882  6FAE               	movwf	(recv_msg@qmsg+1)& (0+255),b
  3541                           
  3542                           ; BSR set to: 0
  3543                           ;messages.c: 74: if (qmsg->full == 1) {
  3544  000884  0E01               	movlw	1
  3545  000886  C0AD  FFD9         	movff	recv_msg@qmsg,fsr2l
  3546  00088A  C0AE  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3547  00088E  62DF               	cpfseq	indf2,c
  3548  000890  D06D               	goto	l2917
  3549                           
  3550                           ; BSR set to: 0
  3551                           ;messages.c: 76: if (qmsg->length > maxlength) {
  3552  000892  0100               	movlb	0	; () banked
  3553  000894  EE20 F001          	lfsr	2,1
  3554  000898  0100               	movlb	0	; () banked
  3555  00089A  51AD               	movf	recv_msg@qmsg& (0+255),w,b
  3556  00089C  26D9               	addwf	fsr2l,f,c
  3557  00089E  0100               	movlb	0	; () banked
  3558  0008A0  51AE               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3559  0008A2  22DA               	addwfc	fsr2h,f,c
  3560  0008A4  50DF               	movf	indf2,w,c
  3561  0008A6  0100               	movlb	0	; () banked
  3562  0008A8  5DA3               	subwf	recv_msg@maxlength& (0+255),w,b
  3563  0008AA  B0D8               	btfsc	status,0,c
  3564  0008AC  D002               	goto	l2901
  3565                           
  3566                           ; BSR set to: 0
  3567                           ;messages.c: 77: return (-3);
  3568  0008AE  0EFD               	movlw	253
  3569  0008B0  0012               	return	
  3570  0008B2                     l2901:
  3571                           
  3572                           ; BSR set to: 0
  3573                           ;messages.c: 78: }
  3574                           ;messages.c: 80: tlength = qmsg->length;
  3575  0008B2  0100               	movlb	0	; () banked
  3576  0008B4  EE20 F001          	lfsr	2,1
  3577  0008B8  0100               	movlb	0	; () banked
  3578  0008BA  51AD               	movf	recv_msg@qmsg& (0+255),w,b
  3579  0008BC  26D9               	addwf	fsr2l,f,c
  3580  0008BE  0100               	movlb	0	; () banked
  3581  0008C0  51AE               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3582  0008C2  22DA               	addwfc	fsr2h,f,c
  3583  0008C4  50DF               	movf	indf2,w,c
  3584  0008C6  0100               	movlb	0	; () banked
  3585  0008C8  6FA8               	movwf	??_recv_msg& (0+255),b
  3586  0008CA  0100               	movlb	0	; () banked
  3587  0008CC  51A8               	movf	??_recv_msg& (0+255),w,b
  3588  0008CE  0100               	movlb	0	; () banked
  3589  0008D0  6FAB               	movwf	recv_msg@tlength& (0+255),b
  3590  0008D2  0100               	movlb	0	; () banked
  3591  0008D4  6BAC               	clrf	(recv_msg@tlength+1)& (0+255),b
  3592                           
  3593                           ; BSR set to: 0
  3594                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  3595  0008D6  0100               	movlb	0	; () banked
  3596  0008D8  C0A7  F098         	movff	recv_msg@data+1,memcpy@d1+1
  3597  0008DC  0100               	movlb	0	; () banked
  3598  0008DE  C0A6  F097         	movff	recv_msg@data,memcpy@d1
  3599  0008E2  0E03               	movlw	3
  3600  0008E4  0100               	movlb	0	; () banked
  3601  0008E6  25AD               	addwf	recv_msg@qmsg& (0+255),w,b
  3602  0008E8  0100               	movlb	0	; () banked
  3603  0008EA  6FA8               	movwf	??_recv_msg& (0+255),b
  3604  0008EC  0E00               	movlw	0
  3605  0008EE  0100               	movlb	0	; () banked
  3606  0008F0  21AE               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  3607  0008F2  0100               	movlb	0	; () banked
  3608  0008F4  6FA9               	movwf	(??_recv_msg+1)& (0+255),b
  3609  0008F6  C0A8  F099         	movff	??_recv_msg,memcpy@s1
  3610  0008FA  C0A9  F09A         	movff	??_recv_msg+1,memcpy@s1+1
  3611  0008FE  C0AB  F09B         	movff	recv_msg@tlength,memcpy@n
  3612  000902  C0AC  F09C         	movff	recv_msg@tlength+1,memcpy@n+1
  3613  000906  EC3B  F009         	call	_memcpy	;wreg free
  3614                           
  3615                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  3616  00090A  0100               	movlb	0	; () banked
  3617  00090C  EE20 F035          	lfsr	2,53
  3618  000910  0100               	movlb	0	; () banked
  3619  000912  51A1               	movf	recv_msg@qptr& (0+255),w,b
  3620  000914  26D9               	addwf	fsr2l,f,c
  3621  000916  0100               	movlb	0	; () banked
  3622  000918  51A2               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3623  00091A  22DA               	addwfc	fsr2h,f,c
  3624  00091C  0100               	movlb	0	; () banked
  3625  00091E  EE10 F035          	lfsr	1,53
  3626  000922  0100               	movlb	0	; () banked
  3627  000924  51A1               	movf	recv_msg@qptr& (0+255),w,b
  3628  000926  26E1               	addwf	fsr1l,f,c
  3629  000928  0100               	movlb	0	; () banked
  3630  00092A  51A2               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3631  00092C  22E2               	addwfc	fsr1h,f,c
  3632  00092E  50E7               	movf	indf1,w,c
  3633  000930  0100               	movlb	0	; () banked
  3634  000932  6FA8               	movwf	??_recv_msg& (0+255),b
  3635  000934  0100               	movlb	0	; () banked
  3636  000936  29A8               	incf	??_recv_msg& (0+255),w,b
  3637  000938  0B03               	andlw	3
  3638  00093A  6EDF               	movwf	indf2,c
  3639                           
  3640                           ; BSR set to: 0
  3641                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  3642  00093C  0100               	movlb	0	; () banked
  3643  00093E  EE20 F002          	lfsr	2,2
  3644  000942  0100               	movlb	0	; () banked
  3645  000944  51AD               	movf	recv_msg@qmsg& (0+255),w,b
  3646  000946  26D9               	addwf	fsr2l,f,c
  3647  000948  0100               	movlb	0	; () banked
  3648  00094A  51AE               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3649  00094C  22DA               	addwfc	fsr2h,f,c
  3650  00094E  C0A4  FFE1         	movff	recv_msg@msgtype,fsr1l
  3651  000952  C0A5  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  3652  000956  CFDF FFE7          	movff	indf2,indf1
  3653                           
  3654                           ; BSR set to: 0
  3655                           ;messages.c: 91: qmsg->full = 0;
  3656  00095A  C0AD  FFD9         	movff	recv_msg@qmsg,fsr2l
  3657  00095E  C0AE  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3658  000962  0E00               	movlw	0
  3659  000964  6EDF               	movwf	indf2,c
  3660                           
  3661                           ; BSR set to: 0
  3662                           ;messages.c: 92: return (tlength);
  3663  000966  0100               	movlb	0	; () banked
  3664  000968  51AB               	movf	recv_msg@tlength& (0+255),w,b
  3665  00096A  0012               	return	
  3666  00096C                     l2917:
  3667                           
  3668                           ; BSR set to: 0
  3669                           ;messages.c: 94: return (-4);
  3670  00096C  0EFC               	movlw	252
  3671  00096E  0012               	return	
  3672  000970                     __end_of_recv_msg:
  3673                           	opt stack 0
  3674                           tblptru	equ	0xFF8
  3675                           prodh	equ	0xFF4
  3676                           prodl	equ	0xFF3
  3677                           intcon	equ	0xFF2
  3678                           postinc0	equ	0xFEE
  3679                           wreg	equ	0xFE8
  3680                           indf1	equ	0xFE7
  3681                           fsr1h	equ	0xFE2
  3682                           fsr1l	equ	0xFE1
  3683                           indf2	equ	0xFDF
  3684                           postinc2	equ	0xFDE
  3685                           postdec2	equ	0xFDD
  3686                           fsr2h	equ	0xFDA
  3687                           fsr2l	equ	0xFD9
  3688                           status	equ	0xFD8
  3689                           
  3690 ;; *************** function _memcpy *****************
  3691 ;; Defined at:
  3692 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  3693 ;; Parameters:    Size  Location     Type
  3694 ;;  d1              2   23[BANK0 ] PTR void 
  3695 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3696 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  3697 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  3698 ;;  s1              2   25[BANK0 ] PTR const void 
  3699 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  3700 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  3701 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  3702 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), 
  3703 ;;		 -> main@ic(28), main@uc(5), 
  3704 ;;  n               2   27[BANK0 ] unsigned int 
  3705 ;; Auto vars:     Size  Location     Type
  3706 ;;  s               2   31[BANK0 ] PTR const unsigned char 
  3707 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  3708 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  3709 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  3710 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), 
  3711 ;;		 -> main@ic(28), main@uc(5), 
  3712 ;;  d               2   29[BANK0 ] PTR unsigned char 
  3713 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3714 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  3715 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  3716 ;; Return value:  Size  Location     Type
  3717 ;;                  2   23[BANK0 ] PTR void 
  3718 ;; Registers used:
  3719 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3720 ;; Tracked objects:
  3721 ;;		On entry : 0/0
  3722 ;;		On exit  : 0/0
  3723 ;;		Unchanged: 0/0
  3724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3725 ;;      Params:         0       6       0       0       0
  3726 ;;      Locals:         0       4       0       0       0
  3727 ;;      Temps:          0       0       0       0       0
  3728 ;;      Totals:         0      10       0       0       0
  3729 ;;Total ram usage:       10 bytes
  3730 ;; Hardware stack levels used:    1
  3731 ;; Hardware stack levels required when called:   10
  3732 ;; This function calls:
  3733 ;;		Nothing
  3734 ;; This function is called by:
  3735 ;;		_send_msg
  3736 ;;		_recv_msg
  3737 ;; This function uses a non-reentrant model
  3738 ;;
  3739                           
  3740                           	psect	text24
  3741  001276                     __ptext24:
  3742                           	opt stack 0
  3743  001276                     _memcpy:
  3744                           	opt stack 17
  3745                           
  3746                           ; BSR set to: 0
  3747                           ;incstack = 0
  3748  001276  0100               	movlb	0	; () banked
  3749  001278  C09A  F0A0         	movff	memcpy@s1+1,memcpy@s+1
  3750  00127C  0100               	movlb	0	; () banked
  3751  00127E  C099  F09F         	movff	memcpy@s1,memcpy@s
  3752  001282  0100               	movlb	0	; () banked
  3753  001284  C098  F09E         	movff	memcpy@d1+1,memcpy@d+1
  3754  001288  0100               	movlb	0	; () banked
  3755  00128A  C097  F09D         	movff	memcpy@d1,memcpy@d
  3756  00128E  D010               	goto	l2715
  3757  001290                     l2709:
  3758                           
  3759                           ; BSR set to: 0
  3760  001290  C09F  FFD9         	movff	memcpy@s,fsr2l
  3761  001294  C0A0  FFDA         	movff	memcpy@s+1,fsr2h
  3762  001298  C09D  FFE1         	movff	memcpy@d,fsr1l
  3763  00129C  C09E  FFE2         	movff	memcpy@d+1,fsr1h
  3764  0012A0  CFDF FFE7          	movff	indf2,indf1
  3765                           
  3766                           ; BSR set to: 0
  3767  0012A4  0100               	movlb	0	; () banked
  3768  0012A6  4B9F               	infsnz	memcpy@s& (0+255),f,b
  3769  0012A8  2BA0               	incf	(memcpy@s+1)& (0+255),f,b
  3770                           
  3771                           ; BSR set to: 0
  3772  0012AA  0100               	movlb	0	; () banked
  3773  0012AC  4B9D               	infsnz	memcpy@d& (0+255),f,b
  3774  0012AE  2B9E               	incf	(memcpy@d+1)& (0+255),f,b
  3775  0012B0                     l2715:
  3776                           
  3777                           ; BSR set to: 0
  3778  0012B0  0100               	movlb	0	; () banked
  3779  0012B2  079B               	decf	memcpy@n& (0+255),f,b
  3780  0012B4  A0D8               	btfss	status,0,c
  3781  0012B6  079C               	decf	(memcpy@n+1)& (0+255),f,b
  3782  0012B8  0100               	movlb	0	; () banked
  3783  0012BA  299B               	incf	memcpy@n& (0+255),w,b
  3784  0012BC  B4D8               	btfsc	status,2,c
  3785  0012BE  299C               	incf	(memcpy@n+1)& (0+255),w,b
  3786  0012C0  B4D8               	btfsc	status,2,c
  3787                           
  3788                           ; BSR set to: 0
  3789                           
  3790                           ; BSR set to: 0
  3791                           ;	Return value of _memcpy is never used
  3792  0012C2  0012               	return	
  3793  0012C4  D7E5               	goto	l2709
  3794  0012C6                     __end_of_memcpy:
  3795                           	opt stack 0
  3796                           tblptru	equ	0xFF8
  3797                           prodh	equ	0xFF4
  3798                           prodl	equ	0xFF3
  3799                           intcon	equ	0xFF2
  3800                           postinc0	equ	0xFEE
  3801                           wreg	equ	0xFE8
  3802                           indf1	equ	0xFE7
  3803                           fsr1h	equ	0xFE2
  3804                           fsr1l	equ	0xFE1
  3805                           indf2	equ	0xFDF
  3806                           postinc2	equ	0xFDE
  3807                           postdec2	equ	0xFDD
  3808                           fsr2h	equ	0xFDA
  3809                           fsr2l	equ	0xFD9
  3810                           status	equ	0xFD8
  3811                           
  3812 ;; *************** function _OpenUSART *****************
  3813 ;; Defined at:
  3814 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uopen.c"
  3815 ;; Parameters:    Size  Location     Type
  3816 ;;  config          1    wreg     unsigned char 
  3817 ;;  spbrg           2   23[BANK0 ] unsigned int 
  3818 ;; Auto vars:     Size  Location     Type
  3819 ;;  config          1   28[BANK0 ] unsigned char 
  3820 ;; Return value:  Size  Location     Type
  3821 ;;		None               void
  3822 ;; Registers used:
  3823 ;;		wreg, status,2
  3824 ;; Tracked objects:
  3825 ;;		On entry : 0/0
  3826 ;;		On exit  : 0/0
  3827 ;;		Unchanged: 0/0
  3828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3829 ;;      Params:         0       2       0       0       0
  3830 ;;      Locals:         0       1       0       0       0
  3831 ;;      Temps:          0       3       0       0       0
  3832 ;;      Totals:         0       6       0       0       0
  3833 ;;Total ram usage:        6 bytes
  3834 ;; Hardware stack levels used:    1
  3835 ;; Hardware stack levels required when called:   10
  3836 ;; This function calls:
  3837 ;;		Nothing
  3838 ;; This function is called by:
  3839 ;;		_main
  3840 ;; This function uses a non-reentrant model
  3841 ;;
  3842                           
  3843                           	psect	text25
  3844  000EE0                     __ptext25:
  3845                           	opt stack 0
  3846  000EE0                     _OpenUSART:
  3847                           	opt stack 20
  3848                           
  3849                           ; BSR set to: 0
  3850                           ;incstack = 0
  3851                           ;OpenUSART@config stored from wreg
  3852  000EE0  0100               	movlb	0	; () banked
  3853  000EE2  6F9C               	movwf	OpenUSART@config& (0+255),b
  3854                           
  3855                           ; BSR set to: 0
  3856  000EE4  0E00               	movlw	0
  3857  000EE6  6EAC               	movwf	4012,c	;volatile
  3858  000EE8  0E00               	movlw	0
  3859  000EEA  6EAB               	movwf	4011,c	;volatile
  3860                           
  3861                           ; BSR set to: 0
  3862  000EEC  0100               	movlb	0	; () banked
  3863  000EEE  B19C               	btfsc	OpenUSART@config& (0+255),0,b
  3864                           
  3865                           ; BSR set to: 0
  3866  000EF0  88AC               	bsf	4012,4,c	;volatile
  3867                           
  3868                           ; BSR set to: 0
  3869                           
  3870                           ; BSR set to: 0
  3871  000EF2  0100               	movlb	0	; () banked
  3872  000EF4  A39C               	btfss	OpenUSART@config& (0+255),1,b
  3873  000EF6  D002               	goto	l3253
  3874                           
  3875                           ; BSR set to: 0
  3876  000EF8  8CAC               	bsf	4012,6,c	;volatile
  3877  000EFA  8CAB               	bsf	4011,6,c	;volatile
  3878  000EFC                     l3253:
  3879                           
  3880                           ; BSR set to: 0
  3881  000EFC  0100               	movlb	0	; () banked
  3882  000EFE  B59C               	btfsc	OpenUSART@config& (0+255),2,b
  3883                           
  3884                           ; BSR set to: 0
  3885  000F00  8EAC               	bsf	4012,7,c	;volatile
  3886                           
  3887                           ; BSR set to: 0
  3888                           
  3889                           ; BSR set to: 0
  3890  000F02  0100               	movlb	0	; () banked
  3891  000F04  A79C               	btfss	OpenUSART@config& (0+255),3,b
  3892  000F06  D002               	goto	l450
  3893                           
  3894                           ; BSR set to: 0
  3895  000F08  88AB               	bsf	4011,4,c	;volatile
  3896  000F0A  D001               	goto	l3261
  3897  000F0C                     l450:
  3898                           
  3899                           ; BSR set to: 0
  3900  000F0C  8AAB               	bsf	4011,5,c	;volatile
  3901  000F0E                     l3261:
  3902                           
  3903                           ; BSR set to: 0
  3904  000F0E  0100               	movlb	0	; () banked
  3905  000F10  B99C               	btfsc	OpenUSART@config& (0+255),4,b
  3906                           
  3907                           ; BSR set to: 0
  3908  000F12  84AC               	bsf	4012,2,c	;volatile
  3909                           
  3910                           ; BSR set to: 0
  3911  000F14  989E               	bcf	3998,4,c	;volatile
  3912                           
  3913                           ; BSR set to: 0
  3914  000F16  0100               	movlb	0	; () banked
  3915  000F18  BB9C               	btfsc	OpenUSART@config& (0+255),5,b
  3916                           
  3917                           ; BSR set to: 0
  3918  000F1A  86AB               	bsf	4011,3,c	;volatile
  3919                           
  3920                           ; BSR set to: 0
  3921                           
  3922                           ; BSR set to: 0
  3923  000F1C  0100               	movlb	0	; () banked
  3924  000F1E  AD9C               	btfss	OpenUSART@config& (0+255),6,b
  3925  000F20  D002               	goto	l454
  3926                           
  3927                           ; BSR set to: 0
  3928  000F22  8A9D               	bsf	3997,5,c	;volatile
  3929  000F24  D001               	goto	l455
  3930  000F26                     l454:
  3931                           
  3932                           ; BSR set to: 0
  3933  000F26  9A9D               	bcf	3997,5,c	;volatile
  3934  000F28                     l455:
  3935                           
  3936                           ; BSR set to: 0
  3937  000F28  9A9E               	bcf	3998,5,c	;volatile
  3938                           
  3939                           ; BSR set to: 0
  3940  000F2A  0100               	movlb	0	; () banked
  3941  000F2C  AF9C               	btfss	OpenUSART@config& (0+255),7,b
  3942  000F2E  D002               	goto	l456
  3943                           
  3944                           ; BSR set to: 0
  3945  000F30  889D               	bsf	3997,4,c	;volatile
  3946  000F32  D001               	goto	l457
  3947  000F34                     l456:
  3948                           
  3949                           ; BSR set to: 0
  3950  000F34  989D               	bcf	3997,4,c	;volatile
  3951  000F36                     l457:
  3952                           
  3953                           ; BSR set to: 0
  3954  000F36  C097  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  3955                           
  3956                           ; BSR set to: 0
  3957  000F3A  0100               	movlb	0	; () banked
  3958  000F3C  C098  F099         	movff	OpenUSART@spbrg+1,??_OpenUSART
  3959  000F40  C099  F09A         	movff	??_OpenUSART,??_OpenUSART+1
  3960  000F44  0100               	movlb	0	; () banked
  3961  000F46  6B9B               	clrf	(??_OpenUSART+2)& (0+255),b
  3962  000F48  0100               	movlb	0	; () banked
  3963  000F4A  519A               	movf	(??_OpenUSART+1)& (0+255),w,b
  3964  000F4C  6EB0               	movwf	4016,c	;volatile
  3965                           
  3966                           ; BSR set to: 0
  3967  000F4E  8AAC               	bsf	4012,5,c	;volatile
  3968                           
  3969                           ; BSR set to: 0
  3970  000F50  8EAB               	bsf	4011,7,c	;volatile
  3971                           
  3972                           ; BSR set to: 0
  3973  000F52  9C94               	bcf	3988,6,c	;volatile
  3974                           
  3975                           ; BSR set to: 0
  3976  000F54  8E94               	bsf	3988,7,c	;volatile
  3977                           
  3978                           ; BSR set to: 0
  3979  000F56  A8AC               	btfss	4012,4,c	;volatile
  3980  000F58  0012               	return	
  3981                           
  3982                           ; BSR set to: 0
  3983  000F5A  BEAC               	btfsc	4012,7,c	;volatile
  3984  000F5C  0012               	return	
  3985                           
  3986                           ; BSR set to: 0
  3987  000F5E  8C94               	bsf	3988,6,c	;volatile
  3988  000F60  0012               	return	
  3989  000F62                     __end_of_OpenUSART:
  3990                           	opt stack 0
  3991                           tblptru	equ	0xFF8
  3992                           prodh	equ	0xFF4
  3993                           prodl	equ	0xFF3
  3994                           intcon	equ	0xFF2
  3995                           postinc0	equ	0xFEE
  3996                           wreg	equ	0xFE8
  3997                           indf1	equ	0xFE7
  3998                           fsr1h	equ	0xFE2
  3999                           fsr1l	equ	0xFE1
  4000                           indf2	equ	0xFDF
  4001                           postinc2	equ	0xFDE
  4002                           postdec2	equ	0xFDD
  4003                           fsr2h	equ	0xFDA
  4004                           fsr2l	equ	0xFD9
  4005                           status	equ	0xFD8
  4006                           
  4007 ;; *************** function _OpenTimer1 *****************
  4008 ;; Defined at:
  4009 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1open.c"
  4010 ;; Parameters:    Size  Location     Type
  4011 ;;  config          1    wreg     unsigned char 
  4012 ;; Auto vars:     Size  Location     Type
  4013 ;;  config          1   23[BANK0 ] unsigned char 
  4014 ;; Return value:  Size  Location     Type
  4015 ;;		None               void
  4016 ;; Registers used:
  4017 ;;		wreg, status,2, status,0
  4018 ;; Tracked objects:
  4019 ;;		On entry : 0/0
  4020 ;;		On exit  : 0/0
  4021 ;;		Unchanged: 0/0
  4022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4023 ;;      Params:         0       0       0       0       0
  4024 ;;      Locals:         0       1       0       0       0
  4025 ;;      Temps:          0       0       0       0       0
  4026 ;;      Totals:         0       1       0       0       0
  4027 ;;Total ram usage:        1 bytes
  4028 ;; Hardware stack levels used:    1
  4029 ;; Hardware stack levels required when called:   10
  4030 ;; This function calls:
  4031 ;;		Nothing
  4032 ;; This function is called by:
  4033 ;;		_main
  4034 ;; This function uses a non-reentrant model
  4035 ;;
  4036                           
  4037                           	psect	text26
  4038  0014DE                     __ptext26:
  4039                           	opt stack 0
  4040  0014DE                     _OpenTimer1:
  4041                           	opt stack 20
  4042                           
  4043                           ; BSR set to: 0
  4044                           ;incstack = 0
  4045                           ;OpenTimer1@config stored from wreg
  4046  0014DE  0100               	movlb	0	; () banked
  4047  0014E0  6F97               	movwf	OpenTimer1@config& (0+255),b
  4048                           
  4049                           ; BSR set to: 0
  4050  0014E2  0100               	movlb	0	; () banked
  4051  0014E4  5197               	movf	OpenTimer1@config& (0+255),w,b
  4052  0014E6  0B7E               	andlw	126
  4053  0014E8  6ECD               	movwf	4045,c	;volatile
  4054                           
  4055                           ; BSR set to: 0
  4056  0014EA  0100               	movlb	0	; () banked
  4057  0014EC  AD97               	btfss	OpenTimer1@config& (0+255),6,b
  4058  0014EE  D002               	goto	l406
  4059                           
  4060                           ; BSR set to: 0
  4061  0014F0  8ECD               	bsf	4045,7,c	;volatile
  4062  0014F2  D001               	goto	l3213
  4063  0014F4                     l406:
  4064                           
  4065                           ; BSR set to: 0
  4066  0014F4  9ECD               	bcf	4045,7,c	;volatile
  4067  0014F6                     l3213:
  4068                           
  4069                           ; BSR set to: 0
  4070  0014F6  0E00               	movlw	0
  4071  0014F8  6ECF               	movwf	4047,c	;volatile
  4072  0014FA  0E00               	movlw	0
  4073  0014FC  6ECE               	movwf	4046,c	;volatile
  4074                           
  4075                           ; BSR set to: 0
  4076  0014FE  909E               	bcf	3998,0,c	;volatile
  4077                           
  4078                           ; BSR set to: 0
  4079  001500  0100               	movlb	0	; () banked
  4080  001502  AF97               	btfss	OpenTimer1@config& (0+255),7,b
  4081  001504  D002               	goto	l408
  4082                           
  4083                           ; BSR set to: 0
  4084  001506  809D               	bsf	3997,0,c	;volatile
  4085  001508  D001               	goto	l409
  4086  00150A                     l408:
  4087                           
  4088                           ; BSR set to: 0
  4089  00150A  909D               	bcf	3997,0,c	;volatile
  4090  00150C                     l409:
  4091                           
  4092                           ; BSR set to: 0
  4093  00150C  80CD               	bsf	4045,0,c	;volatile
  4094                           
  4095                           ; BSR set to: 0
  4096  00150E  0012               	return	
  4097  001510                     __end_of_OpenTimer1:
  4098                           	opt stack 0
  4099                           tblptru	equ	0xFF8
  4100                           prodh	equ	0xFF4
  4101                           prodl	equ	0xFF3
  4102                           intcon	equ	0xFF2
  4103                           postinc0	equ	0xFEE
  4104                           wreg	equ	0xFE8
  4105                           indf1	equ	0xFE7
  4106                           fsr1h	equ	0xFE2
  4107                           fsr1l	equ	0xFE1
  4108                           indf2	equ	0xFDF
  4109                           postinc2	equ	0xFDE
  4110                           postdec2	equ	0xFDD
  4111                           fsr2h	equ	0xFDA
  4112                           fsr2l	equ	0xFD9
  4113                           status	equ	0xFD8
  4114                           
  4115 ;; *************** function _OpenTimer0 *****************
  4116 ;; Defined at:
  4117 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0open.c"
  4118 ;; Parameters:    Size  Location     Type
  4119 ;;  config          1    wreg     unsigned char 
  4120 ;; Auto vars:     Size  Location     Type
  4121 ;;  config          1   23[BANK0 ] unsigned char 
  4122 ;; Return value:  Size  Location     Type
  4123 ;;		None               void
  4124 ;; Registers used:
  4125 ;;		wreg, status,2, status,0
  4126 ;; Tracked objects:
  4127 ;;		On entry : 0/0
  4128 ;;		On exit  : 0/0
  4129 ;;		Unchanged: 0/0
  4130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4131 ;;      Params:         0       0       0       0       0
  4132 ;;      Locals:         0       1       0       0       0
  4133 ;;      Temps:          0       0       0       0       0
  4134 ;;      Totals:         0       1       0       0       0
  4135 ;;Total ram usage:        1 bytes
  4136 ;; Hardware stack levels used:    1
  4137 ;; Hardware stack levels required when called:   10
  4138 ;; This function calls:
  4139 ;;		Nothing
  4140 ;; This function is called by:
  4141 ;;		_main
  4142 ;; This function uses a non-reentrant model
  4143 ;;
  4144                           
  4145                           	psect	text27
  4146  0015E8                     __ptext27:
  4147                           	opt stack 0
  4148  0015E8                     _OpenTimer0:
  4149                           	opt stack 20
  4150                           
  4151                           ; BSR set to: 0
  4152                           ;incstack = 0
  4153                           ;OpenTimer0@config stored from wreg
  4154  0015E8  0100               	movlb	0	; () banked
  4155  0015EA  6F97               	movwf	OpenTimer0@config& (0+255),b
  4156                           
  4157                           ; BSR set to: 0
  4158  0015EC  0100               	movlb	0	; () banked
  4159  0015EE  5197               	movf	OpenTimer0@config& (0+255),w,b
  4160  0015F0  0B7F               	andlw	127
  4161  0015F2  6ED5               	movwf	4053,c	;volatile
  4162                           
  4163                           ; BSR set to: 0
  4164  0015F4  0E00               	movlw	0
  4165  0015F6  6ED7               	movwf	4055,c	;volatile
  4166                           
  4167                           ; BSR set to: 0
  4168  0015F8  0E00               	movlw	0
  4169  0015FA  6ED6               	movwf	4054,c	;volatile
  4170                           
  4171                           ; BSR set to: 0
  4172  0015FC  94F2               	bcf	intcon,2,c	;volatile
  4173                           
  4174                           ; BSR set to: 0
  4175  0015FE  0100               	movlb	0	; () banked
  4176  001600  AF97               	btfss	OpenTimer0@config& (0+255),7,b
  4177  001602  D002               	goto	l382
  4178                           
  4179                           ; BSR set to: 0
  4180  001604  8AF2               	bsf	intcon,5,c	;volatile
  4181  001606  D001               	goto	l383
  4182  001608                     l382:
  4183                           
  4184                           ; BSR set to: 0
  4185  001608  9AF2               	bcf	intcon,5,c	;volatile
  4186  00160A                     l383:
  4187                           
  4188                           ; BSR set to: 0
  4189  00160A  8ED5               	bsf	4053,7,c	;volatile
  4190                           
  4191                           ; BSR set to: 0
  4192  00160C  0012               	return	
  4193  00160E                     __end_of_OpenTimer0:
  4194                           	opt stack 0
  4195                           tblptru	equ	0xFF8
  4196                           prodh	equ	0xFF4
  4197                           prodl	equ	0xFF3
  4198                           intcon	equ	0xFF2
  4199                           postinc0	equ	0xFEE
  4200                           wreg	equ	0xFE8
  4201                           indf1	equ	0xFE7
  4202                           fsr1h	equ	0xFE2
  4203                           fsr1l	equ	0xFE1
  4204                           indf2	equ	0xFDF
  4205                           postinc2	equ	0xFDE
  4206                           postdec2	equ	0xFDD
  4207                           fsr2h	equ	0xFDA
  4208                           fsr2l	equ	0xFD9
  4209                           status	equ	0xFD8
  4210                           
  4211 ;; *************** function _InterruptHandlerLow *****************
  4212 ;; Defined at:
  4213 ;;		line 122 in file "../src/interrupts.c"
  4214 ;; Parameters:    Size  Location     Type
  4215 ;;		None
  4216 ;; Auto vars:     Size  Location     Type
  4217 ;;		None
  4218 ;; Return value:  Size  Location     Type
  4219 ;;		None               void
  4220 ;; Registers used:
  4221 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4222 ;; Tracked objects:
  4223 ;;		On entry : 0/0
  4224 ;;		On exit  : 0/0
  4225 ;;		Unchanged: 0/0
  4226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4227 ;;      Params:         0       0       0       0       0
  4228 ;;      Locals:         0       0       0       0       0
  4229 ;;      Temps:         17       0       0       0       0
  4230 ;;      Totals:        17       0       0       0       0
  4231 ;;Total ram usage:       17 bytes
  4232 ;; Hardware stack levels used:    1
  4233 ;; Hardware stack levels required when called:    9
  4234 ;; This function calls:
  4235 ;;		_timer1_int_handler
  4236 ;;		_uart_recv_int_handler
  4237 ;; This function is called by:
  4238 ;;		Interrupt level 1
  4239 ;; This function uses a non-reentrant model
  4240 ;;
  4241                           
  4242                           	psect	intcodelo
  4243  000018                     __pintcodelo:
  4244                           	opt stack 0
  4245  000018                     _InterruptHandlerLow:
  4246                           	opt stack 17
  4247                           
  4248                           ; BSR set to: 0
  4249                           ;incstack = 0
  4250  000018  CFD8 F01D          	movff	status,??_InterruptHandlerLow
  4251  00001C  CFE8 F01E          	movff	wreg,??_InterruptHandlerLow+1
  4252  000020  CFE0 F01F          	movff	bsr,??_InterruptHandlerLow+2
  4253  000024  CFFA F020          	movff	pclath,??_InterruptHandlerLow+3
  4254  000028  CFFB F021          	movff	pclatu,??_InterruptHandlerLow+4
  4255  00002C  CFE9 F022          	movff	fsr0l,??_InterruptHandlerLow+5
  4256  000030  CFEA F023          	movff	fsr0h,??_InterruptHandlerLow+6
  4257  000034  CFE1 F024          	movff	fsr1l,??_InterruptHandlerLow+7
  4258  000038  CFE2 F025          	movff	fsr1h,??_InterruptHandlerLow+8
  4259  00003C  CFD9 F026          	movff	fsr2l,??_InterruptHandlerLow+9
  4260  000040  CFDA F027          	movff	fsr2h,??_InterruptHandlerLow+10
  4261  000044  CFF3 F028          	movff	prodl,??_InterruptHandlerLow+11
  4262  000048  CFF4 F029          	movff	prodh,??_InterruptHandlerLow+12
  4263  00004C  CFF6 F02A          	movff	tblptrl,??_InterruptHandlerLow+13
  4264  000050  CFF7 F02B          	movff	tblptrh,??_InterruptHandlerLow+14
  4265  000054  CFF8 F02C          	movff	tblptru,??_InterruptHandlerLow+15
  4266  000058  CFF5 F02D          	movff	tablat,??_InterruptHandlerLow+16
  4267                           
  4268                           ;interrupts.c: 124: if (PIR1bits.TMR1IF) {
  4269  00005C  A09E               	btfss	3998,0,c	;volatile
  4270  00005E  D003               	goto	i1l3371
  4271                           
  4272                           ;interrupts.c: 125: PIR1bits.TMR1IF = 0;
  4273  000060  909E               	bcf	3998,0,c	;volatile
  4274                           
  4275                           ;interrupts.c: 126: timer1_int_handler();
  4276  000062  ECB6  F00A         	call	_timer1_int_handler	;wreg free
  4277  000066                     i1l3371:
  4278                           
  4279                           ;interrupts.c: 127: }
  4280                           ;interrupts.c: 130: if (PIR1bits.RCIF) {
  4281  000066  AA9E               	btfss	3998,5,c	;volatile
  4282  000068  D003               	goto	i1l47
  4283                           
  4284                           ;interrupts.c: 131: PIR1bits.RCIF = 0;
  4285  00006A  9A9E               	bcf	3998,5,c	;volatile
  4286                           
  4287                           ;interrupts.c: 132: uart_recv_int_handler();
  4288  00006C  EC26  F007         	call	_uart_recv_int_handler	;wreg free
  4289  000070                     i1l47:
  4290  000070  C02D  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  4291  000074  C02C  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  4292  000078  C02B  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  4293  00007C  C02A  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  4294  000080  C029  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  4295  000084  C028  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  4296  000088  C027  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  4297  00008C  C026  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  4298  000090  C025  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  4299  000094  C024  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  4300  000098  C023  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  4301  00009C  C022  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  4302  0000A0  C021  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  4303  0000A4  C020  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  4304  0000A8  C01F  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  4305  0000AC  C01E  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  4306  0000B0  C01D  FFD8         	movff	??_InterruptHandlerLow,status
  4307  0000B4  0010               	retfie	
  4308  0000B6                     __end_of_InterruptHandlerLow:
  4309                           	opt stack 0
  4310                           pclatu	equ	0xFFB
  4311                           pclath	equ	0xFFA
  4312                           tblptru	equ	0xFF8
  4313                           tblptrh	equ	0xFF7
  4314                           tblptrl	equ	0xFF6
  4315                           tablat	equ	0xFF5
  4316                           prodh	equ	0xFF4
  4317                           prodl	equ	0xFF3
  4318                           intcon	equ	0xFF2
  4319                           postinc0	equ	0xFEE
  4320                           fsr0h	equ	0xFEA
  4321                           fsr0l	equ	0xFE9
  4322                           wreg	equ	0xFE8
  4323                           indf1	equ	0xFE7
  4324                           fsr1h	equ	0xFE2
  4325                           fsr1l	equ	0xFE1
  4326                           bsr	equ	0xFE0
  4327                           indf2	equ	0xFDF
  4328                           postinc2	equ	0xFDE
  4329                           postdec2	equ	0xFDD
  4330                           fsr2h	equ	0xFDA
  4331                           fsr2l	equ	0xFD9
  4332                           status	equ	0xFD8
  4333                           
  4334 ;; *************** function _uart_recv_int_handler *****************
  4335 ;; Defined at:
  4336 ;;		line 11 in file "../src/my_uart.c"
  4337 ;; Parameters:    Size  Location     Type
  4338 ;;		None
  4339 ;; Auto vars:     Size  Location     Type
  4340 ;;		None
  4341 ;; Return value:  Size  Location     Type
  4342 ;;		None               void
  4343 ;; Registers used:
  4344 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4345 ;; Tracked objects:
  4346 ;;		On entry : 0/0
  4347 ;;		On exit  : 0/0
  4348 ;;		Unchanged: 0/0
  4349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4350 ;;      Params:         0       0       0       0       0
  4351 ;;      Locals:         0       0       0       0       0
  4352 ;;      Temps:          1       0       0       0       0
  4353 ;;      Totals:         1       0       0       0       0
  4354 ;;Total ram usage:        1 bytes
  4355 ;; Hardware stack levels used:    1
  4356 ;; Hardware stack levels required when called:    8
  4357 ;; This function calls:
  4358 ;;		_ReadUSART
  4359 ;;		_ToMainLow_sendmsg
  4360 ;; This function is called by:
  4361 ;;		_InterruptHandlerLow
  4362 ;; This function uses a non-reentrant model
  4363 ;;
  4364                           
  4365                           	psect	text29
  4366  000E4C                     __ptext29:
  4367                           	opt stack 0
  4368  000E4C                     _uart_recv_int_handler:
  4369                           	opt stack 17
  4370                           
  4371                           ;my_uart.c: 20: if ((PIR1bits.RCIF)) {
  4372                           
  4373                           ;incstack = 0
  4374  000E4C  AA9E               	btfss	3998,5,c	;volatile
  4375  000E4E  D03A               	goto	i1l3163
  4376                           
  4377                           ;my_uart.c: 21: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  4378  000E50  EE20 F004          	lfsr	2,4
  4379  000E54  504B               	movf	_uc_ptr,w,c
  4380  000E56  26D9               	addwf	fsr2l,f,c
  4381  000E58  504C               	movf	_uc_ptr+1,w,c
  4382  000E5A  22DA               	addwfc	fsr2h,f,c
  4383  000E5C  50DF               	movf	indf2,w,c
  4384  000E5E  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  4385  000E60  501B               	movf	??_uart_recv_int_handler,w,c
  4386  000E62  0D01               	mullw	1
  4387  000E64  50F3               	movf	prodl,w,c
  4388  000E66  244B               	addwf	_uc_ptr,w,c
  4389  000E68  6ED9               	movwf	fsr2l,c
  4390  000E6A  50F4               	movf	prodh,w,c
  4391  000E6C  204C               	addwfc	_uc_ptr+1,w,c
  4392  000E6E  6EDA               	movwf	fsr2h,c
  4393  000E70  EC4C  F00B         	call	_ReadUSART	;wreg free
  4394  000E74  6EDF               	movwf	indf2,c
  4395                           
  4396                           ;my_uart.c: 25: uc_ptr->buflen++;
  4397  000E76  EE20 F004          	lfsr	2,4
  4398  000E7A  504B               	movf	_uc_ptr,w,c
  4399  000E7C  26D9               	addwf	fsr2l,f,c
  4400  000E7E  504C               	movf	_uc_ptr+1,w,c
  4401  000E80  22DA               	addwfc	fsr2h,f,c
  4402  000E82  2ADF               	incf	indf2,f,c
  4403                           
  4404                           ;my_uart.c: 27: if (uc_ptr->buflen == 4) {
  4405  000E84  EE20 F004          	lfsr	2,4
  4406  000E88  504B               	movf	_uc_ptr,w,c
  4407  000E8A  26D9               	addwf	fsr2l,f,c
  4408  000E8C  504C               	movf	_uc_ptr+1,w,c
  4409  000E8E  22DA               	addwfc	fsr2h,f,c
  4410  000E90  0E04               	movlw	4
  4411  000E92  62DF               	cpfseq	indf2,c
  4412  000E94  D017               	goto	i1l3163
  4413                           
  4414                           ;my_uart.c: 28: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
  4415  000E96  0E1F               	movlw	31
  4416  000E98  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  4417  000E9A  C04C  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  4418  000E9E  C04B  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  4419  000EA2  EE20 F004          	lfsr	2,4
  4420  000EA6  504B               	movf	_uc_ptr,w,c
  4421  000EA8  26D9               	addwf	fsr2l,f,c
  4422  000EAA  504C               	movf	_uc_ptr+1,w,c
  4423  000EAC  22DA               	addwfc	fsr2h,f,c
  4424  000EAE  50DF               	movf	indf2,w,c
  4425  000EB0  EC07  F00B         	call	_ToMainLow_sendmsg
  4426                           
  4427                           ;my_uart.c: 29: uc_ptr->buflen = 0;
  4428  000EB4  EE20 F004          	lfsr	2,4
  4429  000EB8  504B               	movf	_uc_ptr,w,c
  4430  000EBA  26D9               	addwf	fsr2l,f,c
  4431  000EBC  504C               	movf	_uc_ptr+1,w,c
  4432  000EBE  22DA               	addwfc	fsr2h,f,c
  4433  000EC0  0E00               	movlw	0
  4434  000EC2  6EDF               	movwf	indf2,c
  4435  000EC4                     i1l3163:
  4436                           
  4437                           ;my_uart.c: 30: }
  4438                           ;my_uart.c: 31: }
  4439                           ;my_uart.c: 38: if (USART_Status.OVERRUN_ERROR == 1) {
  4440  000EC4  A64E               	btfss	_USART_Status,3,c
  4441  000EC6  0012               	return	
  4442                           
  4443                           ;my_uart.c: 43: RCSTAbits.CREN = 0;
  4444  000EC8  98AB               	bcf	4011,4,c	;volatile
  4445                           
  4446                           ;my_uart.c: 44: RCSTAbits.CREN = 1;
  4447  000ECA  88AB               	bsf	4011,4,c	;volatile
  4448                           
  4449                           ;my_uart.c: 45: ToMainLow_sendmsg(0, 30, (void *) 0);
  4450  000ECC  0E1E               	movlw	30
  4451  000ECE  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  4452  000ED0  0E00               	movlw	0
  4453  000ED2  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  4454  000ED4  0E00               	movlw	0
  4455  000ED6  6E18               	movwf	ToMainLow_sendmsg@data,c
  4456  000ED8  0E00               	movlw	0
  4457  000EDA  EC07  F00B         	call	_ToMainLow_sendmsg
  4458  000EDE  0012               	return	
  4459  000EE0                     __end_of_uart_recv_int_handler:
  4460                           	opt stack 0
  4461                           pclatu	equ	0xFFB
  4462                           pclath	equ	0xFFA
  4463                           tblptru	equ	0xFF8
  4464                           tblptrh	equ	0xFF7
  4465                           tblptrl	equ	0xFF6
  4466                           tablat	equ	0xFF5
  4467                           prodh	equ	0xFF4
  4468                           prodl	equ	0xFF3
  4469                           intcon	equ	0xFF2
  4470                           postinc0	equ	0xFEE
  4471                           fsr0h	equ	0xFEA
  4472                           fsr0l	equ	0xFE9
  4473                           wreg	equ	0xFE8
  4474                           indf1	equ	0xFE7
  4475                           fsr1h	equ	0xFE2
  4476                           fsr1l	equ	0xFE1
  4477                           bsr	equ	0xFE0
  4478                           indf2	equ	0xFDF
  4479                           postinc2	equ	0xFDE
  4480                           postdec2	equ	0xFDD
  4481                           fsr2h	equ	0xFDA
  4482                           fsr2l	equ	0xFD9
  4483                           status	equ	0xFD8
  4484                           
  4485 ;; *************** function _ReadUSART *****************
  4486 ;; Defined at:
  4487 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uread.c"
  4488 ;; Parameters:    Size  Location     Type
  4489 ;;		None
  4490 ;; Auto vars:     Size  Location     Type
  4491 ;;  data            1    0[COMRAM] unsigned char 
  4492 ;; Return value:  Size  Location     Type
  4493 ;;                  1    wreg      unsigned char 
  4494 ;; Registers used:
  4495 ;;		wreg, status,2, status,0
  4496 ;; Tracked objects:
  4497 ;;		On entry : 0/0
  4498 ;;		On exit  : 0/0
  4499 ;;		Unchanged: 0/0
  4500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4501 ;;      Params:         0       0       0       0       0
  4502 ;;      Locals:         1       0       0       0       0
  4503 ;;      Temps:          0       0       0       0       0
  4504 ;;      Totals:         1       0       0       0       0
  4505 ;;Total ram usage:        1 bytes
  4506 ;; Hardware stack levels used:    1
  4507 ;; Hardware stack levels required when called:    5
  4508 ;; This function calls:
  4509 ;;		Nothing
  4510 ;; This function is called by:
  4511 ;;		_uart_recv_int_handler
  4512 ;; This function uses a non-reentrant model
  4513 ;;
  4514                           
  4515                           	psect	text30
  4516  001698                     __ptext30:
  4517                           	opt stack 0
  4518  001698                     _ReadUSART:
  4519                           	opt stack 19
  4520                           
  4521                           ;incstack = 0
  4522  001698  0EF2               	movlw	242
  4523  00169A  164E               	andwf	_USART_Status,f,c
  4524  00169C  ACAB               	btfss	4011,6,c	;volatile
  4525  00169E  D003               	goto	i1l468
  4526  0016A0  904E               	bcf	_USART_Status,0,c
  4527  0016A2  B0AB               	btfsc	4011,0,c	;volatile
  4528  0016A4  804E               	bsf	_USART_Status,0,c
  4529  0016A6                     i1l468:
  4530  0016A6  B4AB               	btfsc	4011,2,c	;volatile
  4531  0016A8  844E               	bsf	_USART_Status,2,c
  4532  0016AA  B2AB               	btfsc	4011,1,c	;volatile
  4533  0016AC  864E               	bsf	_USART_Status,3,c
  4534  0016AE  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  4535  0016B2  5001               	movf	ReadUSART@data,w,c
  4536  0016B4  0012               	return	
  4537  0016B6                     __end_of_ReadUSART:
  4538                           	opt stack 0
  4539                           pclatu	equ	0xFFB
  4540                           pclath	equ	0xFFA
  4541                           tblptru	equ	0xFF8
  4542                           tblptrh	equ	0xFF7
  4543                           tblptrl	equ	0xFF6
  4544                           tablat	equ	0xFF5
  4545                           prodh	equ	0xFF4
  4546                           prodl	equ	0xFF3
  4547                           intcon	equ	0xFF2
  4548                           postinc0	equ	0xFEE
  4549                           fsr0h	equ	0xFEA
  4550                           fsr0l	equ	0xFE9
  4551                           wreg	equ	0xFE8
  4552                           indf1	equ	0xFE7
  4553                           fsr1h	equ	0xFE2
  4554                           fsr1l	equ	0xFE1
  4555                           bsr	equ	0xFE0
  4556                           indf2	equ	0xFDF
  4557                           postinc2	equ	0xFDE
  4558                           postdec2	equ	0xFDD
  4559                           fsr2h	equ	0xFDA
  4560                           fsr2l	equ	0xFD9
  4561                           status	equ	0xFD8
  4562                           
  4563 ;; *************** function _timer1_int_handler *****************
  4564 ;; Defined at:
  4565 ;;		line 36 in file "../src/user_interrupts.c"
  4566 ;; Parameters:    Size  Location     Type
  4567 ;;		None
  4568 ;; Auto vars:     Size  Location     Type
  4569 ;;  result          2   26[COMRAM] unsigned int 
  4570 ;; Return value:  Size  Location     Type
  4571 ;;		None               void
  4572 ;; Registers used:
  4573 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4574 ;; Tracked objects:
  4575 ;;		On entry : 0/0
  4576 ;;		On exit  : 0/0
  4577 ;;		Unchanged: 0/0
  4578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4579 ;;      Params:         0       0       0       0       0
  4580 ;;      Locals:         2       0       0       0       0
  4581 ;;      Temps:          0       0       0       0       0
  4582 ;;      Totals:         2       0       0       0       0
  4583 ;;Total ram usage:        2 bytes
  4584 ;; Hardware stack levels used:    1
  4585 ;; Hardware stack levels required when called:    8
  4586 ;; This function calls:
  4587 ;;		_ReadTimer1
  4588 ;;		_ToMainLow_sendmsg
  4589 ;;		_WriteTimer1
  4590 ;; This function is called by:
  4591 ;;		_InterruptHandlerLow
  4592 ;; This function uses a non-reentrant model
  4593 ;;
  4594                           
  4595                           	psect	text31
  4596  00156C                     __ptext31:
  4597                           	opt stack 0
  4598  00156C                     _timer1_int_handler:
  4599                           	opt stack 17
  4600                           
  4601                           ;user_interrupts.c: 37: unsigned int result;
  4602                           ;user_interrupts.c: 44: result = ReadTimer1();
  4603                           
  4604                           ;incstack = 0
  4605  00156C  EC84  F00B         	call	_ReadTimer1	;wreg free
  4606  001570  C001  F01B         	movff	?_ReadTimer1,timer1_int_handler@result
  4607  001574  C002  F01C         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  4608                           
  4609                           ;user_interrupts.c: 45: ToMainLow_sendmsg(0, 11, (void *) 0);
  4610  001578  0E0B               	movlw	11
  4611  00157A  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  4612  00157C  0E00               	movlw	0
  4613  00157E  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  4614  001580  0E00               	movlw	0
  4615  001582  6E18               	movwf	ToMainLow_sendmsg@data,c
  4616  001584  0E00               	movlw	0
  4617  001586  EC07  F00B         	call	_ToMainLow_sendmsg
  4618                           
  4619                           ;user_interrupts.c: 48: WriteTimer1(0);
  4620  00158A  0E00               	movlw	0
  4621  00158C  6E02               	movwf	WriteTimer1@timer1+1,c
  4622  00158E  0E00               	movlw	0
  4623  001590  6E01               	movwf	WriteTimer1@timer1,c
  4624  001592  EC7B  F00B         	call	_WriteTimer1	;wreg free
  4625  001596  0012               	return	
  4626  001598                     __end_of_timer1_int_handler:
  4627                           	opt stack 0
  4628                           pclatu	equ	0xFFB
  4629                           pclath	equ	0xFFA
  4630                           tblptru	equ	0xFF8
  4631                           tblptrh	equ	0xFF7
  4632                           tblptrl	equ	0xFF6
  4633                           tablat	equ	0xFF5
  4634                           prodh	equ	0xFF4
  4635                           prodl	equ	0xFF3
  4636                           intcon	equ	0xFF2
  4637                           postinc0	equ	0xFEE
  4638                           fsr0h	equ	0xFEA
  4639                           fsr0l	equ	0xFE9
  4640                           wreg	equ	0xFE8
  4641                           indf1	equ	0xFE7
  4642                           fsr1h	equ	0xFE2
  4643                           fsr1l	equ	0xFE1
  4644                           bsr	equ	0xFE0
  4645                           indf2	equ	0xFDF
  4646                           postinc2	equ	0xFDE
  4647                           postdec2	equ	0xFDD
  4648                           fsr2h	equ	0xFDA
  4649                           fsr2l	equ	0xFD9
  4650                           status	equ	0xFD8
  4651                           
  4652 ;; *************** function _WriteTimer1 *****************
  4653 ;; Defined at:
  4654 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1write.c"
  4655 ;; Parameters:    Size  Location     Type
  4656 ;;  timer1          2    0[COMRAM] unsigned int 
  4657 ;; Auto vars:     Size  Location     Type
  4658 ;;  timer           2    2[COMRAM] struct Timers
  4659 ;; Return value:  Size  Location     Type
  4660 ;;		None               void
  4661 ;; Registers used:
  4662 ;;		None
  4663 ;; Tracked objects:
  4664 ;;		On entry : 0/0
  4665 ;;		On exit  : 0/0
  4666 ;;		Unchanged: 0/0
  4667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4668 ;;      Params:         2       0       0       0       0
  4669 ;;      Locals:         2       0       0       0       0
  4670 ;;      Temps:          0       0       0       0       0
  4671 ;;      Totals:         4       0       0       0       0
  4672 ;;Total ram usage:        4 bytes
  4673 ;; Hardware stack levels used:    1
  4674 ;; Hardware stack levels required when called:    5
  4675 ;; This function calls:
  4676 ;;		Nothing
  4677 ;; This function is called by:
  4678 ;;		_timer1_int_handler
  4679 ;; This function uses a non-reentrant model
  4680 ;;
  4681                           
  4682                           	psect	text32
  4683  0016F6                     __ptext32:
  4684                           	opt stack 0
  4685  0016F6                     _WriteTimer1:
  4686                           	opt stack 19
  4687                           
  4688                           ;incstack = 0
  4689  0016F6  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  4690  0016FA  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  4691  0016FE  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  4692  001702  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  4693  001706  0012               	return	
  4694  001708                     __end_of_WriteTimer1:
  4695                           	opt stack 0
  4696                           pclatu	equ	0xFFB
  4697                           pclath	equ	0xFFA
  4698                           tblptru	equ	0xFF8
  4699                           tblptrh	equ	0xFF7
  4700                           tblptrl	equ	0xFF6
  4701                           tablat	equ	0xFF5
  4702                           prodh	equ	0xFF4
  4703                           prodl	equ	0xFF3
  4704                           intcon	equ	0xFF2
  4705                           postinc0	equ	0xFEE
  4706                           fsr0h	equ	0xFEA
  4707                           fsr0l	equ	0xFE9
  4708                           wreg	equ	0xFE8
  4709                           indf1	equ	0xFE7
  4710                           fsr1h	equ	0xFE2
  4711                           fsr1l	equ	0xFE1
  4712                           bsr	equ	0xFE0
  4713                           indf2	equ	0xFDF
  4714                           postinc2	equ	0xFDE
  4715                           postdec2	equ	0xFDD
  4716                           fsr2h	equ	0xFDA
  4717                           fsr2l	equ	0xFD9
  4718                           status	equ	0xFD8
  4719                           
  4720 ;; *************** function _ToMainLow_sendmsg *****************
  4721 ;; Defined at:
  4722 ;;		line 103 in file "../src/messages.c"
  4723 ;; Parameters:    Size  Location     Type
  4724 ;;  length          1    wreg     unsigned char 
  4725 ;;  msgtype         1   22[COMRAM] unsigned char 
  4726 ;;  data            2   23[COMRAM] PTR void 
  4727 ;;		 -> NULL(0), main@uc(5), 
  4728 ;; Auto vars:     Size  Location     Type
  4729 ;;  length          1   25[COMRAM] unsigned char 
  4730 ;; Return value:  Size  Location     Type
  4731 ;;                  1    wreg      char 
  4732 ;; Registers used:
  4733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4734 ;; Tracked objects:
  4735 ;;		On entry : 0/0
  4736 ;;		On exit  : 0/0
  4737 ;;		Unchanged: 0/0
  4738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4739 ;;      Params:         3       0       0       0       0
  4740 ;;      Locals:         1       0       0       0       0
  4741 ;;      Temps:          0       0       0       0       0
  4742 ;;      Totals:         4       0       0       0       0
  4743 ;;Total ram usage:        4 bytes
  4744 ;; Hardware stack levels used:    1
  4745 ;; Hardware stack levels required when called:    7
  4746 ;; This function calls:
  4747 ;;		i1_send_msg
  4748 ;; This function is called by:
  4749 ;;		_uart_recv_int_handler
  4750 ;;		_timer1_int_handler
  4751 ;; This function uses a non-reentrant model
  4752 ;;
  4753                           
  4754                           	psect	text33
  4755  00160E                     __ptext33:
  4756                           	opt stack 0
  4757  00160E                     _ToMainLow_sendmsg:
  4758                           	opt stack 17
  4759                           
  4760                           ;incstack = 0
  4761                           ;ToMainLow_sendmsg@length stored from wreg
  4762  00160E  6E1A               	movwf	ToMainLow_sendmsg@length,c
  4763                           
  4764                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  4765                           ;	Return value of _ToMainLow_sendmsg is never used
  4766  001610  0101               	movlb	1	; () banked
  4767  001612  0E01               	movlw	high _ToMainLow_MQ
  4768  001614  6E0C               	movwf	i1send_msg@qptr+1,c
  4769  001616  0101               	movlb	1	; () banked
  4770  001618  0EA2               	movlw	low _ToMainLow_MQ
  4771  00161A  6E0B               	movwf	i1send_msg@qptr,c
  4772  00161C  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  4773  001620  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  4774  001624  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  4775  001628  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  4776  00162C  EC7C  F006         	call	i1_send_msg	;wreg free
  4777  001630  0012               	return	
  4778  001632                     __end_of_ToMainLow_sendmsg:
  4779                           	opt stack 0
  4780                           pclatu	equ	0xFFB
  4781                           pclath	equ	0xFFA
  4782                           tblptru	equ	0xFF8
  4783                           tblptrh	equ	0xFF7
  4784                           tblptrl	equ	0xFF6
  4785                           tablat	equ	0xFF5
  4786                           prodh	equ	0xFF4
  4787                           prodl	equ	0xFF3
  4788                           intcon	equ	0xFF2
  4789                           postinc0	equ	0xFEE
  4790                           fsr0h	equ	0xFEA
  4791                           fsr0l	equ	0xFE9
  4792                           wreg	equ	0xFE8
  4793                           indf1	equ	0xFE7
  4794                           fsr1h	equ	0xFE2
  4795                           fsr1l	equ	0xFE1
  4796                           bsr	equ	0xFE0
  4797                           indf2	equ	0xFDF
  4798                           postinc2	equ	0xFDE
  4799                           postdec2	equ	0xFDD
  4800                           fsr2h	equ	0xFDA
  4801                           fsr2l	equ	0xFD9
  4802                           status	equ	0xFD8
  4803                           
  4804 ;; *************** function i1_send_msg *****************
  4805 ;; Defined at:
  4806 ;;		line 24 in file "../src/messages.c"
  4807 ;; Parameters:    Size  Location     Type
  4808 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  4809 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4810 ;;  length          1   12[COMRAM] unsigned char 
  4811 ;;  msgtype         1   13[COMRAM] unsigned char 
  4812 ;;  data            2   14[COMRAM] PTR void 
  4813 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@t1thread_data(2), 
  4814 ;;		 -> main@ic(28), main@uc(5), 
  4815 ;; Auto vars:     Size  Location     Type
  4816 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  4817 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4818 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4819 ;;  send_msg        2   17[COMRAM] unsigned int 
  4820 ;;  send_msg        1   19[COMRAM] unsigned char 
  4821 ;; Return value:  Size  Location     Type
  4822 ;;                  1    wreg      char 
  4823 ;; Registers used:
  4824 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4825 ;; Tracked objects:
  4826 ;;		On entry : 0/0
  4827 ;;		On exit  : 0/0
  4828 ;;		Unchanged: 0/0
  4829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4830 ;;      Params:         6       0       0       0       0
  4831 ;;      Locals:         5       0       0       0       0
  4832 ;;      Temps:          1       0       0       0       0
  4833 ;;      Totals:        12       0       0       0       0
  4834 ;;Total ram usage:       12 bytes
  4835 ;; Hardware stack levels used:    1
  4836 ;; Hardware stack levels required when called:    6
  4837 ;; This function calls:
  4838 ;;		i1_memcpy
  4839 ;; This function is called by:
  4840 ;;		_ToMainLow_sendmsg
  4841 ;; This function uses a non-reentrant model
  4842 ;;
  4843                           
  4844                           	psect	text34
  4845  000CF8                     __ptext34:
  4846                           	opt stack 0
  4847  000CF8                     i1_send_msg:
  4848                           	opt stack 17
  4849                           
  4850                           ;messages.c: 25: unsigned char slot;
  4851                           ;messages.c: 27: msg *qmsg;
  4852                           ;messages.c: 28: size_t tlength = length;
  4853                           
  4854                           ;incstack = 0
  4855  000CF8  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  4856  000CFC  6A13               	clrf	i1send_msg@tlength+1,c
  4857                           
  4858                           ;messages.c: 38: slot = qptr->cur_write_ind;
  4859  000CFE  EE20 F034          	lfsr	2,52
  4860  000D02  500B               	movf	i1send_msg@qptr,w,c
  4861  000D04  26D9               	addwf	fsr2l,f,c
  4862  000D06  500C               	movf	i1send_msg@qptr+1,w,c
  4863  000D08  22DA               	addwfc	fsr2h,f,c
  4864  000D0A  50DF               	movf	indf2,w,c
  4865  000D0C  6E14               	movwf	i1send_msg@slot,c
  4866                           
  4867                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  4868  000D0E  5014               	movf	i1send_msg@slot,w,c
  4869  000D10  0D0D               	mullw	13
  4870  000D12  50F3               	movf	prodl,w,c
  4871  000D14  240B               	addwf	i1send_msg@qptr,w,c
  4872  000D16  6E15               	movwf	i1send_msg@qmsg,c
  4873  000D18  50F4               	movf	prodh,w,c
  4874  000D1A  200C               	addwfc	i1send_msg@qptr+1,w,c
  4875  000D1C  6E16               	movwf	i1send_msg@qmsg+1,c
  4876                           
  4877                           ;messages.c: 41: if (qmsg->full != 0) {
  4878  000D1E  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  4879  000D22  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  4880  000D26  50DF               	movf	indf2,w,c
  4881  000D28  B4D8               	btfsc	status,2,c
  4882  000D2A  D002               	goto	i1l2793
  4883                           
  4884                           ;messages.c: 42: return (-1);
  4885  000D2C  0EFF               	movlw	255
  4886  000D2E  0012               	return	
  4887  000D30                     i1l2793:
  4888                           
  4889                           ;messages.c: 43: }
  4890                           ;messages.c: 46: qmsg->length = length;
  4891  000D30  EE20 F001          	lfsr	2,1
  4892  000D34  5015               	movf	i1send_msg@qmsg,w,c
  4893  000D36  26D9               	addwf	fsr2l,f,c
  4894  000D38  5016               	movf	i1send_msg@qmsg+1,w,c
  4895  000D3A  22DA               	addwfc	fsr2h,f,c
  4896  000D3C  C00D  FFDF         	movff	i1send_msg@length,indf2
  4897                           
  4898                           ;messages.c: 47: qmsg->msgtype = msgtype;
  4899  000D40  EE20 F002          	lfsr	2,2
  4900  000D44  5015               	movf	i1send_msg@qmsg,w,c
  4901  000D46  26D9               	addwf	fsr2l,f,c
  4902  000D48  5016               	movf	i1send_msg@qmsg+1,w,c
  4903  000D4A  22DA               	addwfc	fsr2h,f,c
  4904  000D4C  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  4905                           
  4906                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  4907  000D50  0E03               	movlw	3
  4908  000D52  2415               	addwf	i1send_msg@qmsg,w,c
  4909  000D54  6E01               	movwf	i1memcpy@d1,c
  4910  000D56  0E00               	movlw	0
  4911  000D58  2016               	addwfc	i1send_msg@qmsg+1,w,c
  4912  000D5A  6E02               	movwf	i1memcpy@d1+1,c
  4913  000D5C  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  4914  000D60  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  4915  000D64  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  4916  000D68  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  4917  000D6C  EC8A  F009         	call	i1_memcpy	;wreg free
  4918                           
  4919                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  4920  000D70  EE20 F034          	lfsr	2,52
  4921  000D74  500B               	movf	i1send_msg@qptr,w,c
  4922  000D76  26D9               	addwf	fsr2l,f,c
  4923  000D78  500C               	movf	i1send_msg@qptr+1,w,c
  4924  000D7A  22DA               	addwfc	fsr2h,f,c
  4925  000D7C  EE10 F034          	lfsr	1,52
  4926  000D80  500B               	movf	i1send_msg@qptr,w,c
  4927  000D82  26E1               	addwf	fsr1l,f,c
  4928  000D84  500C               	movf	i1send_msg@qptr+1,w,c
  4929  000D86  22E2               	addwfc	fsr1h,f,c
  4930  000D88  50E7               	movf	indf1,w,c
  4931  000D8A  6E11               	movwf	??i1_send_msg& (0+255),c
  4932  000D8C  2811               	incf	??i1_send_msg,w,c
  4933  000D8E  0B03               	andlw	3
  4934  000D90  6EDF               	movwf	indf2,c
  4935                           
  4936                           ;messages.c: 59: qmsg->full = 1;
  4937  000D92  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  4938  000D96  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  4939  000D9A  0E01               	movlw	1
  4940  000D9C  6EDF               	movwf	indf2,c
  4941                           
  4942                           ;messages.c: 60: return (1);
  4943  000D9E  0E01               	movlw	1
  4944  000DA0  0012               	return	
  4945  000DA2                     __end_ofi1_send_msg:
  4946                           	opt stack 0
  4947                           pclatu	equ	0xFFB
  4948                           pclath	equ	0xFFA
  4949                           tblptru	equ	0xFF8
  4950                           tblptrh	equ	0xFF7
  4951                           tblptrl	equ	0xFF6
  4952                           tablat	equ	0xFF5
  4953                           prodh	equ	0xFF4
  4954                           prodl	equ	0xFF3
  4955                           intcon	equ	0xFF2
  4956                           postinc0	equ	0xFEE
  4957                           fsr0h	equ	0xFEA
  4958                           fsr0l	equ	0xFE9
  4959                           wreg	equ	0xFE8
  4960                           indf1	equ	0xFE7
  4961                           fsr1h	equ	0xFE2
  4962                           fsr1l	equ	0xFE1
  4963                           bsr	equ	0xFE0
  4964                           indf2	equ	0xFDF
  4965                           postinc2	equ	0xFDE
  4966                           postdec2	equ	0xFDD
  4967                           fsr2h	equ	0xFDA
  4968                           fsr2l	equ	0xFD9
  4969                           status	equ	0xFD8
  4970                           
  4971 ;; *************** function i1_memcpy *****************
  4972 ;; Defined at:
  4973 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  4974 ;; Parameters:    Size  Location     Type
  4975 ;;  d1              2    0[COMRAM] PTR void 
  4976 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4977 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4978 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  4979 ;;  s1              2    2[COMRAM] PTR const void 
  4980 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4981 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4982 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  4983 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), 
  4984 ;;		 -> main@ic(28), main@uc(5), 
  4985 ;;  n               2    4[COMRAM] unsigned int 
  4986 ;; Auto vars:     Size  Location     Type
  4987 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  4988 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4989 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4990 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  4991 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), 
  4992 ;;		 -> main@ic(28), main@uc(5), 
  4993 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  4994 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4995 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4996 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  4997 ;; Return value:  Size  Location     Type
  4998 ;;                  2    0[COMRAM] PTR void 
  4999 ;; Registers used:
  5000 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5001 ;; Tracked objects:
  5002 ;;		On entry : 0/0
  5003 ;;		On exit  : 0/0
  5004 ;;		Unchanged: 0/0
  5005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5006 ;;      Params:         6       0       0       0       0
  5007 ;;      Locals:         4       0       0       0       0
  5008 ;;      Temps:          0       0       0       0       0
  5009 ;;      Totals:        10       0       0       0       0
  5010 ;;Total ram usage:       10 bytes
  5011 ;; Hardware stack levels used:    1
  5012 ;; Hardware stack levels required when called:    5
  5013 ;; This function calls:
  5014 ;;		Nothing
  5015 ;; This function is called by:
  5016 ;;		i1_send_msg
  5017 ;; This function uses a non-reentrant model
  5018 ;;
  5019                           
  5020                           	psect	text35
  5021  001314                     __ptext35:
  5022                           	opt stack 0
  5023  001314                     i1_memcpy:
  5024                           	opt stack 17
  5025                           
  5026                           ;incstack = 0
  5027  001314  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  5028  001318  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  5029  00131C  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  5030  001320  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  5031  001324  D00E               	goto	i1l2725
  5032  001326                     i1l2719:
  5033  001326  C009  FFD9         	movff	i1memcpy@s,fsr2l
  5034  00132A  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  5035  00132E  C007  FFE1         	movff	i1memcpy@d,fsr1l
  5036  001332  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  5037  001336  CFDF FFE7          	movff	indf2,indf1
  5038  00133A  4A09               	infsnz	i1memcpy@s,f,c
  5039  00133C  2A0A               	incf	i1memcpy@s+1,f,c
  5040  00133E  4A07               	infsnz	i1memcpy@d,f,c
  5041  001340  2A08               	incf	i1memcpy@d+1,f,c
  5042  001342                     i1l2725:
  5043  001342  0605               	decf	i1memcpy@n,f,c
  5044  001344  A0D8               	btfss	status,0,c
  5045  001346  0606               	decf	i1memcpy@n+1,f,c
  5046  001348  2805               	incf	i1memcpy@n& (0+255),w,c
  5047  00134A  B4D8               	btfsc	status,2,c
  5048  00134C  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  5049  00134E  B4D8               	btfsc	status,2,c
  5050                           
  5051                           ;	Return value of i1_memcpy is never used
  5052  001350  0012               	return	
  5053  001352  D7E9               	goto	i1l2719
  5054  001354                     __end_ofi1_memcpy:
  5055                           	opt stack 0
  5056                           pclatu	equ	0xFFB
  5057                           pclath	equ	0xFFA
  5058                           tblptru	equ	0xFF8
  5059                           tblptrh	equ	0xFF7
  5060                           tblptrl	equ	0xFF6
  5061                           tablat	equ	0xFF5
  5062                           prodh	equ	0xFF4
  5063                           prodl	equ	0xFF3
  5064                           intcon	equ	0xFF2
  5065                           postinc0	equ	0xFEE
  5066                           fsr0h	equ	0xFEA
  5067                           fsr0l	equ	0xFE9
  5068                           wreg	equ	0xFE8
  5069                           indf1	equ	0xFE7
  5070                           fsr1h	equ	0xFE2
  5071                           fsr1l	equ	0xFE1
  5072                           bsr	equ	0xFE0
  5073                           indf2	equ	0xFDF
  5074                           postinc2	equ	0xFDE
  5075                           postdec2	equ	0xFDD
  5076                           fsr2h	equ	0xFDA
  5077                           fsr2l	equ	0xFD9
  5078                           status	equ	0xFD8
  5079                           
  5080 ;; *************** function _ReadTimer1 *****************
  5081 ;; Defined at:
  5082 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1read.c"
  5083 ;; Parameters:    Size  Location     Type
  5084 ;;		None
  5085 ;; Auto vars:     Size  Location     Type
  5086 ;;  timer           2    2[COMRAM] struct Timers
  5087 ;; Return value:  Size  Location     Type
  5088 ;;                  2    0[COMRAM] unsigned int 
  5089 ;; Registers used:
  5090 ;;		None
  5091 ;; Tracked objects:
  5092 ;;		On entry : 0/0
  5093 ;;		On exit  : 0/0
  5094 ;;		Unchanged: 0/0
  5095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5096 ;;      Params:         2       0       0       0       0
  5097 ;;      Locals:         2       0       0       0       0
  5098 ;;      Temps:          0       0       0       0       0
  5099 ;;      Totals:         4       0       0       0       0
  5100 ;;Total ram usage:        4 bytes
  5101 ;; Hardware stack levels used:    1
  5102 ;; Hardware stack levels required when called:    5
  5103 ;; This function calls:
  5104 ;;		Nothing
  5105 ;; This function is called by:
  5106 ;;		_timer1_int_handler
  5107 ;; This function uses a non-reentrant model
  5108 ;;
  5109                           
  5110                           	psect	text36
  5111  001708                     __ptext36:
  5112                           	opt stack 0
  5113  001708                     _ReadTimer1:
  5114                           	opt stack 19
  5115                           
  5116                           ;incstack = 0
  5117  001708  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  5118  00170C  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  5119  001710  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  5120  001714  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  5121  001718  0012               	return	
  5122  00171A                     __end_of_ReadTimer1:
  5123                           	opt stack 0
  5124                           pclatu	equ	0xFFB
  5125                           pclath	equ	0xFFA
  5126                           tblptru	equ	0xFF8
  5127                           tblptrh	equ	0xFF7
  5128                           tblptrl	equ	0xFF6
  5129                           tablat	equ	0xFF5
  5130                           prodh	equ	0xFF4
  5131                           prodl	equ	0xFF3
  5132                           intcon	equ	0xFF2
  5133                           postinc0	equ	0xFEE
  5134                           fsr0h	equ	0xFEA
  5135                           fsr0l	equ	0xFE9
  5136                           wreg	equ	0xFE8
  5137                           indf1	equ	0xFE7
  5138                           fsr1h	equ	0xFE2
  5139                           fsr1l	equ	0xFE1
  5140                           bsr	equ	0xFE0
  5141                           indf2	equ	0xFDF
  5142                           postinc2	equ	0xFDE
  5143                           postdec2	equ	0xFDD
  5144                           fsr2h	equ	0xFDA
  5145                           fsr2l	equ	0xFD9
  5146                           status	equ	0xFD8
  5147                           
  5148 ;; *************** function _InterruptHandlerHigh *****************
  5149 ;; Defined at:
  5150 ;;		line 83 in file "../src/interrupts.c"
  5151 ;; Parameters:    Size  Location     Type
  5152 ;;		None
  5153 ;; Auto vars:     Size  Location     Type
  5154 ;;		None
  5155 ;; Return value:  Size  Location     Type
  5156 ;;		None               void
  5157 ;; Registers used:
  5158 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5159 ;; Tracked objects:
  5160 ;;		On entry : 0/0
  5161 ;;		On exit  : 0/0
  5162 ;;		Unchanged: 0/0
  5163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5164 ;;      Params:         0       0       0       0       0
  5165 ;;      Locals:         0       0       0       0       0
  5166 ;;      Temps:          0      14       0       0       0
  5167 ;;      Totals:         0      14       0       0       0
  5168 ;;Total ram usage:       14 bytes
  5169 ;; Hardware stack levels used:    1
  5170 ;; Hardware stack levels required when called:    4
  5171 ;; This function calls:
  5172 ;;		_SleepIfOkay
  5173 ;;		_i2c_int_handler
  5174 ;;		_timer0_int_handler
  5175 ;; This function is called by:
  5176 ;;		Interrupt level 2
  5177 ;; This function uses a non-reentrant model
  5178 ;;
  5179                           
  5180                           	psect	intcode
  5181  000008                     __pintcode:
  5182                           	opt stack 0
  5183  000008                     _InterruptHandlerHigh:
  5184                           	opt stack 17
  5185                           
  5186                           ;incstack = 0
  5187  000008  CFFA F089          	movff	pclath,??_InterruptHandlerHigh
  5188  00000C  CFFB F08A          	movff	pclatu,??_InterruptHandlerHigh+1
  5189  000010  CFE9 F08B          	movff	fsr0l,??_InterruptHandlerHigh+2
  5190  000014  EFB1  F007         	goto	int_func
  5191                           pclatu	equ	0xFFB
  5192                           pclath	equ	0xFFA
  5193                           tblptru	equ	0xFF8
  5194                           tblptrh	equ	0xFF7
  5195                           tblptrl	equ	0xFF6
  5196                           tablat	equ	0xFF5
  5197                           prodh	equ	0xFF4
  5198                           prodl	equ	0xFF3
  5199                           intcon	equ	0xFF2
  5200                           postinc0	equ	0xFEE
  5201                           fsr0h	equ	0xFEA
  5202                           fsr0l	equ	0xFE9
  5203                           wreg	equ	0xFE8
  5204                           indf1	equ	0xFE7
  5205                           fsr1h	equ	0xFE2
  5206                           fsr1l	equ	0xFE1
  5207                           bsr	equ	0xFE0
  5208                           indf2	equ	0xFDF
  5209                           postinc2	equ	0xFDE
  5210                           postdec2	equ	0xFDD
  5211                           fsr2h	equ	0xFDA
  5212                           fsr2l	equ	0xFD9
  5213                           status	equ	0xFD8
  5214                           
  5215                           	psect	intcode_body
  5216  000F62                     __pintcode_body:
  5217                           	opt stack 17
  5218  000F62                     int_func:
  5219                           	opt stack 17
  5220  000F62  CFEA F08C          	movff	fsr0h,??_InterruptHandlerHigh+3
  5221  000F66  CFE1 F08D          	movff	fsr1l,??_InterruptHandlerHigh+4
  5222  000F6A  CFE2 F08E          	movff	fsr1h,??_InterruptHandlerHigh+5
  5223  000F6E  CFD9 F08F          	movff	fsr2l,??_InterruptHandlerHigh+6
  5224  000F72  CFDA F090          	movff	fsr2h,??_InterruptHandlerHigh+7
  5225  000F76  CFF3 F091          	movff	prodl,??_InterruptHandlerHigh+8
  5226  000F7A  CFF4 F092          	movff	prodh,??_InterruptHandlerHigh+9
  5227  000F7E  CFF6 F093          	movff	tblptrl,??_InterruptHandlerHigh+10
  5228  000F82  CFF7 F094          	movff	tblptrh,??_InterruptHandlerHigh+11
  5229  000F86  CFF8 F095          	movff	tblptru,??_InterruptHandlerHigh+12
  5230  000F8A  CFF5 F096          	movff	tablat,??_InterruptHandlerHigh+13
  5231                           
  5232                           ;interrupts.c: 88: if (PIR1bits.SSPIF) {
  5233  000F8E  A69E               	btfss	3998,3,c	;volatile
  5234  000F90  D003               	goto	i2l3357
  5235                           
  5236                           ;interrupts.c: 90: PIR1bits.SSPIF = 0;
  5237  000F92  969E               	bcf	3998,3,c	;volatile
  5238                           
  5239                           ;interrupts.c: 92: i2c_int_handler();
  5240  000F94  EC5D  F000         	call	_i2c_int_handler	;wreg free
  5241  000F98                     i2l3357:
  5242                           
  5243                           ;interrupts.c: 93: }
  5244                           ;interrupts.c: 96: if (INTCONbits.TMR0IF) {
  5245  000F98  A4F2               	btfss	intcon,2,c	;volatile
  5246  000F9A  D003               	goto	i2l3363
  5247                           
  5248                           ;interrupts.c: 97: INTCONbits.TMR0IF = 0;
  5249  000F9C  94F2               	bcf	intcon,2,c	;volatile
  5250                           
  5251                           ;interrupts.c: 99: timer0_int_handler();
  5252  000F9E  ECE2  F008         	call	_timer0_int_handler	;wreg free
  5253  000FA2                     i2l3363:
  5254                           
  5255                           ;interrupts.c: 100: }
  5256                           ;interrupts.c: 109: SleepIfOkay();
  5257  000FA2  EC63  F009         	call	_SleepIfOkay	;wreg free
  5258  000FA6  C096  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  5259  000FAA  C095  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  5260  000FAE  C094  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  5261  000FB2  C093  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  5262  000FB6  C092  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  5263  000FBA  C091  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  5264  000FBE  C090  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  5265  000FC2  C08F  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  5266  000FC6  C08E  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  5267  000FCA  C08D  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  5268  000FCE  C08C  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  5269  000FD2  C08B  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  5270  000FD6  C08A  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  5271  000FDA  C089  FFFA         	movff	??_InterruptHandlerHigh,pclath
  5272  000FDE  0011               	retfie		f
  5273  000FE0                     __end_of_InterruptHandlerHigh:
  5274                           	opt stack 0
  5275                           pclatu	equ	0xFFB
  5276                           pclath	equ	0xFFA
  5277                           tblptru	equ	0xFF8
  5278                           tblptrh	equ	0xFF7
  5279                           tblptrl	equ	0xFF6
  5280                           tablat	equ	0xFF5
  5281                           prodh	equ	0xFF4
  5282                           prodl	equ	0xFF3
  5283                           intcon	equ	0xFF2
  5284                           postinc0	equ	0xFEE
  5285                           fsr0h	equ	0xFEA
  5286                           fsr0l	equ	0xFE9
  5287                           wreg	equ	0xFE8
  5288                           indf1	equ	0xFE7
  5289                           fsr1h	equ	0xFE2
  5290                           fsr1l	equ	0xFE1
  5291                           bsr	equ	0xFE0
  5292                           indf2	equ	0xFDF
  5293                           postinc2	equ	0xFDE
  5294                           postdec2	equ	0xFDD
  5295                           fsr2h	equ	0xFDA
  5296                           fsr2l	equ	0xFD9
  5297                           status	equ	0xFD8
  5298                           
  5299 ;; *************** function _timer0_int_handler *****************
  5300 ;; Defined at:
  5301 ;;		line 16 in file "../src/user_interrupts.c"
  5302 ;; Parameters:    Size  Location     Type
  5303 ;;		None
  5304 ;; Auto vars:     Size  Location     Type
  5305 ;;  val             2    4[BANK0 ] unsigned int 
  5306 ;;  msgtype         2    2[BANK0 ] int 
  5307 ;;  length          2    0[BANK0 ] int 
  5308 ;; Return value:  Size  Location     Type
  5309 ;;		None               void
  5310 ;; Registers used:
  5311 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5312 ;; Tracked objects:
  5313 ;;		On entry : 0/0
  5314 ;;		On exit  : 0/0
  5315 ;;		Unchanged: 0/0
  5316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5317 ;;      Params:         0       0       0       0       0
  5318 ;;      Locals:         0       6       0       0       0
  5319 ;;      Temps:          0       0       0       0       0
  5320 ;;      Totals:         0       6       0       0       0
  5321 ;;Total ram usage:        6 bytes
  5322 ;; Hardware stack levels used:    1
  5323 ;; Hardware stack levels required when called:    3
  5324 ;; This function calls:
  5325 ;;		_FromMainHigh_recvmsg
  5326 ;;		_ToMainHigh_sendmsg
  5327 ;;		_WriteTimer0
  5328 ;; This function is called by:
  5329 ;;		_InterruptHandlerHigh
  5330 ;; This function uses a non-reentrant model
  5331 ;;
  5332                           
  5333                           	psect	text38
  5334  0011C4                     __ptext38:
  5335                           	opt stack 0
  5336  0011C4                     _timer0_int_handler:
  5337                           	opt stack 17
  5338                           
  5339                           ;user_interrupts.c: 17: unsigned int val;
  5340                           ;user_interrupts.c: 18: int length, msgtype;
  5341                           ;user_interrupts.c: 25: WriteTimer0(0);
  5342                           
  5343                           ;incstack = 0
  5344  0011C4  0E00               	movlw	0
  5345  0011C6  6E2F               	movwf	WriteTimer0@timer0+1,c
  5346  0011C8  0E00               	movlw	0
  5347  0011CA  6E2E               	movwf	WriteTimer0@timer0,c
  5348  0011CC  EC8D  F00B         	call	_WriteTimer0	;wreg free
  5349                           
  5350                           ;user_interrupts.c: 27: length = FromMainHigh_recvmsg(sizeof(val), (unsigned char *)&msg
      +                          type, (void *) &val);
  5351  0011D0  0100               	movlb	0	; () banked
  5352  0011D2  0E00               	movlw	high timer0_int_handler@msgtype
  5353  0011D4  6E47               	movwf	FromMainHigh_recvmsg@msgtype+1,c
  5354  0011D6  0100               	movlb	0	; () banked
  5355  0011D8  0E82               	movlw	low timer0_int_handler@msgtype
  5356  0011DA  6E46               	movwf	FromMainHigh_recvmsg@msgtype,c
  5357  0011DC  0100               	movlb	0	; () banked
  5358  0011DE  0E00               	movlw	high timer0_int_handler@val
  5359  0011E0  6E49               	movwf	FromMainHigh_recvmsg@data+1,c
  5360  0011E2  0100               	movlb	0	; () banked
  5361  0011E4  0E84               	movlw	low timer0_int_handler@val
  5362  0011E6  6E48               	movwf	FromMainHigh_recvmsg@data,c
  5363  0011E8  0E02               	movlw	2
  5364  0011EA  ECE0  F00A         	call	_FromMainHigh_recvmsg
  5365  0011EE  0100               	movlb	0	; () banked
  5366  0011F0  6F80               	movwf	timer0_int_handler@length& (0+255),b
  5367  0011F2  0100               	movlb	0	; () banked
  5368  0011F4  6B81               	clrf	(timer0_int_handler@length+1)& (0+255),b
  5369  0011F6  0100               	movlb	0	; () banked
  5370  0011F8  BF80               	btfsc	timer0_int_handler@length& (0+255),7,b
  5371  0011FA  0781               	decf	(timer0_int_handler@length+1)& (0+255),f,b
  5372                           
  5373                           ; BSR set to: 0
  5374                           ;user_interrupts.c: 28: if (length == sizeof (val)) {
  5375  0011FC  0100               	movlb	0	; () banked
  5376  0011FE  5180               	movf	timer0_int_handler@length& (0+255),w,b
  5377  001200  0A02               	xorlw	2
  5378  001202  1181               	iorwf	(timer0_int_handler@length+1)& (0+255),w,b
  5379  001204  A4D8               	btfss	status,2,c
  5380  001206  0012               	return	
  5381                           
  5382                           ; BSR set to: 0
  5383                           ;user_interrupts.c: 29: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
  5384  001208  0E0A               	movlw	10
  5385  00120A  6E44               	movwf	ToMainHigh_sendmsg@msgtype,c
  5386  00120C  0100               	movlb	0	; () banked
  5387  00120E  0E00               	movlw	high timer0_int_handler@val
  5388  001210  6E46               	movwf	ToMainHigh_sendmsg@data+1,c
  5389  001212  0100               	movlb	0	; () banked
  5390  001214  0E84               	movlw	low timer0_int_handler@val
  5391  001216  6E45               	movwf	ToMainHigh_sendmsg@data,c
  5392  001218  0E02               	movlw	2
  5393  00121A  EC19  F00B         	call	_ToMainHigh_sendmsg
  5394  00121E  0012               	return	
  5395  001220                     __end_of_timer0_int_handler:
  5396                           	opt stack 0
  5397                           pclatu	equ	0xFFB
  5398                           pclath	equ	0xFFA
  5399                           tblptru	equ	0xFF8
  5400                           tblptrh	equ	0xFF7
  5401                           tblptrl	equ	0xFF6
  5402                           tablat	equ	0xFF5
  5403                           prodh	equ	0xFF4
  5404                           prodl	equ	0xFF3
  5405                           intcon	equ	0xFF2
  5406                           postinc0	equ	0xFEE
  5407                           fsr0h	equ	0xFEA
  5408                           fsr0l	equ	0xFE9
  5409                           wreg	equ	0xFE8
  5410                           indf1	equ	0xFE7
  5411                           fsr1h	equ	0xFE2
  5412                           fsr1l	equ	0xFE1
  5413                           bsr	equ	0xFE0
  5414                           indf2	equ	0xFDF
  5415                           postinc2	equ	0xFDE
  5416                           postdec2	equ	0xFDD
  5417                           fsr2h	equ	0xFDA
  5418                           fsr2l	equ	0xFD9
  5419                           status	equ	0xFD8
  5420                           
  5421 ;; *************** function _WriteTimer0 *****************
  5422 ;; Defined at:
  5423 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0write.c"
  5424 ;; Parameters:    Size  Location     Type
  5425 ;;  timer0          2   45[COMRAM] unsigned int 
  5426 ;; Auto vars:     Size  Location     Type
  5427 ;;  timer           2   47[COMRAM] struct Timers
  5428 ;; Return value:  Size  Location     Type
  5429 ;;		None               void
  5430 ;; Registers used:
  5431 ;;		None
  5432 ;; Tracked objects:
  5433 ;;		On entry : 0/0
  5434 ;;		On exit  : 0/0
  5435 ;;		Unchanged: 0/0
  5436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5437 ;;      Params:         2       0       0       0       0
  5438 ;;      Locals:         2       0       0       0       0
  5439 ;;      Temps:          0       0       0       0       0
  5440 ;;      Totals:         4       0       0       0       0
  5441 ;;Total ram usage:        4 bytes
  5442 ;; Hardware stack levels used:    1
  5443 ;; This function calls:
  5444 ;;		Nothing
  5445 ;; This function is called by:
  5446 ;;		_timer0_int_handler
  5447 ;; This function uses a non-reentrant model
  5448 ;;
  5449                           
  5450                           	psect	text39
  5451  00171A                     __ptext39:
  5452                           	opt stack 0
  5453  00171A                     _WriteTimer0:
  5454                           	opt stack 19
  5455                           
  5456                           ;incstack = 0
  5457  00171A  C02E  F030         	movff	WriteTimer0@timer0,WriteTimer0@timer
  5458  00171E  C02F  F031         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  5459  001722  C031  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  5460  001726  C030  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  5461  00172A  0012               	return	
  5462  00172C                     __end_of_WriteTimer0:
  5463                           	opt stack 0
  5464                           pclatu	equ	0xFFB
  5465                           pclath	equ	0xFFA
  5466                           tblptru	equ	0xFF8
  5467                           tblptrh	equ	0xFF7
  5468                           tblptrl	equ	0xFF6
  5469                           tablat	equ	0xFF5
  5470                           prodh	equ	0xFF4
  5471                           prodl	equ	0xFF3
  5472                           intcon	equ	0xFF2
  5473                           postinc0	equ	0xFEE
  5474                           fsr0h	equ	0xFEA
  5475                           fsr0l	equ	0xFE9
  5476                           wreg	equ	0xFE8
  5477                           indf1	equ	0xFE7
  5478                           fsr1h	equ	0xFE2
  5479                           fsr1l	equ	0xFE1
  5480                           bsr	equ	0xFE0
  5481                           indf2	equ	0xFDF
  5482                           postinc2	equ	0xFDE
  5483                           postdec2	equ	0xFDD
  5484                           fsr2h	equ	0xFDA
  5485                           fsr2l	equ	0xFD9
  5486                           status	equ	0xFD8
  5487                           
  5488 ;; *************** function _FromMainHigh_recvmsg *****************
  5489 ;; Defined at:
  5490 ;;		line 183 in file "../src/messages.c"
  5491 ;; Parameters:    Size  Location     Type
  5492 ;;  maxlength       1    wreg     unsigned char 
  5493 ;;  msgtype         2   69[COMRAM] PTR unsigned char 
  5494 ;;		 -> timer0_int_handler@msgtype(2), 
  5495 ;;  data            2   71[COMRAM] PTR void 
  5496 ;;		 -> timer0_int_handler@val(2), 
  5497 ;; Auto vars:     Size  Location     Type
  5498 ;;  maxlength       1   73[COMRAM] unsigned char 
  5499 ;; Return value:  Size  Location     Type
  5500 ;;                  1    wreg      char 
  5501 ;; Registers used:
  5502 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5503 ;; Tracked objects:
  5504 ;;		On entry : 0/0
  5505 ;;		On exit  : 0/0
  5506 ;;		Unchanged: 0/0
  5507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5508 ;;      Params:         4       0       0       0       0
  5509 ;;      Locals:         1       0       0       0       0
  5510 ;;      Temps:          0       0       0       0       0
  5511 ;;      Totals:         5       0       0       0       0
  5512 ;;Total ram usage:        5 bytes
  5513 ;; Hardware stack levels used:    1
  5514 ;; Hardware stack levels required when called:    2
  5515 ;; This function calls:
  5516 ;;		i2_recv_msg
  5517 ;; This function is called by:
  5518 ;;		_timer0_int_handler
  5519 ;; This function uses a non-reentrant model
  5520 ;;
  5521                           
  5522                           	psect	text40
  5523  0015C0                     __ptext40:
  5524                           	opt stack 0
  5525  0015C0                     _FromMainHigh_recvmsg:
  5526                           	opt stack 17
  5527                           
  5528                           ;incstack = 0
  5529                           ;FromMainHigh_recvmsg@maxlength stored from wreg
  5530  0015C0  6E4A               	movwf	FromMainHigh_recvmsg@maxlength,c
  5531                           
  5532                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  5533  0015C2  0101               	movlb	1	; () banked
  5534  0015C4  0E01               	movlw	high _FromMainHigh_MQ
  5535  0015C6  6E39               	movwf	i2recv_msg@qptr+1,c
  5536  0015C8  0101               	movlb	1	; () banked
  5537  0015CA  0E00               	movlw	low _FromMainHigh_MQ
  5538  0015CC  6E38               	movwf	i2recv_msg@qptr,c
  5539  0015CE  C04A  F03A         	movff	FromMainHigh_recvmsg@maxlength,i2recv_msg@maxlength
  5540  0015D2  C047  F03C         	movff	FromMainHigh_recvmsg@msgtype+1,i2recv_msg@msgtype+1
  5541  0015D6  C046  F03B         	movff	FromMainHigh_recvmsg@msgtype,i2recv_msg@msgtype
  5542  0015DA  C049  F03E         	movff	FromMainHigh_recvmsg@data+1,i2recv_msg@data+1
  5543  0015DE  C048  F03D         	movff	FromMainHigh_recvmsg@data,i2recv_msg@data
  5544  0015E2  ECB0  F005         	call	i2_recv_msg	;wreg free
  5545  0015E6  0012               	return	
  5546  0015E8                     __end_of_FromMainHigh_recvmsg:
  5547                           	opt stack 0
  5548                           pclatu	equ	0xFFB
  5549                           pclath	equ	0xFFA
  5550                           tblptru	equ	0xFF8
  5551                           tblptrh	equ	0xFF7
  5552                           tblptrl	equ	0xFF6
  5553                           tablat	equ	0xFF5
  5554                           prodh	equ	0xFF4
  5555                           prodl	equ	0xFF3
  5556                           intcon	equ	0xFF2
  5557                           postinc0	equ	0xFEE
  5558                           fsr0h	equ	0xFEA
  5559                           fsr0l	equ	0xFE9
  5560                           wreg	equ	0xFE8
  5561                           indf1	equ	0xFE7
  5562                           fsr1h	equ	0xFE2
  5563                           fsr1l	equ	0xFE1
  5564                           bsr	equ	0xFE0
  5565                           indf2	equ	0xFDF
  5566                           postinc2	equ	0xFDE
  5567                           postdec2	equ	0xFDD
  5568                           fsr2h	equ	0xFDA
  5569                           fsr2l	equ	0xFD9
  5570                           status	equ	0xFD8
  5571                           
  5572 ;; *************** function i2_recv_msg *****************
  5573 ;; Defined at:
  5574 ;;		line 63 in file "../src/messages.c"
  5575 ;; Parameters:    Size  Location     Type
  5576 ;;  qptr            2   55[COMRAM] PTR struct __msg_queue
  5577 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5578 ;;  maxlength       1   57[COMRAM] unsigned char 
  5579 ;;  msgtype         2   58[COMRAM] PTR unsigned char 
  5580 ;;		 -> timer0_int_handler@msgtype(2), main@msgtype(1), 
  5581 ;;  data            2   60[COMRAM] PTR void 
  5582 ;;		 -> timer0_int_handler@val(2), main@msgbuffer(11), 
  5583 ;; Auto vars:     Size  Location     Type
  5584 ;;  recv_msg        2   67[COMRAM] PTR struct __msg
  5585 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5586 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5587 ;;  recv_msg        2   65[COMRAM] unsigned int 
  5588 ;;  recv_msg        1   64[COMRAM] unsigned char 
  5589 ;; Return value:  Size  Location     Type
  5590 ;;                  1    wreg      char 
  5591 ;; Registers used:
  5592 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5593 ;; Tracked objects:
  5594 ;;		On entry : 0/0
  5595 ;;		On exit  : 0/0
  5596 ;;		Unchanged: 0/0
  5597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5598 ;;      Params:         7       0       0       0       0
  5599 ;;      Locals:         5       0       0       0       0
  5600 ;;      Temps:          2       0       0       0       0
  5601 ;;      Totals:        14       0       0       0       0
  5602 ;;Total ram usage:       14 bytes
  5603 ;; Hardware stack levels used:    1
  5604 ;; Hardware stack levels required when called:    1
  5605 ;; This function calls:
  5606 ;;		i2_memcpy
  5607 ;; This function is called by:
  5608 ;;		_FromMainHigh_recvmsg
  5609 ;; This function uses a non-reentrant model
  5610 ;;
  5611                           
  5612                           	psect	text41
  5613  000B60                     __ptext41:
  5614                           	opt stack 0
  5615  000B60                     i2_recv_msg:
  5616                           	opt stack 17
  5617                           
  5618                           ;messages.c: 64: unsigned char slot;
  5619                           ;messages.c: 68: msg *qmsg;
  5620                           ;messages.c: 69: size_t tlength;
  5621                           ;messages.c: 72: slot = qptr->cur_read_ind;
  5622                           
  5623                           ;incstack = 0
  5624  000B60  EE20 F035          	lfsr	2,53
  5625  000B64  5038               	movf	i2recv_msg@qptr,w,c
  5626  000B66  26D9               	addwf	fsr2l,f,c
  5627  000B68  5039               	movf	i2recv_msg@qptr+1,w,c
  5628  000B6A  22DA               	addwfc	fsr2h,f,c
  5629  000B6C  50DF               	movf	indf2,w,c
  5630  000B6E  6E41               	movwf	i2recv_msg@slot,c
  5631                           
  5632                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  5633  000B70  5041               	movf	i2recv_msg@slot,w,c
  5634  000B72  0D0D               	mullw	13
  5635  000B74  50F3               	movf	prodl,w,c
  5636  000B76  2438               	addwf	i2recv_msg@qptr,w,c
  5637  000B78  6E44               	movwf	i2recv_msg@qmsg,c
  5638  000B7A  50F4               	movf	prodh,w,c
  5639  000B7C  2039               	addwfc	i2recv_msg@qptr+1,w,c
  5640  000B7E  6E45               	movwf	i2recv_msg@qmsg+1,c
  5641                           
  5642                           ;messages.c: 74: if (qmsg->full == 1) {
  5643  000B80  0E01               	movlw	1
  5644  000B82  C044  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  5645  000B86  C045  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  5646  000B8A  62DF               	cpfseq	indf2,c
  5647  000B8C  D050               	goto	i2l2857
  5648                           
  5649                           ;messages.c: 76: if (qmsg->length > maxlength) {
  5650  000B8E  EE20 F001          	lfsr	2,1
  5651  000B92  5044               	movf	i2recv_msg@qmsg,w,c
  5652  000B94  26D9               	addwf	fsr2l,f,c
  5653  000B96  5045               	movf	i2recv_msg@qmsg+1,w,c
  5654  000B98  22DA               	addwfc	fsr2h,f,c
  5655  000B9A  50DF               	movf	indf2,w,c
  5656  000B9C  5C3A               	subwf	i2recv_msg@maxlength,w,c
  5657  000B9E  B0D8               	btfsc	status,0,c
  5658  000BA0  D002               	goto	i2l2841
  5659                           
  5660                           ;messages.c: 77: return (-3);
  5661  000BA2  0EFD               	movlw	253
  5662  000BA4  0012               	return	
  5663  000BA6                     i2l2841:
  5664                           
  5665                           ;messages.c: 78: }
  5666                           ;messages.c: 80: tlength = qmsg->length;
  5667  000BA6  EE20 F001          	lfsr	2,1
  5668  000BAA  5044               	movf	i2recv_msg@qmsg,w,c
  5669  000BAC  26D9               	addwf	fsr2l,f,c
  5670  000BAE  5045               	movf	i2recv_msg@qmsg+1,w,c
  5671  000BB0  22DA               	addwfc	fsr2h,f,c
  5672  000BB2  50DF               	movf	indf2,w,c
  5673  000BB4  6E3F               	movwf	??i2_recv_msg& (0+255),c
  5674  000BB6  503F               	movf	??i2_recv_msg,w,c
  5675  000BB8  6E42               	movwf	i2recv_msg@tlength,c
  5676  000BBA  6A43               	clrf	i2recv_msg@tlength+1,c
  5677                           
  5678                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  5679  000BBC  C03E  F02F         	movff	i2recv_msg@data+1,i2memcpy@d1+1
  5680  000BC0  C03D  F02E         	movff	i2recv_msg@data,i2memcpy@d1
  5681  000BC4  0E03               	movlw	3
  5682  000BC6  2444               	addwf	i2recv_msg@qmsg,w,c
  5683  000BC8  6E3F               	movwf	??i2_recv_msg& (0+255),c
  5684  000BCA  0E00               	movlw	0
  5685  000BCC  2045               	addwfc	i2recv_msg@qmsg+1,w,c
  5686  000BCE  6E40               	movwf	(??i2_recv_msg+1)& (0+255),c
  5687  000BD0  C03F  F030         	movff	??i2_recv_msg,i2memcpy@s1
  5688  000BD4  C040  F031         	movff	??i2_recv_msg+1,i2memcpy@s1+1
  5689  000BD8  C042  F032         	movff	i2recv_msg@tlength,i2memcpy@n
  5690  000BDC  C043  F033         	movff	i2recv_msg@tlength+1,i2memcpy@n+1
  5691  000BE0  ECAA  F009         	call	i2_memcpy	;wreg free
  5692                           
  5693                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  5694  000BE4  EE20 F035          	lfsr	2,53
  5695  000BE8  5038               	movf	i2recv_msg@qptr,w,c
  5696  000BEA  26D9               	addwf	fsr2l,f,c
  5697  000BEC  5039               	movf	i2recv_msg@qptr+1,w,c
  5698  000BEE  22DA               	addwfc	fsr2h,f,c
  5699  000BF0  EE10 F035          	lfsr	1,53
  5700  000BF4  5038               	movf	i2recv_msg@qptr,w,c
  5701  000BF6  26E1               	addwf	fsr1l,f,c
  5702  000BF8  5039               	movf	i2recv_msg@qptr+1,w,c
  5703  000BFA  22E2               	addwfc	fsr1h,f,c
  5704  000BFC  50E7               	movf	indf1,w,c
  5705  000BFE  6E3F               	movwf	??i2_recv_msg& (0+255),c
  5706  000C00  283F               	incf	??i2_recv_msg,w,c
  5707  000C02  0B03               	andlw	3
  5708  000C04  6EDF               	movwf	indf2,c
  5709                           
  5710                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  5711  000C06  EE20 F002          	lfsr	2,2
  5712  000C0A  5044               	movf	i2recv_msg@qmsg,w,c
  5713  000C0C  26D9               	addwf	fsr2l,f,c
  5714  000C0E  5045               	movf	i2recv_msg@qmsg+1,w,c
  5715  000C10  22DA               	addwfc	fsr2h,f,c
  5716  000C12  C03B  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  5717  000C16  C03C  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  5718  000C1A  CFDF FFE7          	movff	indf2,indf1
  5719                           
  5720                           ;messages.c: 91: qmsg->full = 0;
  5721  000C1E  C044  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  5722  000C22  C045  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  5723  000C26  0E00               	movlw	0
  5724  000C28  6EDF               	movwf	indf2,c
  5725                           
  5726                           ;messages.c: 92: return (tlength);
  5727  000C2A  5042               	movf	i2recv_msg@tlength,w,c
  5728  000C2C  0012               	return	
  5729  000C2E                     i2l2857:
  5730                           
  5731                           ;messages.c: 94: return (-4);
  5732  000C2E  0EFC               	movlw	252
  5733  000C30  0012               	return	
  5734  000C32                     __end_ofi2_recv_msg:
  5735                           	opt stack 0
  5736                           pclatu	equ	0xFFB
  5737                           pclath	equ	0xFFA
  5738                           tblptru	equ	0xFF8
  5739                           tblptrh	equ	0xFF7
  5740                           tblptrl	equ	0xFF6
  5741                           tablat	equ	0xFF5
  5742                           prodh	equ	0xFF4
  5743                           prodl	equ	0xFF3
  5744                           intcon	equ	0xFF2
  5745                           postinc0	equ	0xFEE
  5746                           fsr0h	equ	0xFEA
  5747                           fsr0l	equ	0xFE9
  5748                           wreg	equ	0xFE8
  5749                           indf1	equ	0xFE7
  5750                           fsr1h	equ	0xFE2
  5751                           fsr1l	equ	0xFE1
  5752                           bsr	equ	0xFE0
  5753                           indf2	equ	0xFDF
  5754                           postinc2	equ	0xFDE
  5755                           postdec2	equ	0xFDD
  5756                           fsr2h	equ	0xFDA
  5757                           fsr2l	equ	0xFD9
  5758                           status	equ	0xFD8
  5759                           
  5760 ;; *************** function _i2c_int_handler *****************
  5761 ;; Defined at:
  5762 ;;		line 100 in file "../src/my_i2c.c"
  5763 ;; Parameters:    Size  Location     Type
  5764 ;;		None
  5765 ;; Auto vars:     Size  Location     Type
  5766 ;;  error_buf       3    0[BANK0 ] unsigned char [3]
  5767 ;;  data_read       1    8[BANK0 ] unsigned char 
  5768 ;;  msg_ready       1    7[BANK0 ] unsigned char 
  5769 ;;  msg_to_send     1    6[BANK0 ] unsigned char 
  5770 ;;  i2c_data        1    5[BANK0 ] unsigned char 
  5771 ;;  overrun_erro    1    4[BANK0 ] unsigned char 
  5772 ;;  data_written    1    3[BANK0 ] unsigned char 
  5773 ;; Return value:  Size  Location     Type
  5774 ;;		None               void
  5775 ;; Registers used:
  5776 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5777 ;; Tracked objects:
  5778 ;;		On entry : 0/0
  5779 ;;		On exit  : 0/0
  5780 ;;		Unchanged: 0/0
  5781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5782 ;;      Params:         0       0       0       0       0
  5783 ;;      Locals:         0       9       0       0       0
  5784 ;;      Temps:          1       0       0       0       0
  5785 ;;      Totals:         1       9       0       0       0
  5786 ;;Total ram usage:       10 bytes
  5787 ;; Hardware stack levels used:    1
  5788 ;; Hardware stack levels required when called:    3
  5789 ;; This function calls:
  5790 ;;		_ToMainHigh_sendmsg
  5791 ;;		_handle_start
  5792 ;; This function is called by:
  5793 ;;		_InterruptHandlerHigh
  5794 ;; This function uses a non-reentrant model
  5795 ;;
  5796                           
  5797                           	psect	text42
  5798  0000BA                     __ptext42:
  5799                           	opt stack 0
  5800  0000BA                     _i2c_int_handler:
  5801                           	opt stack 17
  5802                           
  5803                           ;my_i2c.c: 101: unsigned char i2c_data;
  5804                           ;my_i2c.c: 102: unsigned char data_read = 0;
  5805                           
  5806                           ;incstack = 0
  5807  0000BA  0E00               	movlw	0
  5808  0000BC  0100               	movlb	0	; () banked
  5809  0000BE  6F88               	movwf	i2c_int_handler@data_read& (0+255),b
  5810                           
  5811                           ;my_i2c.c: 103: unsigned char data_written = 0;
  5812  0000C0  0E00               	movlw	0
  5813  0000C2  0100               	movlb	0	; () banked
  5814  0000C4  6F83               	movwf	i2c_int_handler@data_written& (0+255),b
  5815                           
  5816                           ;my_i2c.c: 104: unsigned char msg_ready = 0;
  5817  0000C6  0E00               	movlw	0
  5818  0000C8  0100               	movlb	0	; () banked
  5819  0000CA  6F87               	movwf	i2c_int_handler@msg_ready& (0+255),b
  5820                           
  5821                           ;my_i2c.c: 105: unsigned char msg_to_send = 0;
  5822  0000CC  0E00               	movlw	0
  5823  0000CE  0100               	movlb	0	; () banked
  5824  0000D0  6F86               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  5825                           
  5826                           ;my_i2c.c: 106: unsigned char overrun_error = 0;
  5827  0000D2  0E00               	movlw	0
  5828  0000D4  0100               	movlb	0	; () banked
  5829  0000D6  6F84               	movwf	i2c_int_handler@overrun_error& (0+255),b
  5830                           
  5831                           ; BSR set to: 0
  5832                           ;my_i2c.c: 107: unsigned char error_buf[3];
  5833                           ;my_i2c.c: 110: if (SSPCON1bits.SSPOV == 1) {
  5834  0000D8  ACC6               	btfss	4038,6,c	;volatile
  5835  0000DA  D024               	goto	i2l3009
  5836                           
  5837                           ; BSR set to: 0
  5838                           ;my_i2c.c: 111: SSPCON1bits.SSPOV = 0;
  5839  0000DC  9CC6               	bcf	4038,6,c	;volatile
  5840                           
  5841                           ; BSR set to: 0
  5842                           ;my_i2c.c: 115: ic_ptr->status = 0x5;
  5843  0000DE  0100               	movlb	0	; () banked
  5844  0000E0  EE20 F00C          	lfsr	2,12
  5845  0000E4  0100               	movlb	0	; () banked
  5846  0000E6  51BA               	movf	_ic_ptr& (0+255),w,b
  5847  0000E8  26D9               	addwf	fsr2l,f,c
  5848  0000EA  0100               	movlb	0	; () banked
  5849  0000EC  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  5850  0000EE  22DA               	addwfc	fsr2h,f,c
  5851  0000F0  0E05               	movlw	5
  5852  0000F2  6EDF               	movwf	indf2,c
  5853                           
  5854                           ; BSR set to: 0
  5855                           ;my_i2c.c: 116: overrun_error = 1;
  5856  0000F4  0E01               	movlw	1
  5857  0000F6  0100               	movlb	0	; () banked
  5858  0000F8  6F84               	movwf	i2c_int_handler@overrun_error& (0+255),b
  5859                           
  5860                           ; BSR set to: 0
  5861                           ;my_i2c.c: 117: ic_ptr->error_count++;
  5862  0000FA  0100               	movlb	0	; () banked
  5863  0000FC  EE20 F00E          	lfsr	2,14
  5864  000100  0100               	movlb	0	; () banked
  5865  000102  51BA               	movf	_ic_ptr& (0+255),w,b
  5866  000104  26D9               	addwf	fsr2l,f,c
  5867  000106  0100               	movlb	0	; () banked
  5868  000108  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  5869  00010A  22DA               	addwfc	fsr2h,f,c
  5870  00010C  2ADF               	incf	indf2,f,c
  5871                           
  5872                           ; BSR set to: 0
  5873                           ;my_i2c.c: 118: ic_ptr->error_code = 0x4;
  5874  00010E  0100               	movlb	0	; () banked
  5875  000110  EE20 F00D          	lfsr	2,13
  5876  000114  0100               	movlb	0	; () banked
  5877  000116  51BA               	movf	_ic_ptr& (0+255),w,b
  5878  000118  26D9               	addwf	fsr2l,f,c
  5879  00011A  0100               	movlb	0	; () banked
  5880  00011C  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  5881  00011E  22DA               	addwfc	fsr2h,f,c
  5882  000120  0E04               	movlw	4
  5883  000122  6EDF               	movwf	indf2,c
  5884  000124                     i2l3009:
  5885                           
  5886                           ; BSR set to: 0
  5887                           ;my_i2c.c: 119: }
  5888                           ;my_i2c.c: 121: if (SSPSTATbits.BF == 1) {
  5889  000124  A0C7               	btfss	4039,0,c	;volatile
  5890  000126  D005               	goto	i2l3015
  5891                           
  5892                           ; BSR set to: 0
  5893                           ;my_i2c.c: 122: i2c_data = SSPBUF;
  5894  000128  CFC9 F085          	movff	4041,i2c_int_handler@i2c_data	;volatile
  5895                           
  5896                           ; BSR set to: 0
  5897                           ;my_i2c.c: 123: data_read = 1;
  5898  00012C  0E01               	movlw	1
  5899  00012E  0100               	movlb	0	; () banked
  5900  000130  6F88               	movwf	i2c_int_handler@data_read& (0+255),b
  5901  000132                     i2l3015:
  5902                           
  5903                           ; BSR set to: 0
  5904                           ;my_i2c.c: 124: }
  5905                           ;my_i2c.c: 126: if (!overrun_error) {
  5906  000132  0100               	movlb	0	; () banked
  5907  000134  6784               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  5908  000136  D197               	goto	i2l263
  5909  000138  D180               	goto	i2l3103
  5910  00013A                     i2l265:
  5911                           
  5912                           ; BSR set to: 0
  5913                           ;my_i2c.c: 129: {
  5914                           ;my_i2c.c: 131: if (SSPSTATbits.S == 1) {
  5915  00013A  A6C7               	btfss	4039,3,c	;volatile
  5916  00013C  D194               	goto	i2l263
  5917                           
  5918                           ; BSR set to: 0
  5919                           ;my_i2c.c: 132: handle_start(data_read);
  5920  00013E  0100               	movlb	0	; () banked
  5921  000140  5188               	movf	i2c_int_handler@data_read& (0+255),w,b
  5922  000142  EC19  F006         	call	_handle_start
  5923                           
  5924                           ;my_i2c.c: 134: if (ic_ptr->status == 0x8) {
  5925  000146  0100               	movlb	0	; () banked
  5926  000148  EE20 F00C          	lfsr	2,12
  5927  00014C  0100               	movlb	0	; () banked
  5928  00014E  51BA               	movf	_ic_ptr& (0+255),w,b
  5929  000150  26D9               	addwf	fsr2l,f,c
  5930  000152  0100               	movlb	0	; () banked
  5931  000154  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  5932  000156  22DA               	addwfc	fsr2h,f,c
  5933  000158  0E08               	movlw	8
  5934  00015A  62DF               	cpfseq	indf2,c
  5935  00015C  D184               	goto	i2l263
  5936                           
  5937                           ; BSR set to: 0
  5938                           ;my_i2c.c: 135: data_read = 0;
  5939  00015E  0E00               	movlw	0
  5940  000160  0100               	movlb	0	; () banked
  5941  000162  6F88               	movwf	i2c_int_handler@data_read& (0+255),b
  5942                           
  5943                           ;my_i2c.c: 136: msg_to_send = 1;
  5944  000164  0E01               	movlw	1
  5945  000166  0100               	movlb	0	; () banked
  5946  000168  6F86               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  5947  00016A  D17D               	goto	i2l263
  5948  00016C                     i2l269:
  5949                           
  5950                           ; BSR set to: 0
  5951                           ;my_i2c.c: 142: {
  5952                           ;my_i2c.c: 144: if (SSPSTATbits.P == 1) {
  5953  00016C  A8C7               	btfss	4039,4,c	;volatile
  5954  00016E  D02A               	goto	i2l3035
  5955                           
  5956                           ; BSR set to: 0
  5957                           ;my_i2c.c: 147: ic_ptr->event_count++;
  5958  000170  0100               	movlb	0	; () banked
  5959  000172  EE20 F00B          	lfsr	2,11
  5960  000176  0100               	movlb	0	; () banked
  5961  000178  51BA               	movf	_ic_ptr& (0+255),w,b
  5962  00017A  26D9               	addwf	fsr2l,f,c
  5963  00017C  0100               	movlb	0	; () banked
  5964  00017E  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  5965  000180  22DA               	addwfc	fsr2h,f,c
  5966  000182  2ADF               	incf	indf2,f,c
  5967                           
  5968                           ; BSR set to: 0
  5969                           ;my_i2c.c: 148: if (data_read) {
  5970  000184  0100               	movlb	0	; () banked
  5971  000186  5188               	movf	i2c_int_handler@data_read& (0+255),w,b
  5972  000188  B4D8               	btfsc	status,2,c
  5973  00018A  D14C               	goto	L7
  5974                           
  5975                           ; BSR set to: 0
  5976                           ;my_i2c.c: 149: if (SSPSTATbits.D_A == 0) {
  5977  00018C  BAC7               	btfsc	4039,5,c	;volatile
  5978  00018E  D004               	goto	i2l3033
  5979                           
  5980                           ; BSR set to: 0
  5981                           ;my_i2c.c: 150: msg_ready = 1;
  5982  000190  0E01               	movlw	1
  5983  000192  0100               	movlb	0	; () banked
  5984  000194  6F87               	movwf	i2c_int_handler@msg_ready& (0+255),b
  5985                           
  5986                           ;my_i2c.c: 151: } else {
  5987  000196  D146               	goto	L7
  5988  000198                     i2l3033:
  5989                           
  5990                           ; BSR set to: 0
  5991                           ;my_i2c.c: 152: ic_ptr->error_count++;
  5992  000198  0100               	movlb	0	; () banked
  5993  00019A  EE20 F00E          	lfsr	2,14
  5994  00019E  0100               	movlb	0	; () banked
  5995  0001A0  51BA               	movf	_ic_ptr& (0+255),w,b
  5996  0001A2  26D9               	addwf	fsr2l,f,c
  5997  0001A4  0100               	movlb	0	; () banked
  5998  0001A6  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  5999  0001A8  22DA               	addwfc	fsr2h,f,c
  6000  0001AA  2ADF               	incf	indf2,f,c
  6001                           
  6002                           ;my_i2c.c: 153: ic_ptr->error_code = 0x6;
  6003  0001AC  0100               	movlb	0	; () banked
  6004  0001AE  EE20 F00D          	lfsr	2,13
  6005  0001B2  0100               	movlb	0	; () banked
  6006  0001B4  51BA               	movf	_ic_ptr& (0+255),w,b
  6007  0001B6  26D9               	addwf	fsr2l,f,c
  6008  0001B8  0100               	movlb	0	; () banked
  6009  0001BA  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6010  0001BC  22DA               	addwfc	fsr2h,f,c
  6011  0001BE  0E06               	movlw	6
  6012  0001C0  6EDF               	movwf	indf2,c
  6013                           
  6014                           ; BSR set to: 0
  6015  0001C2  D130               	goto	L7
  6016  0001C4                     i2l3035:
  6017                           
  6018                           ; BSR set to: 0
  6019  0001C4  0100               	movlb	0	; () banked
  6020  0001C6  5188               	movf	i2c_int_handler@data_read& (0+255),w,b
  6021  0001C8  B4D8               	btfsc	status,2,c
  6022  0001CA  D14D               	goto	i2l263
  6023                           
  6024                           ; BSR set to: 0
  6025                           ;my_i2c.c: 158: ic_ptr->event_count++;
  6026  0001CC  0100               	movlb	0	; () banked
  6027  0001CE  EE20 F00B          	lfsr	2,11
  6028  0001D2  0100               	movlb	0	; () banked
  6029  0001D4  51BA               	movf	_ic_ptr& (0+255),w,b
  6030  0001D6  26D9               	addwf	fsr2l,f,c
  6031  0001D8  0100               	movlb	0	; () banked
  6032  0001DA  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6033  0001DC  22DA               	addwfc	fsr2h,f,c
  6034  0001DE  2ADF               	incf	indf2,f,c
  6035                           
  6036                           ; BSR set to: 0
  6037                           ;my_i2c.c: 159: if (SSPSTATbits.D_A == 0) {
  6038  0001E0  BAC7               	btfsc	4039,5,c	;volatile
  6039  0001E2  D019               	goto	i2l3051
  6040                           
  6041                           ; BSR set to: 0
  6042                           ;my_i2c.c: 160: if (SSPSTATbits.R_W == 0) {
  6043  0001E4  B4C7               	btfsc	4039,2,c	;volatile
  6044  0001E6  D00B               	goto	i2l3045
  6045                           
  6046                           ; BSR set to: 0
  6047                           ;my_i2c.c: 161: ic_ptr->status = 0x7;
  6048  0001E8  0100               	movlb	0	; () banked
  6049  0001EA  EE20 F00C          	lfsr	2,12
  6050  0001EE  0100               	movlb	0	; () banked
  6051  0001F0  51BA               	movf	_ic_ptr& (0+255),w,b
  6052  0001F2  26D9               	addwf	fsr2l,f,c
  6053  0001F4  0100               	movlb	0	; () banked
  6054  0001F6  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6055  0001F8  22DA               	addwfc	fsr2h,f,c
  6056  0001FA  0E07               	movlw	7
  6057  0001FC  D06D               	goto	L5
  6058  0001FE                     i2l3045:
  6059                           
  6060                           ; BSR set to: 0
  6061                           ;my_i2c.c: 163: ic_ptr->status = 0x8;
  6062  0001FE  0100               	movlb	0	; () banked
  6063  000200  EE20 F00C          	lfsr	2,12
  6064  000204  0100               	movlb	0	; () banked
  6065  000206  51BA               	movf	_ic_ptr& (0+255),w,b
  6066  000208  26D9               	addwf	fsr2l,f,c
  6067  00020A  0100               	movlb	0	; () banked
  6068  00020C  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6069  00020E  22DA               	addwfc	fsr2h,f,c
  6070  000210  0E08               	movlw	8
  6071  000212  6EDF               	movwf	indf2,c
  6072  000214  D100               	goto	L4
  6073  000216                     i2l3051:
  6074                           
  6075                           ; BSR set to: 0
  6076                           ;my_i2c.c: 169: ic_ptr->error_count++;
  6077  000216  0100               	movlb	0	; () banked
  6078  000218  EE20 F00E          	lfsr	2,14
  6079  00021C  0100               	movlb	0	; () banked
  6080  00021E  51BA               	movf	_ic_ptr& (0+255),w,b
  6081  000220  26D9               	addwf	fsr2l,f,c
  6082  000222  0100               	movlb	0	; () banked
  6083  000224  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6084  000226  22DA               	addwfc	fsr2h,f,c
  6085  000228  2ADF               	incf	indf2,f,c
  6086                           
  6087                           ;my_i2c.c: 170: ic_ptr->status = 0x5;
  6088  00022A  0100               	movlb	0	; () banked
  6089  00022C  EE20 F00C          	lfsr	2,12
  6090  000230  0100               	movlb	0	; () banked
  6091  000232  51BA               	movf	_ic_ptr& (0+255),w,b
  6092  000234  26D9               	addwf	fsr2l,f,c
  6093  000236  0100               	movlb	0	; () banked
  6094  000238  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6095  00023A  22DA               	addwfc	fsr2h,f,c
  6096  00023C  0E05               	movlw	5
  6097  00023E  6EDF               	movwf	indf2,c
  6098                           
  6099                           ;my_i2c.c: 171: ic_ptr->error_code = 0x6;
  6100  000240  0100               	movlb	0	; () banked
  6101  000242  EE20 F00D          	lfsr	2,13
  6102  000246  0100               	movlb	0	; () banked
  6103  000248  51BA               	movf	_ic_ptr& (0+255),w,b
  6104  00024A  26D9               	addwf	fsr2l,f,c
  6105  00024C  0100               	movlb	0	; () banked
  6106  00024E  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6107  000250  22DA               	addwfc	fsr2h,f,c
  6108  000252  0E06               	movlw	6
  6109  000254  D041               	goto	L5
  6110  000256                     i2l3053:
  6111                           
  6112                           ; BSR set to: 0
  6113                           ;my_i2c.c: 177: {
  6114                           ;my_i2c.c: 178: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  6115  000256  0100               	movlb	0	; () banked
  6116  000258  EE20 F01A          	lfsr	2,26
  6117  00025C  0100               	movlb	0	; () banked
  6118  00025E  51BA               	movf	_ic_ptr& (0+255),w,b
  6119  000260  26D9               	addwf	fsr2l,f,c
  6120  000262  0100               	movlb	0	; () banked
  6121  000264  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6122  000266  22DA               	addwfc	fsr2h,f,c
  6123  000268  50DF               	movf	indf2,w,c
  6124  00026A  6E48               	movwf	??_i2c_int_handler& (0+255),c
  6125  00026C  0100               	movlb	0	; () banked
  6126  00026E  EE20 F019          	lfsr	2,25
  6127  000272  0100               	movlb	0	; () banked
  6128  000274  51BA               	movf	_ic_ptr& (0+255),w,b
  6129  000276  26D9               	addwf	fsr2l,f,c
  6130  000278  0100               	movlb	0	; () banked
  6131  00027A  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6132  00027C  22DA               	addwfc	fsr2h,f,c
  6133  00027E  50DF               	movf	indf2,w,c
  6134  000280  5C48               	subwf	??_i2c_int_handler,w,c
  6135  000282  B0D8               	btfsc	status,0,c
  6136  000284  D0CF               	goto	L7
  6137                           
  6138                           ; BSR set to: 0
  6139                           ;my_i2c.c: 179: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  6140  000286  0100               	movlb	0	; () banked
  6141  000288  EE20 F01A          	lfsr	2,26
  6142  00028C  0100               	movlb	0	; () banked
  6143  00028E  51BA               	movf	_ic_ptr& (0+255),w,b
  6144  000290  26D9               	addwf	fsr2l,f,c
  6145  000292  0100               	movlb	0	; () banked
  6146  000294  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6147  000296  22DA               	addwfc	fsr2h,f,c
  6148  000298  50DF               	movf	indf2,w,c
  6149  00029A  6E48               	movwf	??_i2c_int_handler& (0+255),c
  6150  00029C  5048               	movf	??_i2c_int_handler,w,c
  6151  00029E  0D01               	mullw	1
  6152  0002A0  0E0F               	movlw	15
  6153  0002A2  26F3               	addwf	prodl,f,c
  6154  0002A4  0E00               	movlw	0
  6155  0002A6  22F4               	addwfc	prodh,f,c
  6156  0002A8  50F3               	movf	prodl,w,c
  6157  0002AA  0100               	movlb	0	; () banked
  6158  0002AC  25BA               	addwf	_ic_ptr& (0+255),w,b
  6159  0002AE  6ED9               	movwf	fsr2l,c
  6160  0002B0  50F4               	movf	prodh,w,c
  6161  0002B2  0100               	movlb	0	; () banked
  6162  0002B4  21BB               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6163  0002B6  6EDA               	movwf	fsr2h,c
  6164  0002B8  50DF               	movf	indf2,w,c
  6165  0002BA  6EC9               	movwf	4041,c	;volatile
  6166                           
  6167                           ; BSR set to: 0
  6168                           ;my_i2c.c: 180: ic_ptr->outbufind++;
  6169  0002BC  0100               	movlb	0	; () banked
  6170  0002BE  EE20 F01A          	lfsr	2,26
  6171  0002C2  0100               	movlb	0	; () banked
  6172  0002C4  51BA               	movf	_ic_ptr& (0+255),w,b
  6173  0002C6  26D9               	addwf	fsr2l,f,c
  6174  0002C8  0100               	movlb	0	; () banked
  6175  0002CA  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6176  0002CC  22DA               	addwfc	fsr2h,f,c
  6177  0002CE  2ADF               	incf	indf2,f,c
  6178                           
  6179                           ; BSR set to: 0
  6180                           ;my_i2c.c: 181: data_written = 1;
  6181  0002D0  0E01               	movlw	1
  6182  0002D2  0100               	movlb	0	; () banked
  6183  0002D4  6F83               	movwf	i2c_int_handler@data_written& (0+255),b
  6184                           
  6185                           ;my_i2c.c: 182: } else {
  6186  0002D6  D0C7               	goto	i2l263
  6187  0002D8                     L5:
  6188  0002D8  6EDF               	movwf	indf2,c
  6189  0002DA  D0C5               	goto	i2l263
  6190  0002DC                     i2l283:
  6191                           
  6192                           ; BSR set to: 0
  6193                           ;my_i2c.c: 189: {
  6194                           ;my_i2c.c: 191: if (SSPSTATbits.P == 1) {
  6195  0002DC  A8C7               	btfss	4039,4,c	;volatile
  6196  0002DE  D058               	goto	i2l3081
  6197                           
  6198                           ; BSR set to: 0
  6199                           ;my_i2c.c: 193: ic_ptr->event_count++;
  6200  0002E0  0100               	movlb	0	; () banked
  6201  0002E2  EE20 F00B          	lfsr	2,11
  6202  0002E6  0100               	movlb	0	; () banked
  6203  0002E8  51BA               	movf	_ic_ptr& (0+255),w,b
  6204  0002EA  26D9               	addwf	fsr2l,f,c
  6205  0002EC  0100               	movlb	0	; () banked
  6206  0002EE  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6207  0002F0  22DA               	addwfc	fsr2h,f,c
  6208  0002F2  2ADF               	incf	indf2,f,c
  6209                           
  6210                           ; BSR set to: 0
  6211                           ;my_i2c.c: 194: if (data_read) {
  6212  0002F4  0100               	movlb	0	; () banked
  6213  0002F6  5188               	movf	i2c_int_handler@data_read& (0+255),w,b
  6214  0002F8  B4D8               	btfsc	status,2,c
  6215  0002FA  D046               	goto	i2l3077
  6216                           
  6217                           ; BSR set to: 0
  6218                           ;my_i2c.c: 195: if (SSPSTATbits.D_A == 1) {
  6219  0002FC  AAC7               	btfss	4039,5,c	;volatile
  6220  0002FE  D023               	goto	i2l3075
  6221                           
  6222                           ; BSR set to: 0
  6223                           ;my_i2c.c: 196: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  6224  000300  0100               	movlb	0	; () banked
  6225  000302  EE20 F00A          	lfsr	2,10
  6226  000306  0100               	movlb	0	; () banked
  6227  000308  51BA               	movf	_ic_ptr& (0+255),w,b
  6228  00030A  26D9               	addwf	fsr2l,f,c
  6229  00030C  0100               	movlb	0	; () banked
  6230  00030E  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6231  000310  22DA               	addwfc	fsr2h,f,c
  6232  000312  50DF               	movf	indf2,w,c
  6233  000314  6E48               	movwf	??_i2c_int_handler& (0+255),c
  6234  000316  5048               	movf	??_i2c_int_handler,w,c
  6235  000318  0D01               	mullw	1
  6236  00031A  50F3               	movf	prodl,w,c
  6237  00031C  0100               	movlb	0	; () banked
  6238  00031E  25BA               	addwf	_ic_ptr& (0+255),w,b
  6239  000320  6ED9               	movwf	fsr2l,c
  6240  000322  50F4               	movf	prodh,w,c
  6241  000324  0100               	movlb	0	; () banked
  6242  000326  21BB               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6243  000328  6EDA               	movwf	fsr2h,c
  6244  00032A  0100               	movlb	0	; () banked
  6245  00032C  C085  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  6246                           
  6247                           ; BSR set to: 0
  6248                           ;my_i2c.c: 197: ic_ptr->buflen++;
  6249  000330  0100               	movlb	0	; () banked
  6250  000332  EE20 F00A          	lfsr	2,10
  6251  000336  0100               	movlb	0	; () banked
  6252  000338  51BA               	movf	_ic_ptr& (0+255),w,b
  6253  00033A  26D9               	addwf	fsr2l,f,c
  6254  00033C  0100               	movlb	0	; () banked
  6255  00033E  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6256  000340  22DA               	addwfc	fsr2h,f,c
  6257  000342  2ADF               	incf	indf2,f,c
  6258  000344  D021               	goto	i2l3077
  6259  000346                     i2l3075:
  6260                           
  6261                           ; BSR set to: 0
  6262                           ;my_i2c.c: 200: ic_ptr->error_count++;
  6263  000346  0100               	movlb	0	; () banked
  6264  000348  EE20 F00E          	lfsr	2,14
  6265  00034C  0100               	movlb	0	; () banked
  6266  00034E  51BA               	movf	_ic_ptr& (0+255),w,b
  6267  000350  26D9               	addwf	fsr2l,f,c
  6268  000352  0100               	movlb	0	; () banked
  6269  000354  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6270  000356  22DA               	addwfc	fsr2h,f,c
  6271  000358  2ADF               	incf	indf2,f,c
  6272                           
  6273                           ;my_i2c.c: 201: ic_ptr->error_code = 0x6;
  6274  00035A  0100               	movlb	0	; () banked
  6275  00035C  EE20 F00D          	lfsr	2,13
  6276  000360  0100               	movlb	0	; () banked
  6277  000362  51BA               	movf	_ic_ptr& (0+255),w,b
  6278  000364  26D9               	addwf	fsr2l,f,c
  6279  000366  0100               	movlb	0	; () banked
  6280  000368  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6281  00036A  22DA               	addwfc	fsr2h,f,c
  6282  00036C  0E06               	movlw	6
  6283  00036E  6EDF               	movwf	indf2,c
  6284                           
  6285                           ;my_i2c.c: 202: ic_ptr->status = 0x5;
  6286  000370  0100               	movlb	0	; () banked
  6287  000372  EE20 F00C          	lfsr	2,12
  6288  000376  0100               	movlb	0	; () banked
  6289  000378  51BA               	movf	_ic_ptr& (0+255),w,b
  6290  00037A  26D9               	addwf	fsr2l,f,c
  6291  00037C  0100               	movlb	0	; () banked
  6292  00037E  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6293  000380  22DA               	addwfc	fsr2h,f,c
  6294  000382  0E05               	movlw	5
  6295  000384  6EDF               	movwf	indf2,c
  6296  000386  D04E               	goto	L7
  6297  000388                     i2l3077:
  6298                           
  6299                           ; BSR set to: 0
  6300                           ;my_i2c.c: 205: msg_ready = 1;
  6301  000388  0E01               	movlw	1
  6302  00038A  0100               	movlb	0	; () banked
  6303  00038C  6F87               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6304                           
  6305                           ; BSR set to: 0
  6306  00038E  D04A               	goto	L7
  6307  000390                     i2l3081:
  6308                           
  6309                           ; BSR set to: 0
  6310  000390  0100               	movlb	0	; () banked
  6311  000392  5188               	movf	i2c_int_handler@data_read& (0+255),w,b
  6312  000394  B4D8               	btfsc	status,2,c
  6313  000396  D067               	goto	i2l263
  6314                           
  6315                           ; BSR set to: 0
  6316                           ;my_i2c.c: 209: ic_ptr->event_count++;
  6317  000398  0100               	movlb	0	; () banked
  6318  00039A  EE20 F00B          	lfsr	2,11
  6319  00039E  0100               	movlb	0	; () banked
  6320  0003A0  51BA               	movf	_ic_ptr& (0+255),w,b
  6321  0003A2  26D9               	addwf	fsr2l,f,c
  6322  0003A4  0100               	movlb	0	; () banked
  6323  0003A6  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6324  0003A8  22DA               	addwfc	fsr2h,f,c
  6325  0003AA  2ADF               	incf	indf2,f,c
  6326                           
  6327                           ; BSR set to: 0
  6328                           ;my_i2c.c: 210: if (SSPSTATbits.D_A == 1) {
  6329  0003AC  AAC7               	btfss	4039,5,c	;volatile
  6330  0003AE  D023               	goto	i2l291
  6331                           
  6332                           ; BSR set to: 0
  6333                           ;my_i2c.c: 211: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  6334  0003B0  0100               	movlb	0	; () banked
  6335  0003B2  EE20 F00A          	lfsr	2,10
  6336  0003B6  0100               	movlb	0	; () banked
  6337  0003B8  51BA               	movf	_ic_ptr& (0+255),w,b
  6338  0003BA  26D9               	addwf	fsr2l,f,c
  6339  0003BC  0100               	movlb	0	; () banked
  6340  0003BE  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6341  0003C0  22DA               	addwfc	fsr2h,f,c
  6342  0003C2  50DF               	movf	indf2,w,c
  6343  0003C4  6E48               	movwf	??_i2c_int_handler& (0+255),c
  6344  0003C6  5048               	movf	??_i2c_int_handler,w,c
  6345  0003C8  0D01               	mullw	1
  6346  0003CA  50F3               	movf	prodl,w,c
  6347  0003CC  0100               	movlb	0	; () banked
  6348  0003CE  25BA               	addwf	_ic_ptr& (0+255),w,b
  6349  0003D0  6ED9               	movwf	fsr2l,c
  6350  0003D2  50F4               	movf	prodh,w,c
  6351  0003D4  0100               	movlb	0	; () banked
  6352  0003D6  21BB               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6353  0003D8  6EDA               	movwf	fsr2h,c
  6354  0003DA  0100               	movlb	0	; () banked
  6355  0003DC  C085  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  6356                           
  6357                           ; BSR set to: 0
  6358                           ;my_i2c.c: 212: ic_ptr->buflen++;
  6359  0003E0  0100               	movlb	0	; () banked
  6360  0003E2  EE20 F00A          	lfsr	2,10
  6361  0003E6  0100               	movlb	0	; () banked
  6362  0003E8  51BA               	movf	_ic_ptr& (0+255),w,b
  6363  0003EA  26D9               	addwf	fsr2l,f,c
  6364  0003EC  0100               	movlb	0	; () banked
  6365  0003EE  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6366  0003F0  22DA               	addwfc	fsr2h,f,c
  6367  0003F2  2ADF               	incf	indf2,f,c
  6368                           
  6369                           ;my_i2c.c: 213: } else {
  6370  0003F4  D038               	goto	i2l263
  6371  0003F6                     i2l291:
  6372                           
  6373                           ; BSR set to: 0
  6374                           ;my_i2c.c: 214: if (SSPSTATbits.R_W == 1) {
  6375  0003F6  A4C7               	btfss	4039,2,c	;volatile
  6376  0003F8  D6CF               	goto	i2l3033
  6377                           
  6378                           ; BSR set to: 0
  6379                           ;my_i2c.c: 215: ic_ptr->status = 0x8;
  6380  0003FA  0100               	movlb	0	; () banked
  6381  0003FC  EE20 F00C          	lfsr	2,12
  6382  000400  0100               	movlb	0	; () banked
  6383  000402  51BA               	movf	_ic_ptr& (0+255),w,b
  6384  000404  26D9               	addwf	fsr2l,f,c
  6385  000406  0100               	movlb	0	; () banked
  6386  000408  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6387  00040A  22DA               	addwfc	fsr2h,f,c
  6388  00040C  0E08               	movlw	8
  6389  00040E  6EDF               	movwf	indf2,c
  6390                           
  6391                           ; BSR set to: 0
  6392                           ;my_i2c.c: 216: msg_ready = 1;
  6393  000410  0E01               	movlw	1
  6394  000412  0100               	movlb	0	; () banked
  6395  000414  6F87               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6396  000416                     L4:
  6397                           
  6398                           ; BSR set to: 0
  6399                           ;my_i2c.c: 217: msg_to_send = 1;
  6400  000416  0E01               	movlw	1
  6401  000418  0100               	movlb	0	; () banked
  6402  00041A  6F86               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6403                           
  6404                           ; BSR set to: 0
  6405                           ;my_i2c.c: 219: data_read = 0;
  6406  00041C  0E00               	movlw	0
  6407  00041E  0100               	movlb	0	; () banked
  6408  000420  6F88               	movwf	i2c_int_handler@data_read& (0+255),b
  6409                           
  6410                           ;my_i2c.c: 220: } else {
  6411  000422  D021               	goto	i2l263
  6412  000424                     L7:
  6413                           
  6414                           ;my_i2c.c: 223: ic_ptr->status = 0x5;
  6415  000424  0100               	movlb	0	; () banked
  6416  000426  EE20 F00C          	lfsr	2,12
  6417  00042A  0100               	movlb	0	; () banked
  6418  00042C  51BA               	movf	_ic_ptr& (0+255),w,b
  6419  00042E  26D9               	addwf	fsr2l,f,c
  6420  000430  0100               	movlb	0	; () banked
  6421  000432  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6422  000434  22DA               	addwfc	fsr2h,f,c
  6423  000436  0E05               	movlw	5
  6424  000438  D74F               	goto	L5
  6425  00043A                     i2l3103:
  6426                           
  6427                           ; BSR set to: 0
  6428  00043A  0100               	movlb	0	; () banked
  6429  00043C  EE20 F00C          	lfsr	2,12
  6430  000440  0100               	movlb	0	; () banked
  6431  000442  51BA               	movf	_ic_ptr& (0+255),w,b
  6432  000444  26D9               	addwf	fsr2l,f,c
  6433  000446  0100               	movlb	0	; () banked
  6434  000448  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6435  00044A  22DA               	addwfc	fsr2h,f,c
  6436  00044C  50DF               	movf	indf2,w,c
  6437                           
  6438                           ; Switch size 1, requested type "space"
  6439                           ; Number of cases is 4, Range of values is 5 to 8
  6440                           ; switch strategies available:
  6441                           ; Name         Instructions Cycles
  6442                           ; simple_byte           13     7 (average)
  6443                           ;	Chosen strategy is simple_byte
  6444  00044E  0A05               	xorlw	5	; case 5
  6445  000450  B4D8               	btfsc	status,2,c
  6446  000452  D673               	goto	i2l265
  6447  000454  0A03               	xorlw	3	; case 6
  6448  000456  B4D8               	btfsc	status,2,c
  6449  000458  D689               	goto	i2l269
  6450  00045A  0A01               	xorlw	1	; case 7
  6451  00045C  B4D8               	btfsc	status,2,c
  6452  00045E  D73E               	goto	i2l283
  6453  000460  0A0F               	xorlw	15	; case 8
  6454  000462  B4D8               	btfsc	status,2,c
  6455  000464  D6F8               	goto	i2l3053
  6456  000466                     i2l263:
  6457                           
  6458                           ; BSR set to: 0
  6459                           ;my_i2c.c: 230: }
  6460                           ;my_i2c.c: 233: if (data_read || data_written) {
  6461  000466  0100               	movlb	0	; () banked
  6462  000468  6788               	tstfsz	i2c_int_handler@data_read& (0+255),b
  6463  00046A  D004               	goto	i2l297
  6464                           
  6465                           ; BSR set to: 0
  6466  00046C  0100               	movlb	0	; () banked
  6467  00046E  5183               	movf	i2c_int_handler@data_written& (0+255),w,b
  6468  000470  B4D8               	btfsc	status,2,c
  6469  000472  D002               	goto	i2l3109
  6470  000474                     i2l297:
  6471                           
  6472                           ; BSR set to: 0
  6473                           ;my_i2c.c: 235: if (SSPCON1bits.CKP == 0) {
  6474  000474  A8C6               	btfss	4038,4,c	;volatile
  6475                           
  6476                           ; BSR set to: 0
  6477                           ;my_i2c.c: 236: SSPCON1bits.CKP = 1;
  6478  000476  88C6               	bsf	4038,4,c	;volatile
  6479  000478                     i2l3109:
  6480                           
  6481                           ; BSR set to: 0
  6482                           ;my_i2c.c: 237: }
  6483                           ;my_i2c.c: 238: }
  6484                           ;my_i2c.c: 241: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  6485  000478  0100               	movlb	0	; () banked
  6486  00047A  EE20 F00A          	lfsr	2,10
  6487  00047E  0100               	movlb	0	; () banked
  6488  000480  51BA               	movf	_ic_ptr& (0+255),w,b
  6489  000482  26D9               	addwf	fsr2l,f,c
  6490  000484  0100               	movlb	0	; () banked
  6491  000486  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6492  000488  22DA               	addwfc	fsr2h,f,c
  6493  00048A  0E08               	movlw	8
  6494  00048C  64DF               	cpfsgt	indf2,c
  6495  00048E  D023               	goto	i2l3115
  6496                           
  6497                           ; BSR set to: 0
  6498  000490  0100               	movlb	0	; () banked
  6499  000492  6787               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  6500  000494  D020               	goto	i2l3115
  6501                           
  6502                           ; BSR set to: 0
  6503                           ;my_i2c.c: 242: ic_ptr->status = 0x5;
  6504  000496  0100               	movlb	0	; () banked
  6505  000498  EE20 F00C          	lfsr	2,12
  6506  00049C  0100               	movlb	0	; () banked
  6507  00049E  51BA               	movf	_ic_ptr& (0+255),w,b
  6508  0004A0  26D9               	addwf	fsr2l,f,c
  6509  0004A2  0100               	movlb	0	; () banked
  6510  0004A4  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6511  0004A6  22DA               	addwfc	fsr2h,f,c
  6512  0004A8  0E05               	movlw	5
  6513  0004AA  6EDF               	movwf	indf2,c
  6514                           
  6515                           ;my_i2c.c: 243: ic_ptr->error_count++;
  6516  0004AC  0100               	movlb	0	; () banked
  6517  0004AE  EE20 F00E          	lfsr	2,14
  6518  0004B2  0100               	movlb	0	; () banked
  6519  0004B4  51BA               	movf	_ic_ptr& (0+255),w,b
  6520  0004B6  26D9               	addwf	fsr2l,f,c
  6521  0004B8  0100               	movlb	0	; () banked
  6522  0004BA  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6523  0004BC  22DA               	addwfc	fsr2h,f,c
  6524  0004BE  2ADF               	incf	indf2,f,c
  6525                           
  6526                           ;my_i2c.c: 244: ic_ptr->error_code = 0x7;
  6527  0004C0  0100               	movlb	0	; () banked
  6528  0004C2  EE20 F00D          	lfsr	2,13
  6529  0004C6  0100               	movlb	0	; () banked
  6530  0004C8  51BA               	movf	_ic_ptr& (0+255),w,b
  6531  0004CA  26D9               	addwf	fsr2l,f,c
  6532  0004CC  0100               	movlb	0	; () banked
  6533  0004CE  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6534  0004D0  22DA               	addwfc	fsr2h,f,c
  6535  0004D2  0E07               	movlw	7
  6536  0004D4  6EDF               	movwf	indf2,c
  6537  0004D6                     i2l3115:
  6538                           
  6539                           ; BSR set to: 0
  6540                           ;my_i2c.c: 245: }
  6541                           ;my_i2c.c: 247: if (msg_ready) {
  6542  0004D6  0100               	movlb	0	; () banked
  6543  0004D8  5187               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  6544  0004DA  B4D8               	btfsc	status,2,c
  6545  0004DC  D03A               	goto	i2l3123
  6546                           
  6547                           ; BSR set to: 0
  6548                           ;my_i2c.c: 248: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  6549  0004DE  0100               	movlb	0	; () banked
  6550  0004E0  EE20 F00B          	lfsr	2,11
  6551  0004E4  0100               	movlb	0	; () banked
  6552  0004E6  51BA               	movf	_ic_ptr& (0+255),w,b
  6553  0004E8  26D9               	addwf	fsr2l,f,c
  6554  0004EA  0100               	movlb	0	; () banked
  6555  0004EC  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6556  0004EE  22DA               	addwfc	fsr2h,f,c
  6557  0004F0  0100               	movlb	0	; () banked
  6558  0004F2  EE10 F00A          	lfsr	1,10
  6559  0004F6  0100               	movlb	0	; () banked
  6560  0004F8  51BA               	movf	_ic_ptr& (0+255),w,b
  6561  0004FA  26E1               	addwf	fsr1l,f,c
  6562  0004FC  0100               	movlb	0	; () banked
  6563  0004FE  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6564  000500  22E2               	addwfc	fsr1h,f,c
  6565  000502  50E7               	movf	indf1,w,c
  6566  000504  6E48               	movwf	??_i2c_int_handler& (0+255),c
  6567  000506  5048               	movf	??_i2c_int_handler,w,c
  6568  000508  0D01               	mullw	1
  6569  00050A  50F3               	movf	prodl,w,c
  6570  00050C  0100               	movlb	0	; () banked
  6571  00050E  25BA               	addwf	_ic_ptr& (0+255),w,b
  6572  000510  6EE1               	movwf	fsr1l,c
  6573  000512  50F4               	movf	prodh,w,c
  6574  000514  0100               	movlb	0	; () banked
  6575  000516  21BB               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6576  000518  6EE2               	movwf	fsr1h,c
  6577  00051A  CFDF FFE7          	movff	indf2,indf1
  6578                           
  6579                           ; BSR set to: 0
  6580                           ;my_i2c.c: 249: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  6581  00051E  0E28               	movlw	40
  6582  000520  6E44               	movwf	ToMainHigh_sendmsg@msgtype,c
  6583  000522  0100               	movlb	0	; () banked
  6584  000524  C0BB  F046         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  6585  000528  0100               	movlb	0	; () banked
  6586  00052A  C0BA  F045         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  6587  00052E  0100               	movlb	0	; () banked
  6588  000530  EE20 F00A          	lfsr	2,10
  6589  000534  0100               	movlb	0	; () banked
  6590  000536  51BA               	movf	_ic_ptr& (0+255),w,b
  6591  000538  26D9               	addwf	fsr2l,f,c
  6592  00053A  0100               	movlb	0	; () banked
  6593  00053C  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6594  00053E  22DA               	addwfc	fsr2h,f,c
  6595  000540  50DF               	movf	indf2,w,c
  6596  000542  6E48               	movwf	??_i2c_int_handler& (0+255),c
  6597  000544  2848               	incf	??_i2c_int_handler,w,c
  6598  000546  EC19  F00B         	call	_ToMainHigh_sendmsg
  6599                           
  6600                           ;my_i2c.c: 250: ic_ptr->buflen = 0;
  6601  00054A  0100               	movlb	0	; () banked
  6602  00054C  EE20 F00A          	lfsr	2,10
  6603  000550  D03E               	goto	L6
  6604  000552                     i2l3123:
  6605                           
  6606                           ; BSR set to: 0
  6607  000552  0100               	movlb	0	; () banked
  6608  000554  EE20 F00E          	lfsr	2,14
  6609  000558  0100               	movlb	0	; () banked
  6610  00055A  51BA               	movf	_ic_ptr& (0+255),w,b
  6611  00055C  26D9               	addwf	fsr2l,f,c
  6612  00055E  0100               	movlb	0	; () banked
  6613  000560  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6614  000562  22DA               	addwfc	fsr2h,f,c
  6615  000564  50DF               	movf	indf2,w,c
  6616  000566  B4D8               	btfsc	status,2,c
  6617  000568  D03A               	goto	i2l3131
  6618                           
  6619                           ; BSR set to: 0
  6620                           ;my_i2c.c: 252: error_buf[0] = ic_ptr->error_count;
  6621  00056A  0100               	movlb	0	; () banked
  6622  00056C  EE20 F00E          	lfsr	2,14
  6623  000570  0100               	movlb	0	; () banked
  6624  000572  51BA               	movf	_ic_ptr& (0+255),w,b
  6625  000574  26D9               	addwf	fsr2l,f,c
  6626  000576  0100               	movlb	0	; () banked
  6627  000578  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6628  00057A  22DA               	addwfc	fsr2h,f,c
  6629  00057C  50DF               	movf	indf2,w,c
  6630  00057E  0100               	movlb	0	; () banked
  6631  000580  6F80               	movwf	i2c_int_handler@error_buf& (0+255),b
  6632                           
  6633                           ;my_i2c.c: 253: error_buf[1] = ic_ptr->error_code;
  6634  000582  0100               	movlb	0	; () banked
  6635  000584  EE20 F00D          	lfsr	2,13
  6636  000588  0100               	movlb	0	; () banked
  6637  00058A  51BA               	movf	_ic_ptr& (0+255),w,b
  6638  00058C  26D9               	addwf	fsr2l,f,c
  6639  00058E  0100               	movlb	0	; () banked
  6640  000590  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6641  000592  22DA               	addwfc	fsr2h,f,c
  6642  000594  50DF               	movf	indf2,w,c
  6643  000596  0100               	movlb	0	; () banked
  6644  000598  6F81               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  6645                           
  6646                           ;my_i2c.c: 254: error_buf[2] = ic_ptr->event_count;
  6647  00059A  0100               	movlb	0	; () banked
  6648  00059C  EE20 F00B          	lfsr	2,11
  6649  0005A0  0100               	movlb	0	; () banked
  6650  0005A2  51BA               	movf	_ic_ptr& (0+255),w,b
  6651  0005A4  26D9               	addwf	fsr2l,f,c
  6652  0005A6  0100               	movlb	0	; () banked
  6653  0005A8  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6654  0005AA  22DA               	addwfc	fsr2h,f,c
  6655  0005AC  50DF               	movf	indf2,w,c
  6656  0005AE  0100               	movlb	0	; () banked
  6657  0005B0  6F82               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  6658                           
  6659                           ; BSR set to: 0
  6660                           ;my_i2c.c: 255: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  6661  0005B2  0E29               	movlw	41
  6662  0005B4  6E44               	movwf	ToMainHigh_sendmsg@msgtype,c
  6663  0005B6  0100               	movlb	0	; () banked
  6664  0005B8  0E00               	movlw	high i2c_int_handler@error_buf
  6665  0005BA  6E46               	movwf	ToMainHigh_sendmsg@data+1,c
  6666  0005BC  0100               	movlb	0	; () banked
  6667  0005BE  0E80               	movlw	low i2c_int_handler@error_buf
  6668  0005C0  6E45               	movwf	ToMainHigh_sendmsg@data,c
  6669  0005C2  0E03               	movlw	3
  6670  0005C4  EC19  F00B         	call	_ToMainHigh_sendmsg
  6671                           
  6672                           ;my_i2c.c: 256: ic_ptr->error_count = 0;
  6673  0005C8  0100               	movlb	0	; () banked
  6674  0005CA  EE20 F00E          	lfsr	2,14
  6675  0005CE                     L6:
  6676  0005CE  0100               	movlb	0	; () banked
  6677  0005D0  51BA               	movf	_ic_ptr& (0+255),w,b
  6678  0005D2  26D9               	addwf	fsr2l,f,c
  6679  0005D4  0100               	movlb	0	; () banked
  6680  0005D6  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6681  0005D8  22DA               	addwfc	fsr2h,f,c
  6682  0005DA  0E00               	movlw	0
  6683  0005DC  6EDF               	movwf	indf2,c
  6684  0005DE                     i2l3131:
  6685                           
  6686                           ; BSR set to: 0
  6687                           ;my_i2c.c: 257: }
  6688                           ;my_i2c.c: 258: if (msg_to_send) {
  6689  0005DE  0100               	movlb	0	; () banked
  6690  0005E0  5186               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  6691  0005E2  B4D8               	btfsc	status,2,c
  6692  0005E4  0012               	return	
  6693                           
  6694                           ; BSR set to: 0
  6695                           ;my_i2c.c: 260: ToMainHigh_sendmsg(0, 42, (void *) ic_ptr->buffer);
  6696  0005E6  0E2A               	movlw	42
  6697  0005E8  6E44               	movwf	ToMainHigh_sendmsg@msgtype,c
  6698  0005EA  0100               	movlb	0	; () banked
  6699  0005EC  C0BB  F046         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  6700  0005F0  0100               	movlb	0	; () banked
  6701  0005F2  C0BA  F045         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  6702  0005F6  0E00               	movlw	0
  6703  0005F8  EC19  F00B         	call	_ToMainHigh_sendmsg
  6704                           
  6705                           ;my_i2c.c: 261: msg_to_send = 0;
  6706  0005FC  0E00               	movlw	0
  6707  0005FE  0100               	movlb	0	; () banked
  6708  000600  6F86               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6709  000602  0012               	return	
  6710  000604                     __end_of_i2c_int_handler:
  6711                           	opt stack 0
  6712                           pclatu	equ	0xFFB
  6713                           pclath	equ	0xFFA
  6714                           tblptru	equ	0xFF8
  6715                           tblptrh	equ	0xFF7
  6716                           tblptrl	equ	0xFF6
  6717                           tablat	equ	0xFF5
  6718                           prodh	equ	0xFF4
  6719                           prodl	equ	0xFF3
  6720                           intcon	equ	0xFF2
  6721                           postinc0	equ	0xFEE
  6722                           fsr0h	equ	0xFEA
  6723                           fsr0l	equ	0xFE9
  6724                           wreg	equ	0xFE8
  6725                           indf1	equ	0xFE7
  6726                           fsr1h	equ	0xFE2
  6727                           fsr1l	equ	0xFE1
  6728                           bsr	equ	0xFE0
  6729                           indf2	equ	0xFDF
  6730                           postinc2	equ	0xFDE
  6731                           postdec2	equ	0xFDD
  6732                           fsr2h	equ	0xFDA
  6733                           fsr2l	equ	0xFD9
  6734                           status	equ	0xFD8
  6735                           
  6736 ;; *************** function _handle_start *****************
  6737 ;; Defined at:
  6738 ;;		line 71 in file "../src/my_i2c.c"
  6739 ;; Parameters:    Size  Location     Type
  6740 ;;  data_read       1    wreg     unsigned char 
  6741 ;; Auto vars:     Size  Location     Type
  6742 ;;  data_read       1   45[COMRAM] unsigned char 
  6743 ;; Return value:  Size  Location     Type
  6744 ;;		None               void
  6745 ;; Registers used:
  6746 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6747 ;; Tracked objects:
  6748 ;;		On entry : 0/0
  6749 ;;		On exit  : 0/0
  6750 ;;		Unchanged: 0/0
  6751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6752 ;;      Params:         0       0       0       0       0
  6753 ;;      Locals:         1       0       0       0       0
  6754 ;;      Temps:          0       0       0       0       0
  6755 ;;      Totals:         1       0       0       0       0
  6756 ;;Total ram usage:        1 bytes
  6757 ;; Hardware stack levels used:    1
  6758 ;; This function calls:
  6759 ;;		Nothing
  6760 ;; This function is called by:
  6761 ;;		_i2c_int_handler
  6762 ;; This function uses a non-reentrant model
  6763 ;;
  6764                           
  6765                           	psect	text43
  6766  000C32                     __ptext43:
  6767                           	opt stack 0
  6768  000C32                     _handle_start:
  6769                           	opt stack 19
  6770                           
  6771                           ; BSR set to: 0
  6772                           ;incstack = 0
  6773                           ;handle_start@data_read stored from wreg
  6774  000C32  6E2E               	movwf	handle_start@data_read,c
  6775                           
  6776                           ;my_i2c.c: 72: ic_ptr->event_count = 1;
  6777  000C34  0100               	movlb	0	; () banked
  6778  000C36  EE20 F00B          	lfsr	2,11
  6779  000C3A  0100               	movlb	0	; () banked
  6780  000C3C  51BA               	movf	_ic_ptr& (0+255),w,b
  6781  000C3E  26D9               	addwf	fsr2l,f,c
  6782  000C40  0100               	movlb	0	; () banked
  6783  000C42  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6784  000C44  22DA               	addwfc	fsr2h,f,c
  6785  000C46  0E01               	movlw	1
  6786  000C48  6EDF               	movwf	indf2,c
  6787                           
  6788                           ;my_i2c.c: 73: ic_ptr->buflen = 0;
  6789  000C4A  0100               	movlb	0	; () banked
  6790  000C4C  EE20 F00A          	lfsr	2,10
  6791  000C50  0100               	movlb	0	; () banked
  6792  000C52  51BA               	movf	_ic_ptr& (0+255),w,b
  6793  000C54  26D9               	addwf	fsr2l,f,c
  6794  000C56  0100               	movlb	0	; () banked
  6795  000C58  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6796  000C5A  22DA               	addwfc	fsr2h,f,c
  6797  000C5C  0E00               	movlw	0
  6798  000C5E  6EDF               	movwf	indf2,c
  6799                           
  6800                           ; BSR set to: 0
  6801                           ;my_i2c.c: 75: if (data_read) {
  6802  000C60  502E               	movf	handle_start@data_read,w,c
  6803  000C62  B4D8               	btfsc	status,2,c
  6804  000C64  D03D               	goto	i2l2957
  6805                           
  6806                           ; BSR set to: 0
  6807                           ;my_i2c.c: 76: if (SSPSTATbits.D_A == 1) {
  6808  000C66  AAC7               	btfss	4039,5,c	;volatile
  6809  000C68  D021               	goto	i2l253
  6810                           
  6811                           ; BSR set to: 0
  6812                           ;my_i2c.c: 79: ic_ptr->status = 0x5;
  6813  000C6A  0100               	movlb	0	; () banked
  6814  000C6C  EE20 F00C          	lfsr	2,12
  6815  000C70  0100               	movlb	0	; () banked
  6816  000C72  51BA               	movf	_ic_ptr& (0+255),w,b
  6817  000C74  26D9               	addwf	fsr2l,f,c
  6818  000C76  0100               	movlb	0	; () banked
  6819  000C78  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6820  000C7A  22DA               	addwfc	fsr2h,f,c
  6821  000C7C  0E05               	movlw	5
  6822  000C7E  6EDF               	movwf	indf2,c
  6823                           
  6824                           ;my_i2c.c: 80: ic_ptr->error_count++;
  6825  000C80  0100               	movlb	0	; () banked
  6826  000C82  EE20 F00E          	lfsr	2,14
  6827  000C86  0100               	movlb	0	; () banked
  6828  000C88  51BA               	movf	_ic_ptr& (0+255),w,b
  6829  000C8A  26D9               	addwf	fsr2l,f,c
  6830  000C8C  0100               	movlb	0	; () banked
  6831  000C8E  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6832  000C90  22DA               	addwfc	fsr2h,f,c
  6833  000C92  2ADF               	incf	indf2,f,c
  6834                           
  6835                           ;my_i2c.c: 81: ic_ptr->error_code = 0x5;
  6836  000C94  0100               	movlb	0	; () banked
  6837  000C96  EE20 F00D          	lfsr	2,13
  6838  000C9A  0100               	movlb	0	; () banked
  6839  000C9C  51BA               	movf	_ic_ptr& (0+255),w,b
  6840  000C9E  26D9               	addwf	fsr2l,f,c
  6841  000CA0  0100               	movlb	0	; () banked
  6842  000CA2  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6843  000CA4  22DA               	addwfc	fsr2h,f,c
  6844  000CA6  0E05               	movlw	5
  6845  000CA8  6EDF               	movwf	indf2,c
  6846                           
  6847                           ;my_i2c.c: 82: } else {
  6848  000CAA  0012               	return	
  6849  000CAC                     i2l253:
  6850                           
  6851                           ; BSR set to: 0
  6852                           ;my_i2c.c: 83: if (SSPSTATbits.R_W == 1) {
  6853  000CAC  A4C7               	btfss	4039,2,c	;volatile
  6854  000CAE  D00C               	goto	i2l2955
  6855                           
  6856                           ; BSR set to: 0
  6857                           ;my_i2c.c: 84: ic_ptr->status = 0x8;
  6858  000CB0  0100               	movlb	0	; () banked
  6859  000CB2  EE20 F00C          	lfsr	2,12
  6860  000CB6  0100               	movlb	0	; () banked
  6861  000CB8  51BA               	movf	_ic_ptr& (0+255),w,b
  6862  000CBA  26D9               	addwf	fsr2l,f,c
  6863  000CBC  0100               	movlb	0	; () banked
  6864  000CBE  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6865  000CC0  22DA               	addwfc	fsr2h,f,c
  6866  000CC2  0E08               	movlw	8
  6867  000CC4  6EDF               	movwf	indf2,c
  6868                           
  6869                           ;my_i2c.c: 85: } else {
  6870  000CC6  0012               	return	
  6871  000CC8                     i2l2955:
  6872                           
  6873                           ; BSR set to: 0
  6874                           ;my_i2c.c: 86: ic_ptr->status = 0x7;
  6875  000CC8  0100               	movlb	0	; () banked
  6876  000CCA  EE20 F00C          	lfsr	2,12
  6877  000CCE  0100               	movlb	0	; () banked
  6878  000CD0  51BA               	movf	_ic_ptr& (0+255),w,b
  6879  000CD2  26D9               	addwf	fsr2l,f,c
  6880  000CD4  0100               	movlb	0	; () banked
  6881  000CD6  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6882  000CD8  22DA               	addwfc	fsr2h,f,c
  6883  000CDA  0E07               	movlw	7
  6884  000CDC  6EDF               	movwf	indf2,c
  6885  000CDE  0012               	return	
  6886  000CE0                     i2l2957:
  6887                           
  6888                           ; BSR set to: 0
  6889                           ;my_i2c.c: 90: ic_ptr->status = 0x6;
  6890  000CE0  0100               	movlb	0	; () banked
  6891  000CE2  EE20 F00C          	lfsr	2,12
  6892  000CE6  0100               	movlb	0	; () banked
  6893  000CE8  51BA               	movf	_ic_ptr& (0+255),w,b
  6894  000CEA  26D9               	addwf	fsr2l,f,c
  6895  000CEC  0100               	movlb	0	; () banked
  6896  000CEE  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6897  000CF0  22DA               	addwfc	fsr2h,f,c
  6898  000CF2  0E06               	movlw	6
  6899  000CF4  6EDF               	movwf	indf2,c
  6900  000CF6  0012               	return	
  6901  000CF8                     __end_of_handle_start:
  6902                           	opt stack 0
  6903                           pclatu	equ	0xFFB
  6904                           pclath	equ	0xFFA
  6905                           tblptru	equ	0xFF8
  6906                           tblptrh	equ	0xFF7
  6907                           tblptrl	equ	0xFF6
  6908                           tablat	equ	0xFF5
  6909                           prodh	equ	0xFF4
  6910                           prodl	equ	0xFF3
  6911                           intcon	equ	0xFF2
  6912                           postinc0	equ	0xFEE
  6913                           fsr0h	equ	0xFEA
  6914                           fsr0l	equ	0xFE9
  6915                           wreg	equ	0xFE8
  6916                           indf1	equ	0xFE7
  6917                           fsr1h	equ	0xFE2
  6918                           fsr1l	equ	0xFE1
  6919                           bsr	equ	0xFE0
  6920                           indf2	equ	0xFDF
  6921                           postinc2	equ	0xFDE
  6922                           postdec2	equ	0xFDD
  6923                           fsr2h	equ	0xFDA
  6924                           fsr2l	equ	0xFD9
  6925                           status	equ	0xFD8
  6926                           
  6927 ;; *************** function _ToMainHigh_sendmsg *****************
  6928 ;; Defined at:
  6929 ;;		line 126 in file "../src/messages.c"
  6930 ;; Parameters:    Size  Location     Type
  6931 ;;  length          1    wreg     unsigned char 
  6932 ;;  msgtype         1   67[COMRAM] unsigned char 
  6933 ;;  data            2   68[COMRAM] PTR void 
  6934 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@ic(28), 
  6935 ;; Auto vars:     Size  Location     Type
  6936 ;;  length          1   70[COMRAM] unsigned char 
  6937 ;; Return value:  Size  Location     Type
  6938 ;;                  1    wreg      char 
  6939 ;; Registers used:
  6940 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6941 ;; Tracked objects:
  6942 ;;		On entry : 0/0
  6943 ;;		On exit  : 0/0
  6944 ;;		Unchanged: 0/0
  6945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6946 ;;      Params:         3       0       0       0       0
  6947 ;;      Locals:         1       0       0       0       0
  6948 ;;      Temps:          0       0       0       0       0
  6949 ;;      Totals:         4       0       0       0       0
  6950 ;;Total ram usage:        4 bytes
  6951 ;; Hardware stack levels used:    1
  6952 ;; Hardware stack levels required when called:    2
  6953 ;; This function calls:
  6954 ;;		i2_send_msg
  6955 ;; This function is called by:
  6956 ;;		_i2c_int_handler
  6957 ;;		_timer0_int_handler
  6958 ;; This function uses a non-reentrant model
  6959 ;;
  6960                           
  6961                           	psect	text44
  6962  001632                     __ptext44:
  6963                           	opt stack 0
  6964  001632                     _ToMainHigh_sendmsg:
  6965                           	opt stack 17
  6966                           
  6967                           ; BSR set to: 0
  6968                           ;incstack = 0
  6969                           ;ToMainHigh_sendmsg@length stored from wreg
  6970  001632  6E47               	movwf	ToMainHigh_sendmsg@length,c
  6971                           
  6972                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  6973                           ;	Return value of _ToMainHigh_sendmsg is never used
  6974  001634  0101               	movlb	1	; () banked
  6975  001636  0E01               	movlw	high _ToMainHigh_MQ
  6976  001638  6E39               	movwf	i2send_msg@qptr+1,c
  6977  00163A  0101               	movlb	1	; () banked
  6978  00163C  0E6C               	movlw	low _ToMainHigh_MQ
  6979  00163E  6E38               	movwf	i2send_msg@qptr,c
  6980  001640  C047  F03A         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  6981  001644  C044  F03B         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  6982  001648  C046  F03D         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  6983  00164C  C045  F03C         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  6984  001650  ECD1  F006         	call	i2_send_msg	;wreg free
  6985  001654  0012               	return	
  6986  001656                     __end_of_ToMainHigh_sendmsg:
  6987                           	opt stack 0
  6988                           pclatu	equ	0xFFB
  6989                           pclath	equ	0xFFA
  6990                           tblptru	equ	0xFF8
  6991                           tblptrh	equ	0xFF7
  6992                           tblptrl	equ	0xFF6
  6993                           tablat	equ	0xFF5
  6994                           prodh	equ	0xFF4
  6995                           prodl	equ	0xFF3
  6996                           intcon	equ	0xFF2
  6997                           postinc0	equ	0xFEE
  6998                           fsr0h	equ	0xFEA
  6999                           fsr0l	equ	0xFE9
  7000                           wreg	equ	0xFE8
  7001                           indf1	equ	0xFE7
  7002                           fsr1h	equ	0xFE2
  7003                           fsr1l	equ	0xFE1
  7004                           bsr	equ	0xFE0
  7005                           indf2	equ	0xFDF
  7006                           postinc2	equ	0xFDE
  7007                           postdec2	equ	0xFDD
  7008                           fsr2h	equ	0xFDA
  7009                           fsr2l	equ	0xFD9
  7010                           status	equ	0xFD8
  7011                           
  7012 ;; *************** function i2_send_msg *****************
  7013 ;; Defined at:
  7014 ;;		line 24 in file "../src/messages.c"
  7015 ;; Parameters:    Size  Location     Type
  7016 ;;  qptr            2   55[COMRAM] PTR struct __msg_queue
  7017 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7018 ;;  length          1   57[COMRAM] unsigned char 
  7019 ;;  msgtype         1   58[COMRAM] unsigned char 
  7020 ;;  data            2   59[COMRAM] PTR void 
  7021 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@t1thread_data(2), 
  7022 ;;		 -> main@ic(28), main@uc(5), 
  7023 ;; Auto vars:     Size  Location     Type
  7024 ;;  send_msg        2   65[COMRAM] PTR struct __msg
  7025 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7026 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7027 ;;  send_msg        2   62[COMRAM] unsigned int 
  7028 ;;  send_msg        1   64[COMRAM] unsigned char 
  7029 ;; Return value:  Size  Location     Type
  7030 ;;                  1    wreg      char 
  7031 ;; Registers used:
  7032 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7033 ;; Tracked objects:
  7034 ;;		On entry : 0/0
  7035 ;;		On exit  : 0/0
  7036 ;;		Unchanged: 0/0
  7037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7038 ;;      Params:         6       0       0       0       0
  7039 ;;      Locals:         5       0       0       0       0
  7040 ;;      Temps:          1       0       0       0       0
  7041 ;;      Totals:        12       0       0       0       0
  7042 ;;Total ram usage:       12 bytes
  7043 ;; Hardware stack levels used:    1
  7044 ;; Hardware stack levels required when called:    1
  7045 ;; This function calls:
  7046 ;;		i2_memcpy
  7047 ;; This function is called by:
  7048 ;;		_ToMainHigh_sendmsg
  7049 ;; This function uses a non-reentrant model
  7050 ;;
  7051                           
  7052                           	psect	text45
  7053  000DA2                     __ptext45:
  7054                           	opt stack 0
  7055  000DA2                     i2_send_msg:
  7056                           	opt stack 17
  7057                           
  7058                           ;messages.c: 25: unsigned char slot;
  7059                           ;messages.c: 27: msg *qmsg;
  7060                           ;messages.c: 28: size_t tlength = length;
  7061                           
  7062                           ;incstack = 0
  7063  000DA2  C03A  F03F         	movff	i2send_msg@length,i2send_msg@tlength
  7064  000DA6  6A40               	clrf	i2send_msg@tlength+1,c
  7065                           
  7066                           ;messages.c: 38: slot = qptr->cur_write_ind;
  7067  000DA8  EE20 F034          	lfsr	2,52
  7068  000DAC  5038               	movf	i2send_msg@qptr,w,c
  7069  000DAE  26D9               	addwf	fsr2l,f,c
  7070  000DB0  5039               	movf	i2send_msg@qptr+1,w,c
  7071  000DB2  22DA               	addwfc	fsr2h,f,c
  7072  000DB4  50DF               	movf	indf2,w,c
  7073  000DB6  6E41               	movwf	i2send_msg@slot,c
  7074                           
  7075                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  7076  000DB8  5041               	movf	i2send_msg@slot,w,c
  7077  000DBA  0D0D               	mullw	13
  7078  000DBC  50F3               	movf	prodl,w,c
  7079  000DBE  2438               	addwf	i2send_msg@qptr,w,c
  7080  000DC0  6E42               	movwf	i2send_msg@qmsg,c
  7081  000DC2  50F4               	movf	prodh,w,c
  7082  000DC4  2039               	addwfc	i2send_msg@qptr+1,w,c
  7083  000DC6  6E43               	movwf	i2send_msg@qmsg+1,c
  7084                           
  7085                           ;messages.c: 41: if (qmsg->full != 0) {
  7086  000DC8  C042  FFD9         	movff	i2send_msg@qmsg,fsr2l
  7087  000DCC  C043  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  7088  000DD0  50DF               	movf	indf2,w,c
  7089  000DD2  B4D8               	btfsc	status,2,c
  7090  000DD4  D002               	goto	i2l2817
  7091                           
  7092                           ;messages.c: 42: return (-1);
  7093  000DD6  0EFF               	movlw	255
  7094  000DD8  0012               	return	
  7095  000DDA                     i2l2817:
  7096                           
  7097                           ;messages.c: 43: }
  7098                           ;messages.c: 46: qmsg->length = length;
  7099  000DDA  EE20 F001          	lfsr	2,1
  7100  000DDE  5042               	movf	i2send_msg@qmsg,w,c
  7101  000DE0  26D9               	addwf	fsr2l,f,c
  7102  000DE2  5043               	movf	i2send_msg@qmsg+1,w,c
  7103  000DE4  22DA               	addwfc	fsr2h,f,c
  7104  000DE6  C03A  FFDF         	movff	i2send_msg@length,indf2
  7105                           
  7106                           ;messages.c: 47: qmsg->msgtype = msgtype;
  7107  000DEA  EE20 F002          	lfsr	2,2
  7108  000DEE  5042               	movf	i2send_msg@qmsg,w,c
  7109  000DF0  26D9               	addwf	fsr2l,f,c
  7110  000DF2  5043               	movf	i2send_msg@qmsg+1,w,c
  7111  000DF4  22DA               	addwfc	fsr2h,f,c
  7112  000DF6  C03B  FFDF         	movff	i2send_msg@msgtype,indf2
  7113                           
  7114                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  7115  000DFA  0E03               	movlw	3
  7116  000DFC  2442               	addwf	i2send_msg@qmsg,w,c
  7117  000DFE  6E2E               	movwf	i2memcpy@d1,c
  7118  000E00  0E00               	movlw	0
  7119  000E02  2043               	addwfc	i2send_msg@qmsg+1,w,c
  7120  000E04  6E2F               	movwf	i2memcpy@d1+1,c
  7121  000E06  C03D  F031         	movff	i2send_msg@data+1,i2memcpy@s1+1
  7122  000E0A  C03C  F030         	movff	i2send_msg@data,i2memcpy@s1
  7123  000E0E  C03F  F032         	movff	i2send_msg@tlength,i2memcpy@n
  7124  000E12  C040  F033         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  7125  000E16  ECAA  F009         	call	i2_memcpy	;wreg free
  7126                           
  7127                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  7128  000E1A  EE20 F034          	lfsr	2,52
  7129  000E1E  5038               	movf	i2send_msg@qptr,w,c
  7130  000E20  26D9               	addwf	fsr2l,f,c
  7131  000E22  5039               	movf	i2send_msg@qptr+1,w,c
  7132  000E24  22DA               	addwfc	fsr2h,f,c
  7133  000E26  EE10 F034          	lfsr	1,52
  7134  000E2A  5038               	movf	i2send_msg@qptr,w,c
  7135  000E2C  26E1               	addwf	fsr1l,f,c
  7136  000E2E  5039               	movf	i2send_msg@qptr+1,w,c
  7137  000E30  22E2               	addwfc	fsr1h,f,c
  7138  000E32  50E7               	movf	indf1,w,c
  7139  000E34  6E3E               	movwf	??i2_send_msg& (0+255),c
  7140  000E36  283E               	incf	??i2_send_msg,w,c
  7141  000E38  0B03               	andlw	3
  7142  000E3A  6EDF               	movwf	indf2,c
  7143                           
  7144                           ;messages.c: 59: qmsg->full = 1;
  7145  000E3C  C042  FFD9         	movff	i2send_msg@qmsg,fsr2l
  7146  000E40  C043  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  7147  000E44  0E01               	movlw	1
  7148  000E46  6EDF               	movwf	indf2,c
  7149                           
  7150                           ;messages.c: 60: return (1);
  7151  000E48  0E01               	movlw	1
  7152  000E4A  0012               	return	
  7153  000E4C                     __end_ofi2_send_msg:
  7154                           	opt stack 0
  7155                           pclatu	equ	0xFFB
  7156                           pclath	equ	0xFFA
  7157                           tblptru	equ	0xFF8
  7158                           tblptrh	equ	0xFF7
  7159                           tblptrl	equ	0xFF6
  7160                           tablat	equ	0xFF5
  7161                           prodh	equ	0xFF4
  7162                           prodl	equ	0xFF3
  7163                           intcon	equ	0xFF2
  7164                           postinc0	equ	0xFEE
  7165                           fsr0h	equ	0xFEA
  7166                           fsr0l	equ	0xFE9
  7167                           wreg	equ	0xFE8
  7168                           indf1	equ	0xFE7
  7169                           fsr1h	equ	0xFE2
  7170                           fsr1l	equ	0xFE1
  7171                           bsr	equ	0xFE0
  7172                           indf2	equ	0xFDF
  7173                           postinc2	equ	0xFDE
  7174                           postdec2	equ	0xFDD
  7175                           fsr2h	equ	0xFDA
  7176                           fsr2l	equ	0xFD9
  7177                           status	equ	0xFD8
  7178                           
  7179 ;; *************** function i2_memcpy *****************
  7180 ;; Defined at:
  7181 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  7182 ;; Parameters:    Size  Location     Type
  7183 ;;  d1              2   45[COMRAM] PTR void 
  7184 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7185 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  7186 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  7187 ;;  s1              2   47[COMRAM] PTR const void 
  7188 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  7189 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  7190 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  7191 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), 
  7192 ;;		 -> main@ic(28), main@uc(5), 
  7193 ;;  n               2   49[COMRAM] unsigned int 
  7194 ;; Auto vars:     Size  Location     Type
  7195 ;;  memcpy          2   53[COMRAM] PTR const unsigned char 
  7196 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  7197 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  7198 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  7199 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), 
  7200 ;;		 -> main@ic(28), main@uc(5), 
  7201 ;;  memcpy          2   51[COMRAM] PTR unsigned char 
  7202 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7203 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  7204 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  7205 ;; Return value:  Size  Location     Type
  7206 ;;                  2   45[COMRAM] PTR void 
  7207 ;; Registers used:
  7208 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7209 ;; Tracked objects:
  7210 ;;		On entry : 0/0
  7211 ;;		On exit  : 0/0
  7212 ;;		Unchanged: 0/0
  7213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7214 ;;      Params:         6       0       0       0       0
  7215 ;;      Locals:         4       0       0       0       0
  7216 ;;      Temps:          0       0       0       0       0
  7217 ;;      Totals:        10       0       0       0       0
  7218 ;;Total ram usage:       10 bytes
  7219 ;; Hardware stack levels used:    1
  7220 ;; This function calls:
  7221 ;;		Nothing
  7222 ;; This function is called by:
  7223 ;;		i2_send_msg
  7224 ;;		i2_recv_msg
  7225 ;; This function uses a non-reentrant model
  7226 ;;
  7227                           
  7228                           	psect	text46
  7229  001354                     __ptext46:
  7230                           	opt stack 0
  7231  001354                     i2_memcpy:
  7232                           	opt stack 17
  7233                           
  7234                           ;incstack = 0
  7235  001354  C031  F037         	movff	i2memcpy@s1+1,i2memcpy@s+1
  7236  001358  C030  F036         	movff	i2memcpy@s1,i2memcpy@s
  7237  00135C  C02F  F035         	movff	i2memcpy@d1+1,i2memcpy@d+1
  7238  001360  C02E  F034         	movff	i2memcpy@d1,i2memcpy@d
  7239  001364  D00E               	goto	i2l2735
  7240  001366                     i2l2729:
  7241  001366  C036  FFD9         	movff	i2memcpy@s,fsr2l
  7242  00136A  C037  FFDA         	movff	i2memcpy@s+1,fsr2h
  7243  00136E  C034  FFE1         	movff	i2memcpy@d,fsr1l
  7244  001372  C035  FFE2         	movff	i2memcpy@d+1,fsr1h
  7245  001376  CFDF FFE7          	movff	indf2,indf1
  7246  00137A  4A36               	infsnz	i2memcpy@s,f,c
  7247  00137C  2A37               	incf	i2memcpy@s+1,f,c
  7248  00137E  4A34               	infsnz	i2memcpy@d,f,c
  7249  001380  2A35               	incf	i2memcpy@d+1,f,c
  7250  001382                     i2l2735:
  7251  001382  0632               	decf	i2memcpy@n,f,c
  7252  001384  A0D8               	btfss	status,0,c
  7253  001386  0633               	decf	i2memcpy@n+1,f,c
  7254  001388  2832               	incf	i2memcpy@n& (0+255),w,c
  7255  00138A  B4D8               	btfsc	status,2,c
  7256  00138C  2833               	incf	(i2memcpy@n+1)& (0+255),w,c
  7257  00138E  B4D8               	btfsc	status,2,c
  7258                           
  7259                           ;	Return value of i2_memcpy is never used
  7260  001390  0012               	return	
  7261  001392  D7E9               	goto	i2l2729
  7262  001394                     __end_ofi2_memcpy:
  7263                           	opt stack 0
  7264                           pclatu	equ	0xFFB
  7265                           pclath	equ	0xFFA
  7266                           tblptru	equ	0xFF8
  7267                           tblptrh	equ	0xFF7
  7268                           tblptrl	equ	0xFF6
  7269                           tablat	equ	0xFF5
  7270                           prodh	equ	0xFF4
  7271                           prodl	equ	0xFF3
  7272                           intcon	equ	0xFF2
  7273                           postinc0	equ	0xFEE
  7274                           fsr0h	equ	0xFEA
  7275                           fsr0l	equ	0xFE9
  7276                           wreg	equ	0xFE8
  7277                           indf1	equ	0xFE7
  7278                           fsr1h	equ	0xFE2
  7279                           fsr1l	equ	0xFE1
  7280                           bsr	equ	0xFE0
  7281                           indf2	equ	0xFDF
  7282                           postinc2	equ	0xFDE
  7283                           postdec2	equ	0xFDD
  7284                           fsr2h	equ	0xFDA
  7285                           fsr2l	equ	0xFD9
  7286                           status	equ	0xFD8
  7287                           
  7288 ;; *************** function _SleepIfOkay *****************
  7289 ;; Defined at:
  7290 ;;		line 226 in file "../src/messages.c"
  7291 ;; Parameters:    Size  Location     Type
  7292 ;;		None
  7293 ;; Auto vars:     Size  Location     Type
  7294 ;;		None
  7295 ;; Return value:  Size  Location     Type
  7296 ;;		None               void
  7297 ;; Registers used:
  7298 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7299 ;; Tracked objects:
  7300 ;;		On entry : 0/0
  7301 ;;		On exit  : 0/0
  7302 ;;		Unchanged: 0/0
  7303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7304 ;;      Params:         0       0       0       0       0
  7305 ;;      Locals:         0       0       0       0       0
  7306 ;;      Temps:          0       0       0       0       0
  7307 ;;      Totals:         0       0       0       0       0
  7308 ;;Total ram usage:        0 bytes
  7309 ;; Hardware stack levels used:    1
  7310 ;; Hardware stack levels required when called:    2
  7311 ;; This function calls:
  7312 ;;		_enter_sleep_mode
  7313 ;;		i2_check_msg
  7314 ;;		i2_in_high_int
  7315 ;;		i2_in_low_int
  7316 ;; This function is called by:
  7317 ;;		_InterruptHandlerHigh
  7318 ;; This function uses a non-reentrant model
  7319 ;;
  7320                           
  7321                           	psect	text47
  7322  0012C6                     __ptext47:
  7323                           	opt stack 0
  7324  0012C6                     _SleepIfOkay:
  7325                           	opt stack 18
  7326                           
  7327                           ;messages.c: 228: if (MQ_Main_Willing_to_block == 0) {
  7328                           
  7329                           ;incstack = 0
  7330  0012C6  664D               	tstfsz	_MQ_Main_Willing_to_block,c
  7331  0012C8  D001               	goto	i2l2367
  7332  0012CA  0012               	return	
  7333  0012CC                     i2l2367:
  7334                           
  7335                           ;messages.c: 230: }
  7336                           ;messages.c: 233: if (in_low_int()) {
  7337  0012CC  EC9F  F00A         	call	i2_in_low_int	;wreg free
  7338  0012D0  5031               	movf	?i2_in_low_int+1,w,c
  7339  0012D2  1030               	iorwf	?i2_in_low_int,w,c
  7340  0012D4  A4D8               	btfss	status,2,c
  7341  0012D6  0012               	return	
  7342                           
  7343                           ;messages.c: 235: }
  7344                           ;messages.c: 238: if (!in_high_int()) {
  7345                           
  7346                           ;messages.c: 234: return;
  7347  0012D8  ECA5  F00B         	call	i2_in_high_int	;wreg free
  7348  0012DC  502F               	movf	?i2_in_high_int+1,w,c
  7349  0012DE  102E               	iorwf	?i2_in_high_int,w,c
  7350  0012E0  B4D8               	btfsc	status,2,c
  7351  0012E2  0012               	return	
  7352                           
  7353                           ;messages.c: 240: }
  7354                           ;messages.c: 245: if (check_msg(&ToMainHigh_MQ)) {
  7355                           
  7356                           ;messages.c: 239: return;
  7357  0012E4  0101               	movlb	1	; () banked
  7358  0012E6  0E01               	movlw	high _ToMainHigh_MQ
  7359  0012E8  6E2F               	movwf	i2check_msg@qptr+1,c
  7360  0012EA  0101               	movlb	1	; () banked
  7361  0012EC  0E6C               	movlw	low _ToMainHigh_MQ
  7362  0012EE  6E2E               	movwf	i2check_msg@qptr,c
  7363  0012F0  EC2B  F00B         	call	i2_check_msg	;wreg free
  7364  0012F4  0900               	iorlw	0
  7365  0012F6  A4D8               	btfss	status,2,c
  7366  0012F8  0012               	return	
  7367                           
  7368                           ;messages.c: 247: }
  7369                           ;messages.c: 248: if (check_msg(&ToMainLow_MQ)) {
  7370                           
  7371                           ;messages.c: 246: return;
  7372  0012FA  0101               	movlb	1	; () banked
  7373  0012FC  0E01               	movlw	high _ToMainLow_MQ
  7374  0012FE  6E2F               	movwf	i2check_msg@qptr+1,c
  7375  001300  0101               	movlb	1	; () banked
  7376  001302  0EA2               	movlw	low _ToMainLow_MQ
  7377  001304  6E2E               	movwf	i2check_msg@qptr,c
  7378  001306  EC2B  F00B         	call	i2_check_msg	;wreg free
  7379  00130A  0900               	iorlw	0
  7380  00130C  B4D8               	btfsc	status,2,c
  7381                           
  7382                           ;messages.c: 250: }
  7383                           ;messages.c: 251: enter_sleep_mode();
  7384                           
  7385                           ;messages.c: 249: return;
  7386  00130E  ECAF  F00B         	call	_enter_sleep_mode	;wreg free
  7387  001312  0012               	return	
  7388  001314                     __end_of_SleepIfOkay:
  7389                           	opt stack 0
  7390                           pclatu	equ	0xFFB
  7391                           pclath	equ	0xFFA
  7392                           tblptru	equ	0xFF8
  7393                           tblptrh	equ	0xFF7
  7394                           tblptrl	equ	0xFF6
  7395                           tablat	equ	0xFF5
  7396                           prodh	equ	0xFF4
  7397                           prodl	equ	0xFF3
  7398                           intcon	equ	0xFF2
  7399                           postinc0	equ	0xFEE
  7400                           fsr0h	equ	0xFEA
  7401                           fsr0l	equ	0xFE9
  7402                           wreg	equ	0xFE8
  7403                           indf1	equ	0xFE7
  7404                           fsr1h	equ	0xFE2
  7405                           fsr1l	equ	0xFE1
  7406                           bsr	equ	0xFE0
  7407                           indf2	equ	0xFDF
  7408                           postinc2	equ	0xFDE
  7409                           postdec2	equ	0xFDD
  7410                           fsr2h	equ	0xFDA
  7411                           fsr2l	equ	0xFD9
  7412                           status	equ	0xFD8
  7413                           
  7414 ;; *************** function i2_in_low_int *****************
  7415 ;; Defined at:
  7416 ;;		line 30 in file "../src/interrupts.c"
  7417 ;; Parameters:    Size  Location     Type
  7418 ;;		None
  7419 ;; Auto vars:     Size  Location     Type
  7420 ;;		None
  7421 ;; Return value:  Size  Location     Type
  7422 ;;                  2   47[COMRAM] int 
  7423 ;; Registers used:
  7424 ;;		wreg, status,2, status,0, cstack
  7425 ;; Tracked objects:
  7426 ;;		On entry : 0/0
  7427 ;;		On exit  : 0/0
  7428 ;;		Unchanged: 0/0
  7429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7430 ;;      Params:         2       0       0       0       0
  7431 ;;      Locals:         0       0       0       0       0
  7432 ;;      Temps:          0       0       0       0       0
  7433 ;;      Totals:         2       0       0       0       0
  7434 ;;Total ram usage:        2 bytes
  7435 ;; Hardware stack levels used:    1
  7436 ;; Hardware stack levels required when called:    1
  7437 ;; This function calls:
  7438 ;;		i2_in_high_int
  7439 ;; This function is called by:
  7440 ;;		_SleepIfOkay
  7441 ;; This function uses a non-reentrant model
  7442 ;;
  7443                           
  7444                           	psect	text48
  7445  00153E                     __ptext48:
  7446                           	opt stack 0
  7447  00153E                     i2_in_low_int:
  7448                           	opt stack 18
  7449                           
  7450                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  7451                           
  7452                           ;incstack = 0
  7453  00153E  ACF2               	btfss	intcon,6,c	;volatile
  7454  001540  D005               	goto	i2l2195
  7455                           
  7456                           ;interrupts.c: 32: return (0);
  7457  001542  0E00               	movlw	0
  7458  001544  6E31               	movwf	?i2_in_low_int+1,c
  7459  001546  0E00               	movlw	0
  7460  001548  6E30               	movwf	?i2_in_low_int,c
  7461  00154A  0012               	return	
  7462  00154C                     i2l2195:
  7463  00154C  ECA5  F00B         	call	i2_in_high_int	;wreg free
  7464  001550  502F               	movf	?i2_in_high_int+1,w,c
  7465  001552  102E               	iorwf	?i2_in_high_int,w,c
  7466  001554  B4D8               	btfsc	status,2,c
  7467  001556  D005               	goto	i2l2203
  7468                           
  7469                           ;interrupts.c: 34: return (0);
  7470  001558  0E00               	movlw	0
  7471  00155A  6E31               	movwf	?i2_in_low_int+1,c
  7472  00155C  0E00               	movlw	0
  7473  00155E  6E30               	movwf	?i2_in_low_int,c
  7474  001560  0012               	return	
  7475  001562                     i2l2203:
  7476                           
  7477                           ;interrupts.c: 36: return (1);
  7478  001562  0E00               	movlw	0
  7479  001564  6E31               	movwf	?i2_in_low_int+1,c
  7480  001566  0E01               	movlw	1
  7481  001568  6E30               	movwf	?i2_in_low_int,c
  7482  00156A  0012               	return	
  7483  00156C                     __end_ofi2_in_low_int:
  7484                           	opt stack 0
  7485                           pclatu	equ	0xFFB
  7486                           pclath	equ	0xFFA
  7487                           tblptru	equ	0xFF8
  7488                           tblptrh	equ	0xFF7
  7489                           tblptrl	equ	0xFF6
  7490                           tablat	equ	0xFF5
  7491                           prodh	equ	0xFF4
  7492                           prodl	equ	0xFF3
  7493                           intcon	equ	0xFF2
  7494                           postinc0	equ	0xFEE
  7495                           fsr0h	equ	0xFEA
  7496                           fsr0l	equ	0xFE9
  7497                           wreg	equ	0xFE8
  7498                           indf1	equ	0xFE7
  7499                           fsr1h	equ	0xFE2
  7500                           fsr1l	equ	0xFE1
  7501                           bsr	equ	0xFE0
  7502                           indf2	equ	0xFDF
  7503                           postinc2	equ	0xFDE
  7504                           postdec2	equ	0xFDD
  7505                           fsr2h	equ	0xFDA
  7506                           fsr2l	equ	0xFD9
  7507                           status	equ	0xFD8
  7508                           
  7509 ;; *************** function i2_in_high_int *****************
  7510 ;; Defined at:
  7511 ;;		line 22 in file "../src/interrupts.c"
  7512 ;; Parameters:    Size  Location     Type
  7513 ;;		None
  7514 ;; Auto vars:     Size  Location     Type
  7515 ;;		None
  7516 ;; Return value:  Size  Location     Type
  7517 ;;                  2   45[COMRAM] int 
  7518 ;; Registers used:
  7519 ;;		wreg, status,2
  7520 ;; Tracked objects:
  7521 ;;		On entry : 0/0
  7522 ;;		On exit  : 0/0
  7523 ;;		Unchanged: 0/0
  7524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7525 ;;      Params:         2       0       0       0       0
  7526 ;;      Locals:         0       0       0       0       0
  7527 ;;      Temps:          0       0       0       0       0
  7528 ;;      Totals:         2       0       0       0       0
  7529 ;;Total ram usage:        2 bytes
  7530 ;; Hardware stack levels used:    1
  7531 ;; This function calls:
  7532 ;;		Nothing
  7533 ;; This function is called by:
  7534 ;;		_SleepIfOkay
  7535 ;;		i2_in_low_int
  7536 ;; This function uses a non-reentrant model
  7537 ;;
  7538                           
  7539                           	psect	text49
  7540  00174A                     __ptext49:
  7541                           	opt stack 0
  7542  00174A                     i2_in_high_int:
  7543                           	opt stack 18
  7544                           
  7545                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  7546                           
  7547                           ;incstack = 0
  7548  00174A  0E00               	movlw	0
  7549  00174C  AEF2               	btfss	intcon,7,c	;volatile
  7550  00174E  0E01               	movlw	1
  7551  001750  6E2E               	movwf	?i2_in_high_int,c
  7552  001752  6A2F               	clrf	?i2_in_high_int+1,c
  7553  001754  0012               	return	
  7554  001756                     __end_ofi2_in_high_int:
  7555                           	opt stack 0
  7556                           pclatu	equ	0xFFB
  7557                           pclath	equ	0xFFA
  7558                           tblptru	equ	0xFF8
  7559                           tblptrh	equ	0xFF7
  7560                           tblptrl	equ	0xFF6
  7561                           tablat	equ	0xFF5
  7562                           prodh	equ	0xFF4
  7563                           prodl	equ	0xFF3
  7564                           intcon	equ	0xFF2
  7565                           postinc0	equ	0xFEE
  7566                           fsr0h	equ	0xFEA
  7567                           fsr0l	equ	0xFE9
  7568                           wreg	equ	0xFE8
  7569                           indf1	equ	0xFE7
  7570                           fsr1h	equ	0xFE2
  7571                           fsr1l	equ	0xFE1
  7572                           bsr	equ	0xFE0
  7573                           indf2	equ	0xFDF
  7574                           postinc2	equ	0xFDE
  7575                           postdec2	equ	0xFDD
  7576                           fsr2h	equ	0xFDA
  7577                           fsr2l	equ	0xFD9
  7578                           status	equ	0xFD8
  7579                           
  7580 ;; *************** function i2_check_msg *****************
  7581 ;; Defined at:
  7582 ;;		line 220 in file "../src/messages.c"
  7583 ;; Parameters:    Size  Location     Type
  7584 ;;  qptr            2   45[COMRAM] PTR struct __msg_queue
  7585 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7586 ;; Auto vars:     Size  Location     Type
  7587 ;;		None
  7588 ;; Return value:  Size  Location     Type
  7589 ;;                  1    wreg      unsigned char 
  7590 ;; Registers used:
  7591 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7592 ;; Tracked objects:
  7593 ;;		On entry : 0/0
  7594 ;;		On exit  : 0/0
  7595 ;;		Unchanged: 0/0
  7596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7597 ;;      Params:         2       0       0       0       0
  7598 ;;      Locals:         0       0       0       0       0
  7599 ;;      Temps:          1       0       0       0       0
  7600 ;;      Totals:         3       0       0       0       0
  7601 ;;Total ram usage:        3 bytes
  7602 ;; Hardware stack levels used:    1
  7603 ;; This function calls:
  7604 ;;		Nothing
  7605 ;; This function is called by:
  7606 ;;		_SleepIfOkay
  7607 ;; This function uses a non-reentrant model
  7608 ;;
  7609                           
  7610                           	psect	text50
  7611  001656                     __ptext50:
  7612                           	opt stack 0
  7613  001656                     i2_check_msg:
  7614                           	opt stack 19
  7615                           
  7616                           ;messages.c: 221: return (qptr->queue[qptr->cur_read_ind].full);
  7617                           
  7618                           ;incstack = 0
  7619  001656  EE20 F035          	lfsr	2,53
  7620  00165A  502E               	movf	i2check_msg@qptr,w,c
  7621  00165C  26D9               	addwf	fsr2l,f,c
  7622  00165E  502F               	movf	i2check_msg@qptr+1,w,c
  7623  001660  22DA               	addwfc	fsr2h,f,c
  7624  001662  50DF               	movf	indf2,w,c
  7625  001664  6E30               	movwf	??i2_check_msg& (0+255),c
  7626  001666  5030               	movf	??i2_check_msg,w,c
  7627  001668  0D0D               	mullw	13
  7628  00166A  50F3               	movf	prodl,w,c
  7629  00166C  242E               	addwf	i2check_msg@qptr,w,c
  7630  00166E  6ED9               	movwf	fsr2l,c
  7631  001670  50F4               	movf	prodh,w,c
  7632  001672  202F               	addwfc	i2check_msg@qptr+1,w,c
  7633  001674  6EDA               	movwf	fsr2h,c
  7634  001676  50DF               	movf	indf2,w,c
  7635  001678  0012               	return	
  7636  00167A                     __end_ofi2_check_msg:
  7637                           	opt stack 0
  7638                           pclatu	equ	0xFFB
  7639                           pclath	equ	0xFFA
  7640                           tblptru	equ	0xFF8
  7641                           tblptrh	equ	0xFF7
  7642                           tblptrl	equ	0xFF6
  7643                           tablat	equ	0xFF5
  7644                           prodh	equ	0xFF4
  7645                           prodl	equ	0xFF3
  7646                           intcon	equ	0xFF2
  7647                           postinc0	equ	0xFEE
  7648                           fsr0h	equ	0xFEA
  7649                           fsr0l	equ	0xFE9
  7650                           wreg	equ	0xFE8
  7651                           indf1	equ	0xFE7
  7652                           fsr1h	equ	0xFE2
  7653                           fsr1l	equ	0xFE1
  7654                           bsr	equ	0xFE0
  7655                           indf2	equ	0xFDF
  7656                           postinc2	equ	0xFDE
  7657                           postdec2	equ	0xFDD
  7658                           fsr2h	equ	0xFDA
  7659                           fsr2l	equ	0xFD9
  7660                           status	equ	0xFD8
  7661                           
  7662 ;; *************** function _enter_sleep_mode *****************
  7663 ;; Defined at:
  7664 ;;		line 202 in file "../src/messages.c"
  7665 ;; Parameters:    Size  Location     Type
  7666 ;;		None
  7667 ;; Auto vars:     Size  Location     Type
  7668 ;;		None
  7669 ;; Return value:  Size  Location     Type
  7670 ;;		None               void
  7671 ;; Registers used:
  7672 ;;		None
  7673 ;; Tracked objects:
  7674 ;;		On entry : 0/0
  7675 ;;		On exit  : 0/0
  7676 ;;		Unchanged: 0/0
  7677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7678 ;;      Params:         0       0       0       0       0
  7679 ;;      Locals:         0       0       0       0       0
  7680 ;;      Temps:          0       0       0       0       0
  7681 ;;      Totals:         0       0       0       0       0
  7682 ;;Total ram usage:        0 bytes
  7683 ;; Hardware stack levels used:    1
  7684 ;; This function calls:
  7685 ;;		Nothing
  7686 ;; This function is called by:
  7687 ;;		_SleepIfOkay
  7688 ;; This function uses a non-reentrant model
  7689 ;;
  7690                           
  7691                           	psect	text51
  7692  00175E                     __ptext51:
  7693                           	opt stack 0
  7694  00175E                     _enter_sleep_mode:
  7695                           	opt stack 19
  7696                           
  7697                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  7698                           
  7699                           ;incstack = 0
  7700  00175E  8ED3               	bsf	4051,7,c	;volatile
  7701  001760  0003               	sleep		;# 
  7702  001762  0012               	return	
  7703  001764                     __end_of_enter_sleep_mode:
  7704                           	opt stack 0
  7705  0000                     pclatu	equ	0xFFB
  7706                           pclath	equ	0xFFA
  7707                           tblptru	equ	0xFF8
  7708                           tblptrh	equ	0xFF7
  7709                           tblptrl	equ	0xFF6
  7710                           tablat	equ	0xFF5
  7711                           prodh	equ	0xFF4
  7712                           prodl	equ	0xFF3
  7713                           intcon	equ	0xFF2
  7714                           postinc0	equ	0xFEE
  7715                           fsr0h	equ	0xFEA
  7716                           fsr0l	equ	0xFE9
  7717                           wreg	equ	0xFE8
  7718                           indf1	equ	0xFE7
  7719                           fsr1h	equ	0xFE2
  7720                           fsr1l	equ	0xFE1
  7721                           bsr	equ	0xFE0
  7722                           indf2	equ	0xFDF
  7723                           postinc2	equ	0xFDE
  7724                           postdec2	equ	0xFDD
  7725                           fsr2h	equ	0xFDA
  7726                           fsr2l	equ	0xFD9
  7727                           status	equ	0xFD8
  7728                           pclatu	equ	0xFFB
  7729                           pclath	equ	0xFFA
  7730                           tblptru	equ	0xFF8
  7731                           tblptrh	equ	0xFF7
  7732                           tblptrl	equ	0xFF6
  7733                           tablat	equ	0xFF5
  7734                           prodh	equ	0xFF4
  7735                           prodl	equ	0xFF3
  7736                           intcon	equ	0xFF2
  7737                           postinc0	equ	0xFEE
  7738                           fsr0h	equ	0xFEA
  7739                           fsr0l	equ	0xFE9
  7740                           wreg	equ	0xFE8
  7741                           indf1	equ	0xFE7
  7742                           fsr1h	equ	0xFE2
  7743                           fsr1l	equ	0xFE1
  7744                           bsr	equ	0xFE0
  7745                           indf2	equ	0xFDF
  7746                           postinc2	equ	0xFDE
  7747                           postdec2	equ	0xFDD
  7748                           fsr2h	equ	0xFDA
  7749                           fsr2l	equ	0xFD9
  7750                           status	equ	0xFD8
  7751                           
  7752                           	psect	rparam
  7753  0000                     pclatu	equ	0xFFB
  7754                           pclath	equ	0xFFA
  7755                           tblptru	equ	0xFF8
  7756                           tblptrh	equ	0xFF7
  7757                           tblptrl	equ	0xFF6
  7758                           tablat	equ	0xFF5
  7759                           prodh	equ	0xFF4
  7760                           prodl	equ	0xFF3
  7761                           intcon	equ	0xFF2
  7762                           postinc0	equ	0xFEE
  7763                           fsr0h	equ	0xFEA
  7764                           fsr0l	equ	0xFE9
  7765                           wreg	equ	0xFE8
  7766                           indf1	equ	0xFE7
  7767                           fsr1h	equ	0xFE2
  7768                           fsr1l	equ	0xFE1
  7769                           bsr	equ	0xFE0
  7770                           indf2	equ	0xFDF
  7771                           postinc2	equ	0xFDE
  7772                           postdec2	equ	0xFDD
  7773                           fsr2h	equ	0xFDA
  7774                           fsr2l	equ	0xFD9
  7775                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         218
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     74      78
    BANK0           128     58      60
    BANK1           256      0     216
    BANK2           256     53      53
    BANK3           256      0       0

Pointer List with Targets:

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
		 -> main@uthread_data(BANK2[2]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK2[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK2[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK2[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@t1thread_data(BANK2[2]), 
		 -> main@ic(BANK2[28]), main@uc(BANK2[5]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@t1thread_data(BANK2[2]), 
		 -> main@ic(BANK2[28]), main@uc(BANK2[5]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK2[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK2[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK2[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK2[5]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK2[28]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
		 -> NULL(NULL[0]), main@ic(BANK2[28]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 2
		 -> timer0_int_handler@val(BANK0[2]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t1thread_data(BANK2[2]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 28
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK2[28]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK2[5]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), main@msgtype(BANK2[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> timer0_int_handler@val(BANK0[2]), main@msgbuffer(BANK2[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK2[11]), 

    send_msg@data	PTR void  size(2) Largest target is 28
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), main@t1thread_data(BANK2[2]), 
		 -> main@ic(BANK2[28]), main@uc(BANK2[5]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _timer0_int_handler->_FromMainHigh_recvmsg
    _FromMainHigh_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _i2c_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_timer1_int_handler
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _timer1_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _main->_timer1_lthread
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                55    55      0   10954
                                              0 BANK2     53    53      0
                         _OpenTimer0
                         _OpenTimer1
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
              _start_i2c_slave_reply
                     _timer0_lthread
                     _timer1_lthread
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                         8     0      8     384
                                             23 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                       9     1      8    2710
                                             49 BANK0      9     1      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     302
                                             23 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2021
                                             45 BANK0      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    1798
                                             33 BANK0     12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     294
                                             23 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _start_i2c_slave_reply                                5     3      2     158
                                             23 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      96
                                             23 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      96
                                             23 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          0     0      0     452
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           3     1      2     452
                                             23 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      96
                                             23 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      31
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                0     0      0     283
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             27 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             25 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             23 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     252
                                             23 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      31
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2192
                                             47 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2192
                                             47 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    1969
                                             33 BANK0     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     564
                                             23 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     375
                                             23 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      93
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      62
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    2907
                                             28 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_recv_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    1410
                                             26 COMRAM     1     1      0
                          _ReadUSART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      34
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   2     2      0    1497
                                             26 COMRAM     2     2      0
                         _ReadTimer1
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    1376
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6     893
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     279
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0    5470
                                              9 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  6     6      0    3152
                                              0 BANK0      6     6      0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2     123
                                             45 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (12) _FromMainHigh_recvmsg                                5     1      4    1252
                                             69 COMRAM     5     1      4
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (13) i2_recv_msg                                         14     7      7    1029
                                             55 COMRAM    14     7      7
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                    10    10      0    2222
                                             71 COMRAM     1     1      0
                                              0 BANK0      9     9      0
                 _ToMainHigh_sendmsg
                       _handle_start
 ---------------------------------------------------------------------------------
 (12) _handle_start                                        1     1      0      31
                                             45 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _ToMainHigh_sendmsg                                  4     1      3    1611
                                             67 COMRAM     4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6     998
                                             55 COMRAM    12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6     384
                                             45 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0      96
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                             47 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                             45 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2      96
                                             45 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _OpenTimer1
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _start_i2c_slave_reply
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         _memcpy
     ___lwmod
   _uart_lthread

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
     _WriteTimer1
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _handle_start
   _timer0_int_handler
     _FromMainHigh_recvmsg
       i2_recv_msg
         i2_memcpy
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100     35      35       8       20.7%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      D8       6       84.4%
BITBANK0            80      0       0       3        0.0%
BANK0               80     3A      3C       4       46.9%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     4A      4E       1       61.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     197      11        0.0%
DATA                 0      0     197      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Mon Sep 08 18:23:09 2014

              main@uthread_data 020B        _MQ_Main_Willing_to_block 004D                     _SSPSTATbits 000FC7  
     __end_of_ToMainLow_recvmsg 1444                              bsr 000FE0       __end_of_ToMainLow_sendmsg 1632  
                  __CFG_CP0$OFF 000000               i2recv_msg@msgtype 003B               i2recv_msg@tlength 0042  
                           l106 0702                             l406 14F4                             l408 150A  
                           l409 150C                             l450 0F0C                             l382 1608  
                           l454 0F26                             l383 160A                             l455 0F28  
                           l456 0F34                             l457 0F36                             l698 16D4  
          __size_of_WriteTimer0 0012            __size_of_WriteTimer1 0012                  _FromMainLow_MQ 0136  
                           wreg 000FE8                    __CFG_IESO$ON 000000                    ?_in_high_int 0097  
              ??_init_uart_recv 0099                 ReadTimer1@timer 0003                            l1004 1100  
           i2recv_msg@maxlength 003A                            l3213 14F6                            l3311 11BC  
                          l3305 119C                            l3321 098C                            l3261 0F0E  
                          l3253 0EFC                            l3325 0A08                            l3423 06BE  
                          l3415 0688                            l3425 0708                            l3433 0734  
                          l3441 0780                            l2715 12B0                            l3427 071C  
                          l3435 074A                            l2709 1290                            l2901 08B2  
                          l3453 083A                            l3429 0726                            l3447 07B2  
                          l3439 0764                            l2753 13C4                            l2745 13A6  
                          l3449 07F6                            l3299 117C                            l2917 096C  
                          l2871 1400                            l2769 0AC2                            l2883 1082  
                          l2981 10BC                            l2983 10C8                            l2985 10CE  
                          l2989 10F2                            _LATB 000F8A                            _LATD 000F8C  
                          u2617 16D6                            i1l47 0070                 _FromMainHigh_MQ 0100  
                 __CFG_FCMEN$ON 000000          ?_block_on_To_msgqueues 0001                            _main 0604  
                          fsr0h 000FEA                            fsr1h 000FE2                            fsr0l 000FE9  
                          fsr2h 000FDA                            indf1 000FE7                            fsr1l 000FE1  
                          indf2 000FDF                            fsr2l 000FD9                     main@msgtype 0217  
                    i1_send_msg 0CF8                            pclat 000FFA                     i2_check_msg 1656  
                          prodh 000FF4                            prodl 000FF3           handle_start@data_read 002E  
                          start 00B6                      i2_recv_msg 0B60                   __CFG_FOSC2$ON 000000  
                    i2_send_msg 0DA2       ToMainHigh_recvmsg@msgtype 00AF                  send_msg@length 00A3  
   __size_of_timer0_int_handler 005C                     _Delay1KTCYx 16D0                           ?_main 0001  
                         _T0CON 000FD5                           _T1CON 000FCD                 __end_of___lwmod 110A  
                    i1memcpy@d1 0001                           i1l468 16A6                           i2l253 0CAC  
                         i2l263 0466                           i2l265 013A                           i2l291 03F6  
                         i2l283 02DC                           i2l269 016C                           i2l297 0474  
                    i1memcpy@s1 0003     FromMainHigh_recvmsg@msgtype 0046                           _RCREG 000FAE  
                         _RCSTA 000FAB                           _TMR0H 000FD7                           _TMR1H 000FCF  
                         _TMR0L 000FD6                           _TMR1L 000FCE                           _SPBRG 000FAF  
                         _TRISB 000F93                           _TRISD 000F95                           _TXSTA 000FAC  
                    i2memcpy@d1 002E                      i2memcpy@s1 0030                    ?_init_queues 0001  
     __size_of_enter_sleep_mode 0006                 __end_of_in_main 140E      ToMainLow_recvmsg@maxlength 00B3  
       timer0_lthread@msgbuffer 009D         i2c_configure_slave@addr 0097                           tablat 000FF5  
                         status 000FD8                __end_ofi1_memcpy 1354                __end_ofi2_memcpy 1394  
               __initialization 16B6                    __end_of_main 0852                      _ReadTimer1 1708  
   __size_of_timer1_int_handler 002C      __size_of_ToMainLow_recvmsg 0036      __size_of_ToMainLow_sendmsg 0024  
 __size_of_FromMainHigh_recvmsg 0028           __size_ofi2_in_low_int 002E   __size_of_FromMainHigh_sendmsg 002E  
                        ??_main 00BA                 send_msg@msgtype 00A4                   __activetblptr 000002  
               send_msg@tlength 00A8            __end_of_handle_start 0CF8         ??_uart_recv_int_handler 001B  
                        i1l3163 0EC4                          i1l3371 0066                          i1l2725 1342  
                        i1l2719 1326                          i2l2203 1562                          i2l3103 043A  
                        i2l3015 0132                          i2l3033 0198                          i2l3009 0124  
                        i1l2793 0D30                          i2l3131 05DE                          i2l3123 0552  
                        i2l3115 04D6                          i2l3051 0216                          i2l3035 01C4  
                        i2l3109 0478                          i2l3053 0256                          i2l3045 01FE  
                        i2l3081 0390                      _OpenTimer0 15E8                      _OpenTimer1 14DE  
                        i2l2195 154C                          i2l3075 0346                          i2l3077 0388  
                __CFG_WDTEN$OFF 000000                          i2l2367 12CC                          i2l3363 0FA2  
                        i2l3357 0F98                          i2l2735 1382                          i2l2729 1366  
                        i2l2817 0DDA                          i2l2841 0BA6                          i2l2857 0C2E  
                        i2l2955 0CC8                          i2l2957 0CE0     __end_of_i2c_configure_slave 15C0  
                 ??_SleepIfOkay 0032              __size_of_ReadUSART 001E                          _OSCCON 000FD3  
                        _SPBRGH 000FB0                          _SSPADD 000FC8                          _SSPBUF 000FC9  
__size_of_start_i2c_slave_reply 0104                     ?i1_send_msg 000B   __end_of_start_i2c_slave_reply 0A74  
            timer0_lthread@tptr 0097                     ?i2_recv_msg 0038                    i2_in_low_int 153E  
                   ?i2_send_msg 0038                  __CFG_XINST$OFF 000000              __size_of_OpenUSART 0082  
               _i2c_int_handler 00BA                OpenTimer0@config 0097                          _ic_ptr 00BA  
                     ??___lwmod 009B                   main@msgbuffer 0200                __end_of_init_i2c 1046  
              OpenTimer1@config 0097                          _memcpy 1276                          clear_0 16BC  
                        _uc_ptr 004B                          main@ic 0219                          main@uc 0212  
              __end_of_recv_msg 0970     start_i2c_slave_reply@length 009B                       ??_in_main 009D  
              __end_of_send_msg 0B60           timer0_int_handler@val 0084         i2c_int_handler@i2c_data 0085  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
                   init_queue@i 0099        ToMainLow_recvmsg@msgtype 00AF            __size_of_in_high_int 0010  
               __CFG_FOSC$HSPLL 000000                      __accesstop 0080         __end_of__initialization 16C6  
    __end_of_ToMainHigh_recvmsg 147A      __end_of_ToMainHigh_sendmsg 1656     __end_of_init_timer1_lthread 16F6  
           __end_of_SleepIfOkay 1314                  __pcstackCOMRAM 0001          __size_ofi2_in_high_int 000C  
                   ?_ReadTimer1 0001              __size_of_check_msg 0032               __end_of_ReadUSART 16B6  
     timer0_int_handler@msgtype 0082             __size_ofi1_send_msg 00AA                       ?i1_memcpy 0001  
 __size_of_InterruptHandlerHigh 0FD8     __end_of_InterruptHandlerLow 00B6                       ?i2_memcpy 002E  
                 _ToMainHigh_MQ 016C             __size_ofi2_recv_msg 00D2                _enter_sleep_mode 175E  
           __size_ofi2_send_msg 00AA            timer1_lthread@length 00B5                   ReadUSART@data 0001  
             __end_of_OpenUSART 0F62                   check_msg@qptr 0097            timer1_lthread@retval 00B9  
       ??_block_on_To_msgqueues 009D            __size_of_init_queues 0056                      __pbssBANK1 0100  
                   ?_OpenTimer0 0001                     ?_OpenTimer1 0001                      __pnvCOMRAM 004B  
       __end_of_i2c_int_handler 0604                    ?i2_check_msg 002E              timer1_lthread@tptr 00B1  
             recv_msg@maxlength 00A3                 recv_msg@msgtype 00A4                 recv_msg@tlength 00AB  
         __size_of_handle_start 00C6                    ?_Delay1KTCYx 0001                WriteTimer0@timer 0030  
                       ?_memcpy 0097                WriteTimer1@timer 0003                   ??_WriteTimer0 0030  
                 ??_WriteTimer1 0003         __size_of_timer0_lthread 000E         __size_of_timer1_lthread 005E  
                    ??i1_memcpy 0007                      ??i2_memcpy 0034                i1send_msg@length 000D  
                 i2_in_high_int 174A                         _SSPCON1 000FC6                         _SSPCON2 000FC5  
                       _SSPSTAT 000FC7             __size_of_ReadTimer1 0012               __end_of_check_msg 14DE  
                     ?_init_i2c 0097                     _SleepIfOkay 12C6                       ?_recv_msg 00A1  
                    _in_low_int 1394                    _handle_start 0C32                         __Hparam 0000  
                     ?_send_msg 00A1                         __Lparam 0000      __end_of_timer0_int_handler 1220  
              init_uart_recv@uc 0097                         ___lwmod 10AA                 __CFG_STVREN$OFF 000000  
                       __pcinit 16B6                 __size_of_memcpy 0050                      _init_queue 1046  
                       __ramtop 0400             __size_of_OpenTimer0 0026             __size_of_OpenTimer1 0032  
                       __ptext0 0604                         __ptext1 147A                         __ptext2 110A  
                       __ptext3 10AA                         __ptext4 1510                         __ptext5 0A74  
                       __ptext6 173C                         __ptext7 0970                         __ptext8 167A  
                       __ptext9 16E4                       _T0CONbits 000FD5                         _in_main 13D2  
                     _T1CONbits 000FCD             __end_of_WriteTimer0 172C             __end_of_WriteTimer1 1708  
                ?i2_in_high_int 002E                  __pintcode_body 0F62    __end_of_FromMainHigh_recvmsg 15E8  
          end_of_initialization 16C6         timer1_lthread@msgbuffer 00B7    __end_of_FromMainHigh_sendmsg 153E  
__size_of_uart_recv_int_handler 0094      FromMainHigh_sendmsg@length 00B0                         memcpy@d 009D  
                       memcpy@n 009B                         memcpy@s 009F   __end_of_uart_recv_int_handler 0EE0  
                    ??_init_i2c 0099     i2c_int_handler@data_written 0083                   __Lmediumconst 0000  
                       int_func 0F62                    ??i1_send_msg 0011                   ?_uart_lthread 0097  
       __size_of_init_uart_recv 001E                ?_i2c_int_handler 0001                    ??i2_recv_msg 003F  
                    ??_recv_msg 00A8                    ??i2_send_msg 003E                      ??_send_msg 00A7  
    __end_of_timer1_int_handler 1598                       _RCSTAbits 000FAB                         postdec2 000FDD  
                       postinc0 000FEE                         postinc2 000FDE       ToMainHigh_sendmsg@msgtype 0044  
            __end_ofi1_send_msg 0DA2     FromMainHigh_sendmsg@msgtype 00AD                       _TRISCbits 000F94  
            __end_ofi2_recv_msg 0C32              __end_ofi2_send_msg 0E4C   FromMainHigh_recvmsg@maxlength 004A  
      timer1_int_handler@result 001B                  ??_uart_lthread 009F                       _TXSTAbits 000FAC  
                    main@length 0218                     ?_in_low_int 0099           timer0_lthread@msgtype 0099  
         _start_i2c_slave_reply 0970    __size_of_i2c_configure_slave 0028            __size_ofi2_check_msg 0024  
      __end_of_enter_sleep_mode 1764                    ??_ReadTimer1 0003              _ToMainHigh_recvmsg 1444  
                     i1memcpy@d 0007              _ToMainHigh_sendmsg 1632                       i1memcpy@n 0005  
                     i1memcpy@s 0009                  _timer0_lthread 173C                     ?_init_queue 0097  
                     i2memcpy@d 0034                     _WriteTimer0 171A                     _WriteTimer1 16F6  
                     i2memcpy@n 0032                       i2memcpy@s 0036                  _timer1_lthread 110A  
                __end_of_memcpy 12C6               _enable_interrupts 1756            __size_of_Delay1KTCYx 0014  
           ?_ToMainHigh_recvmsg 00AF                 ??i2_in_high_int 0030        i2c_int_handler@data_read 0088  
           ?_ToMainHigh_sendmsg 0044              ?_enable_interrupts 0001             start_initialization 16B6  
                 ??_in_high_int 0099                       _ReadUSART 1698               __size_ofi1_memcpy 0040  
             __size_ofi2_memcpy 0040             ??_enable_interrupts 0097                    ??_OpenTimer0 0097  
                  ??_OpenTimer1 0097  __size_of_block_on_To_msgqueues 005C              __end_of_ReadTimer1 171A  
 __end_of_block_on_To_msgqueues 11C4                       _OpenUSART 0EE0    __end_of_InterruptHandlerHigh 0FE0  
                    init_i2c@ic 0097            ??_ToMainHigh_recvmsg 00B3            ??_ToMainHigh_sendmsg 0047  
        __end_of_timer0_lthread 174A        i2c_int_handler@error_buf 0080          __end_of_timer1_lthread 1168  
     __end_of_enable_interrupts 175E                        ??_memcpy 009D           timer1_lthread@msgtype 00B3  
          _FromMainHigh_recvmsg 15C0            _FromMainHigh_sendmsg 1510    __size_of_init_timer1_lthread 0012  
            __end_of_OpenTimer0 160E              __end_of_OpenTimer1 1510        i2c_int_handler@msg_ready 0087  
                   __pbssCOMRAM 004D                      ?_ReadUSART 0001                   ??_init_queues 009A  
                 __pcstackBANK0 0080                   __pcstackBANK2 0200             __size_of_in_low_int 003E  
      start_i2c_slave_reply@msg 0097             __CFG_CCP2MX$DEFAULT 000000                 Delay1KTCYx@unit 0097  
      ToMainLow_sendmsg@msgtype 0017    __size_of_InterruptHandlerLow 009E             __end_of_in_high_int 173C  
                    ?_OpenUSART 0097                    ?_SleepIfOkay 0001           ToMainLow_recvmsg@data 00B1  
                  _ToMainLow_MQ 01A2             __size_of_init_queue 0064                  _init_uart_recv 167A  
                     _check_msg 14AC                       __pnvBANK0 00BA          ?_start_i2c_slave_reply 0097  
             __size_of_init_i2c 0066                    recv_msg@data 00A6                    recv_msg@qmsg 00AD  
                  recv_msg@slot 00AA                    recv_msg@qptr 00A1               __size_of_recv_msg 011E  
                     __pintcode 0008               __size_of_send_msg 00EC                 ?_timer0_lthread 0097  
                      ?___lwmod 0097           ?_FromMainHigh_recvmsg 0046                 ?_timer1_lthread 00B1  
         ?_FromMainHigh_sendmsg 00AD                     __pintcodelo 0018          ToMainHigh_recvmsg@data 00B1  
          __end_of_uart_lthread 14AC      i2c_int_handler@msg_to_send 0086                        ?_in_main 009B  
             WriteTimer0@timer0 002E              _timer0_int_handler 11C4               WriteTimer1@timer1 0001  
           uart_lthread@msgtype 0099           ToMainLow_sendmsg@data 0018             ?_timer0_int_handler 0001  
              uart_lthread@uptr 0097          __end_of_init_uart_recv 1698             __end_of_init_queues 1276  
               i2check_msg@qptr 002E                      ?_check_msg 0097                        _IPR1bits 000F9F  
                      _PIE1bits 000F9D                   ?i2_in_low_int 0030                        _PIR1bits 000F9E  
        ToMainHigh_sendmsg@data 0045                        _RCONbits 000FD0                __CFG_WDTPS$32768 000000  
          ??_timer0_int_handler 004B      __size_of_enable_interrupts 0008               i1send_msg@msgtype 000E  
             i1send_msg@tlength 0012            timer0_lthread@length 009B              _timer1_int_handler 156C  
                      i1_memcpy 1314            _InterruptHandlerHigh 0008                     ??_ReadUSART 0001  
                      i2_memcpy 1354            timer0_lthread@msgval 009F        FromMainHigh_recvmsg@data 0048  
                   _in_high_int 172C                    send_msg@data 00A5             _i2c_configure_slave 1598  
                  send_msg@qmsg 00AB                    send_msg@slot 00AA                    send_msg@qptr 00A1  
         uart_lthread@msgbuffer 009D             ?_timer1_int_handler 0001                 ?_init_uart_recv 0097  
                   ??_OpenUSART 0099                 OpenUSART@config 009C                  ??i2_in_low_int 0032  
         _uart_recv_int_handler 0E4C                    ??_in_low_int 009B                        __Hrparam 0000  
          ?_i2c_configure_slave 0001                        __Lrparam 0000               ?_enter_sleep_mode 0001  
        ??_FromMainHigh_recvmsg 004A          ??_FromMainHigh_sendmsg 00B0            ??_timer1_int_handler 001B  
      __size_of_i2c_int_handler 054A              ??_enter_sleep_mode 002E                __size_of___lwmod 0060  
                  ??_init_queue 0099                    ?_WriteTimer0 002E                    ?_WriteTimer1 0001  
      FromMainHigh_sendmsg@data 00AE         ToMainLow_sendmsg@length 001A               main@t0thread_data 020D  
         ?_InterruptHandlerHigh 0001                __size_of_in_main 003C               i2send_msg@msgtype 003B  
   ToMainHigh_recvmsg@maxlength 00B3               i2send_msg@tlength 003F         init_timer1_lthread@tptr 0097  
                   _init_queues 1220              __end_of_in_low_int 13D2                        __ptext10 1220  
                      __ptext11 1046                        __ptext20 16D0                        __ptext12 0FE0  
                      __ptext21 140E                        __ptext13 1598                        __ptext30 1698  
                      __ptext22 1444                        __ptext14 1756                        __ptext31 156C  
                      __ptext23 0852                        __ptext15 1168                        __ptext40 15C0  
                      __ptext32 16F6                        __ptext24 1276                        __ptext16 13D2  
                      __ptext41 0B60                        __ptext33 160E                        __ptext25 0EE0  
                      __ptext17 1394                        __ptext50 1656                        __ptext42 00BA  
                      __ptext34 0CF8                        __ptext26 14DE                        __ptext18 172C  
                      __ptext51 175E                        __ptext43 0C32                        __ptext35 1314  
                      __ptext27 15E8                        __ptext19 14AC                        __ptext44 1632  
                      __ptext36 1708                        __ptext45 0DA2                        __ptext29 0E4C  
                      __ptext46 1354                        __ptext38 11C4                        __ptext47 12C6  
                      __ptext39 171A                        __ptext48 153E                        __ptext49 174A  
                i1send_msg@data 000F                  i1send_msg@qmsg 0015                  i1send_msg@slot 0014  
                i1send_msg@qptr 000B              uart_lthread@length 009B        timer0_int_handler@length 0080  
                      _init_i2c 0FE0             _init_timer1_lthread 16E4                   __size_of_main 024E  
                 ??i2_check_msg 0030               main@t1thread_data 0210                     ??_check_msg 0099  
            __end_of_init_queue 10AA            __size_of_SleepIfOkay 004E                        _recv_msg 0852  
         ??_i2c_configure_slave 0097                        _send_msg 0A74                  init_queue@qptr 0097  
         __size_of_uart_lthread 0032                  i2recv_msg@data 003D                  i2recv_msg@qmsg 0044  
                 ??_Delay1KTCYx 0097                  i2recv_msg@slot 0041                  i2recv_msg@qptr 0038  
           _InterruptHandlerLow 0018            ?_init_timer1_lthread 0097                     _OSCTUNEbits 000F9B  
                    _INTCONbits 000FF2                  OpenUSART@spbrg 0097                        memcpy@d1 0097  
                      memcpy@s1 0099           __end_ofi2_in_high_int 1756    i2c_int_handler@overrun_error 0084  
              i2send_msg@length 003A                        intlevel1 0000                        intlevel2 0000  
          ?_InterruptHandlerLow 0001         ??_start_i2c_slave_reply 0099                ___lwmod@dividend 0097  
        ?_uart_recv_int_handler 0001                    _uart_lthread 147A           _block_on_To_msgqueues 1168  
                 ?_handle_start 0001                ??_timer0_lthread 009F     __size_of_ToMainHigh_recvmsg 0036  
   __size_of_ToMainHigh_sendmsg 0024                      _OSCCONbits 000FD3                ??_timer1_lthread 00B9  
      ToMainHigh_sendmsg@length 0047             __end_ofi2_check_msg 167A           ??_init_timer1_lthread 0099  
        ??_InterruptHandlerHigh 0089               _ToMainLow_recvmsg 140E               _ToMainLow_sendmsg 160E  
            main@last_reg_recvd 020F                 ___lwmod@divisor 0099            __end_ofi2_in_low_int 156C  
            ?_ToMainLow_recvmsg 00AF             __end_of_Delay1KTCYx 16E4               ??_i2c_int_handler 0048  
               ___lwmod@counter 009B              ?_ToMainLow_sendmsg 0017                     _SSPCON1bits 000FC6  
                   _SSPCON2bits 000FC5                  i2send_msg@data 003C           ??_InterruptHandlerLow 001D  
           ??_ToMainLow_recvmsg 00B3                  i2send_msg@qmsg 0042                  i2send_msg@slot 0041  
                i2send_msg@qptr 0038             ??_ToMainLow_sendmsg 001A                  ??_handle_start 002E  
                  _USART_Status 004E  
